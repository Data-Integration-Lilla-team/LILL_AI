path,page,text,parsed_text,topics,topics2perc
dataExtraction\data_test\rootfolder\universita\algoBigData\00-introduzione-corso-01.pdf,0,"9/29/2021
100-introduzione -corso -01
1Next Generation Computing Models
Introduzione
2obiettivi formativi
•introduzione al modello di calcolo del 
quantum computing con un approccio 
informatico
•introduzione ai modelli di calcolo 
centrati sui dati, di interesse per le 
tecnologie big data1
2", introduzione corso next generation computing models introduzione obiettivi formativi •introduzione modello calcolo quantum computing approccio informatico •introduzione modelli calcolo centrati dati interesse tecnologie big data ,[8],"[(8, 0.96249056)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\00-introduzione-corso-01.pdf,1,"9/29/2021
200-introduzione -corso -01
3modelli di calcolo e informatica
•macchina di Turing
•lambda calcolo
•modelli per il calcolo parallelo e 
distribuito
•modelli per gerarchie di memorie
•molti altrimodell i
4programma
•quantum computing
–qubit
–coppie di qubit
–registri
–porte con uno o piu'qubit
–no cloning theorem
–l'operatore di Hadamard
–computazioni reversibili
–l'algoritmo di Bernstein Vazirani
–l'algoritmo di Shor
–teoria della complessità e quantum computing3
4", introduzione corso modelli calcolo informatica •macchina turing •lambda calcolo •modelli calcolo parallelo distribuito •modelli gerarchie memorie •molti altrimodell programma •quantum computing –qubit –coppie qubit –registri –porte piuqubit –no cloning theorem –loperatore hadamard –computazioni reversibili –lalgoritmo bernstein vazirani –lalgoritmo shor –teoria complessità quantum computing ,[3],"[(3, 0.96665436)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\00-introduzione-corso-01.pdf,2,"9/29/2021
300-introduzione -corso -01
5programma
•teoria della complessità e big data
–la classe Pspazio
–Pspazio -completezza
–teorema di Savitch
–le classi L e NL
–NL-completezza
–NL e co -NL
–algoritmi randomizzati e la classe BPP
6testi consigliati (consultazione )
•E. G. Rieffel , W. H. Polak
Quantum Computing: a Gentle Introduction
MIT Press 
•N. S. Yanofsky , M. A. Mannucci
Quantum Computing for Computer Scientists
Cambridge 
•Michael Sipser
Introduction to the Theory of Computation
Thompson
•lezioni suYoutube di Umesh Vazirani (notevoli!)5
6", introduzione corso programma •teoria complessità big data –la classe pspazio –pspazio completezza –teorema savitch –le classi nl –nl completezza –nl co nl –algoritmi randomizzati classe bpp testi consigliati consultazione •e g rieffel w h polak quantum computing gentle introduction mit press •n s yanofsky m a mannucci quantum computing for computer scientists cambridge •michael sipser introduction to the theory of computation thompson •lezioni suyoutube umesh vazirani notevoli ,[8],"[(8, 0.9816249)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\05-quantum-introduzione-03.pdf,0,"9/29/2021
105-quantum -introduzione -03
1Next Generation Computing Models
Quantum Computing
Introduzione
quantum computing
•un nuovo modello di calcolo che
–potrebbe essere fisicamente realizzabile
–potrebbe avere un vantaggio esponenziale, in alcuni 
casi, rispetto ai computer tradizionali 
•il modello pone una seria sfida alla strong 
Church -Turing Thesis
–che dice che qualunque modello di calcolo può essere 
simulato da una Macchina di Turing con al più uno 
svantaggio polinomiale in termini di tempo
21
2", quantum introduzione next generation computing models quantum computing introduzione quantum computing •un nuovo modello calcolo –potrebbe essere fisicamente realizzabile –potrebbe avere vantaggio esponenziale alcuni casi rispetto computer tradizionali •il modello pone seria sfida strong church turing thesis –che dice qualunque modello calcolo può essere simulato macchina turing svantaggio polinomiale termini tempo ,[5],"[(5, 0.98042727)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\05-quantum-introduzione-03.pdf,1,"9/29/2021
205-quantum -introduzione -03
quantum e non -quantum
•anche se il quantum computing dovesse 
affermarsi è ipotizzabile che i computer 
tradizionali continuino ad essere usati per 
risolvere la maggior parte dei problemi
3
un po’ di fisica
•per capire le basi del quantum computing occorre 
un pizzico di fisica
–i parametri fisici (energia, momento, spin, ….) di una 
particella elementare (es. elettrone) sono quantizzati e 
possono assumere valori solo in un insieme discreto
–gli stessi parametri ad un certo istante non hanno un 
valore che è un singolo numero; un parametro è 
invece associato a un’onda di probabilità 
(superposition )
–un parametro assume un singolo valore (collassa a un 
singolo numero) quando viene osservato 
43
4", quantum introduzione quantum quantum •anche quantum computing dovesse affermarsi ipotizzabile computer tradizionali continuino essere usati risolvere maggior parte problemi po’ fisica •per capire basi quantum computing occorre pizzico fisica –i parametri fisici energia momento spin … particella elementare es elettrone quantizzati possono assumere valori solo insieme discreto –gli parametri certo istante valore singolo numero parametro invece associato un’onda probabilità superposition –un parametro assume singolo valore collassa singolo numero quando viene osservato ,[5],"[(5, 0.98570955)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\05-quantum-introduzione-03.pdf,2,"9/29/2021
305-quantum -introduzione -03
qubit
•i computer tradizionali usano i bit, i cui valori 
possono essere 0 o 1
•i quantum computer usano i qubit
–normalmente particelle subatomiche come elettroni o 
fotoni in superposition
•generare e manipolare qubit è difficile
–IBM, Google, Rigetti Computing usano circuiti 
superconduttori raffreddati a temperature più fredde 
dello spazio profondo
–IonQ imprigiona atomi in campi elettromagnetici in 
camere ultra -high vacuum 5
due principali direzioni di lavoro
•sperimentale
–costruzione di computer che sfruttano i fenomeni 
della meccanica quantistica
•teorica
–quantum algorithms
•progetto di algoritmi che sfruttano il modello di calcolo 
della meccanica quantistica
–quantum protocols
•progetto di protocolli per trasmettere e ricevere 
informazioni sfruttando il modello di calcolo della 
meccanica quantistica
65
6", quantum introduzione qubit •i computer tradizionali usano bit valori possono essere •i quantum computer usano qubit –normalmente particelle subatomiche elettroni fotoni superposition •generare manipolare qubit difficile –ibm google rigetti computing usano circuiti superconduttori raffreddati temperature fredde spazio profondo –ionq imprigiona atomi campi elettromagnetici camere ultra high vacuum due principali direzioni lavoro •sperimentale –costruzione computer sfruttano fenomeni meccanica quantistica •teorica –quantum algorithms •progetto algoritmi sfruttano modello calcolo meccanica quantistica –quantum protocols •progetto protocolli trasmettere ricevere informazioni sfruttando modello calcolo meccanica quantistica ,[1],"[(1, 0.9865613)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\05-quantum-introduzione-03.pdf,3,"9/29/2021
405-quantum -introduzione -03
assiomi
studiamo un modello di calcolo che consente di 
astrarre rispetto alla meccanica quantistica, basato 
su tre assiomi
1.superposition
2.misura
3.evoluzione unitaria
7
ostacoli
•vettori e matrici
•numeri complessi
•un po’ di trigonometria
•pochissimo calcolo delle probabilità
87
8", quantum introduzione assiomi studiamo modello calcolo consente astrarre rispetto meccanica quantistica basato tre assiomi superposition misura evoluzione unitaria ostacoli •vettori matrici •numeri complessi •un po’ trigonometria •pochissimo calcolo probabilità ,[5],"[(5, 0.96249145)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\10-quantum-un-qubit-04.pdf,0,"9/29/2021
110-quantum -un-qubit -04
1Next Generation Computing Models
Quantum Computing
Un qubit
qubit
•nel calcolo tradizionale un bit può essere in 
alternativa nello stato 0o nello stato 1
•nel quantum computing si usano i qubit
•un qubit può essere simultaneamente nello stato 
0e nello stato 1(una superposition dei due stati)
21
2", quantum qubit next generation computing models quantum computing qubit qubit •nel calcolo tradizionale bit può essere alternativa stato o stato •nel quantum computing usano qubit •un qubit può essere simultaneamente stato e stato una superposition due stati ,"[1, 4, 5]","[(1, 0.29927978), (4, 0.22873636), (5, 0.44938996)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\10-quantum-un-qubit-04.pdf,1,"9/29/2021
210-quantum -un-qubit -04
qubit –ampiezze
•i due stati di base di un qubit si indicano di solito 
con |0e |1
•un qubit si trova in generale in uno stato descritto 
da 𝛼0|0+𝛼1|1, dove 𝛼0e 𝛼1sono numeri 
complessi ( 𝛼0,𝛼1∈𝕔) chiamati ampiezze
–con il vincolo |𝛼0|2+|𝛼1|2=1
–si ricorda che il modulo di un numero complesso z=
𝑥+𝑦𝑖è definito come 𝑧=𝑥2+𝑦2
–quindi 𝑧2=𝑥2+𝑦2
3
qubit –esempi 
•ad esempio un qubit può trovarsi nello 
stato(Τ12+Τ12𝑖)|ۧ0+ൗ1
2|ۧ1
–si noti come |(Τ12+Τ12𝑖)|2+|ൗ1
2|2=(
)Τ14+
Τ14+Τ12=1
•oppure un qubit può trovarsi nello stato 
ൗ1
2|0+ൗ1
2|1
43
4", quantum qubit qubit –ampiezze •i due stati base qubit indicano solito e  •un qubit trova generale stato descritto 𝛼𝛼 𝛼e 𝛼sono numeri complessi 𝛼𝛼∈𝕔 chiamati ampiezze –con vincolo 𝛼𝛼 –si ricorda modulo numero complesso z 𝑥𝑦𝑖è definito 𝑧𝑥𝑦 –quindi 𝑧𝑥𝑦 qubit –esempi •ad esempio qubit può trovarsi statoττ𝑖ۧൗ ۧ –si noti ττ𝑖ൗ τ ττ •oppure qubit può trovarsi stato ൗ ൗ  ,[5],"[(5, 0.976918)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\10-quantum-un-qubit-04.pdf,2,"9/29/2021
310-quantum -un-qubit -04
qubit –misura
•quando un qubit è isolato si trova in una 
superposition
•quando viene misurato (osservato) collassa con 
probabilità |𝛼0|2a |0e con probabilità |𝛼1|2a 
|1
•dopo l’osservazione i valori di ampiezza sono 
irrimediabilmente perduti
–la misura disturba lo stato del sistema
5
qualche esempio sui numeri complessi
ricorda che 𝑖=−1e che 𝑖2=−1
•semplifica 𝑧=2+3𝑖−5𝑖+6
–𝑧=8−2𝑖
•semplifica 𝑧=(2+𝑖)2
–𝑧=4+4𝑖+𝑖2=4+4𝑖−1=3+4𝑖
•semplifica 𝑧=𝑖3(7+5𝑖)
–𝑧=−i7+5i=−7i−5𝑖2=−7𝑖+5=5−7i
65
6", quantum qubit qubit –misura •quando qubit isolato trova superposition •quando viene misurato osservato collassa probabilità 𝛼a e probabilità 𝛼a  •dopo l’osservazione valori ampiezza irrimediabilmente perduti –la misura disturba stato sistema qualche esempio numeri complessi ricorda 𝑖−e 𝑖− •semplifica 𝑧𝑖−𝑖 –𝑧−𝑖 •semplifica 𝑧𝑖 –𝑧𝑖𝑖𝑖−𝑖 •semplifica 𝑧𝑖𝑖 –𝑧−ii−i−𝑖−𝑖−i ,"[2, 5]","[(2, 0.58319813), (5, 0.38821882)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\10-quantum-un-qubit-04.pdf,3,"9/29/2021
410-quantum -un-qubit -04
qualche esempio sui numeri complessi
ricorda che il complesso coniugato di un numero 
complesso z=𝑥+𝑦𝑖è definito come തz=𝑥−𝑦𝑖
•calcola il complesso coniugato di 𝑧=2+3𝑖
–ҧ𝑧=2−3𝑖
•calcola il complesso coniugato di 𝑧=−𝑖
–ҧ𝑧=𝑖
7
qualche esempio sui qubit
•considera il qubit|ۧ𝜓=3
2|ۧ0−1
2|ۧ1
•quello mostrato è uno stato nel quale il qubit può 
effettivamente trovarsi?
–sì perché 3
22
+−1
22
=3
4+1
4=1
•se verrà misurato, con che probabilità il risultato 
della misura sarà |ۧ0?
–3
22
=3
4
87
8", quantum qubit qualche esempio numeri complessi ricorda complesso coniugato numero complesso z𝑥𝑦𝑖è definito തz𝑥−𝑦𝑖 •calcola complesso coniugato 𝑧𝑖 –ҧ𝑧−𝑖 •calcola complesso coniugato 𝑧−𝑖 –ҧ𝑧𝑖 qualche esempio qubit •considera qubitۧ𝜓 ۧ− ۧ •quello mostrato stato qubit può effettivamente trovarsi –sì − •se verrà misurato probabilità risultato misura ۧ – ,"[2, 5]","[(2, 0.20459595), (5, 0.7678057)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\10-quantum-un-qubit-04.pdf,4,"9/29/2021
510-quantum -un-qubit -04
qualche esempio sui qubit
•considera il qubit|ۧ𝜓=1
2|ۧ0−𝑖1
2|ۧ1
•quello mostrato è uno stato nel quale il qubit può 
effettivamente trovarsi?
–sì perché 1
22
+−𝑖1
22
=1
2+1
2=1
•se viene misurato, con che probabilità il risultato 
della misura sarà |ۧ0?
–1
2
9
qubit –rappresentazione vettoriale
•possiamo rappresentare lo stato descritto da 
𝛼0|0+𝛼1|1, in modo sintetico con  il vettore 
di numeri complessi 𝛼0
𝛼1
•quindi lo spazio degli stati di un qubit è uno 
spazio bidimensionale complesso
–detto spazio di Hilbert
•il vincolo di normalizzazione ci dice che il 
vettore di un qubit è anche unitario
–un vettore è unitario quando ha modulo (lunghezza) 
uguale a 1; si chiama anche versore 109
10", quantum qubit qualche esempio qubit •considera qubitۧ𝜓 ۧ−𝑖 ۧ •quello mostrato stato qubit può effettivamente trovarsi –sì −𝑖 •se viene misurato probabilità risultato misura ۧ – qubit –rappresentazione vettoriale •possiamo rappresentare stato descritto 𝛼𝛼 modo sintetico vettore numeri complessi 𝛼 𝛼 •quindi spazio stati qubit spazio bidimensionale complesso –detto spazio hilbert •il vincolo normalizzazione dice vettore qubit unitario –un vettore unitario quando modulo lunghezza uguale chiama versore ,"[1, 3]","[(1, 0.9410085), (3, 0.04196442)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\10-quantum-un-qubit-04.pdf,5,"9/29/2021
610-quantum -un-qubit -04
qubit –stati di base
•possiamo rappresentare lo stato descritto da 𝛼0=
1, e 𝛼1=0con il vettore 1
0
–quindi scrivere |0è equivalente a scrivere 1
0
•inoltre possiamo rappresentare lo stato descritto 
da 𝛼0=0, e 𝛼1=1con il vettore 0
1
–quindi scrivere |1è equivalente a scrivere 0
1
11
qubit –rappresentazione vettoriale
•quindi possiamo scrivere 𝛼0|0+𝛼1|1in forma 
vettoriale come  𝛼01
0+𝛼10
1=𝛼0
𝛼1
–i vettori 1
0e 0
1sono le basi della 
rappresentazione
•la notazione con le parentesi |𝑥non è che una 
forma sintetica per la rappresentazione vettoriale
–si chiama ket-notation ed è stata concepita da Dirac
–la forma |𝑥denota con il nome 𝑥un vettore colonna
1211
12", quantum qubit qubit –stati base •possiamo rappresentare stato descritto 𝛼 𝛼con vettore –quindi scrivere è equivalente scrivere •inoltre possiamo rappresentare stato descritto 𝛼 𝛼con vettore –quindi scrivere è equivalente scrivere qubit –rappresentazione vettoriale •quindi possiamo scrivere 𝛼𝛼in forma vettoriale 𝛼 𝛼 𝛼 𝛼 –i vettori e sono basi rappresentazione •la notazione parentesi 𝑥non forma sintetica rappresentazione vettoriale –si chiama ket notation stata concepita dirac –la forma 𝑥denota nome 𝑥un vettore colonna ,[3],"[(3, 0.98084813)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\10-quantum-un-qubit-04.pdf,6,"9/29/2021
710-quantum -un-qubit -04
qubit –rappresentazione vettoriale
•quindi
–un qubit è quindi un vettore unitario in uno spazio 
vettoriale bidimensionale complesso
–la notazione usata per descrivere qubit è una 
notazione per descrivere vettori
13
es. sulla rappresentazione vettoriale
•considera il qubit|ۧ𝜓=3
2|ۧ0−1
2|ۧ1
•mostrane la reppresentazione vettoriale
–|ۧ𝜓=3
21
0−1
20
1=3
2
−1
2
1413
14", quantum qubit qubit –rappresentazione vettoriale •quindi –un qubit quindi vettore unitario spazio vettoriale bidimensionale complesso –la notazione usata descrivere qubit notazione descrivere vettori es rappresentazione vettoriale •considera qubitۧ𝜓 ۧ− ۧ •mostrane reppresentazione vettoriale –ۧ𝜓 − − ,"[0, 1, 3]","[(0, 0.21836437), (1, 0.23313765), (3, 0.51804286)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\10-quantum-un-qubit-04.pdf,7,"9/29/2021
810-quantum -un-qubit -04
qubit –interpretazione geometrica
•se assumiamo, per semplicità, che 𝛼0e 𝛼1siano 
numeri reali , possiamo rappresentare 𝛼01
0+
𝛼10
1con il disegno:
150
1= |1
1
0=|0circonferenza unitaria
𝛼0𝛼1tutti i qubit con ampiezze reali
sono un punto su questa
circonferenza
qubit –interpretazione geometrica
•ad esempio se 𝛼0=ൗ1
2e 𝛼1=ൗ1
2abbiamo
160
1= |1
1
0=|0ൗ𝜋4ൗ1
2|0+ൗ1
2|1
𝛼0=cos𝜋
4=ൗ1
2𝛼1=sin𝜋
4=ൗ1
215
16", quantum qubit qubit –interpretazione geometrica •se assumiamo semplicità 𝛼e 𝛼siano numeri reali possiamo rappresentare 𝛼 𝛼 con disegno  circonferenza unitaria 𝛼𝛼tutti qubit ampiezze reali punto circonferenza qubit –interpretazione geometrica •ad esempio 𝛼ൗ e 𝛼ൗ abbiamo  ൗ𝜋ൗ ൗ  𝛼cos𝜋 ൗ 𝛼sin𝜋 ൗ ,[5],"[(5, 0.96666014)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\10-quantum-un-qubit-04.pdf,8,"9/29/2021
910-quantum -un-qubit -04
qubit –interpretazione geometrica
•consideriamo ora un generico stato |𝜓con 
ampiezze (per semplicità) reali ed osserviamo gli 
angoli della sua rappresentazione geometrica
170
1= |1
1
0=|0𝜃|𝜓
qubit –interpretazione geometrica
•possiamo esprimere le componenti di |𝜓usando 
gli angoli che forma con gli assi
•abbiamo che |𝜓=cos𝜃|0+sin𝜃|1=cos𝜃
sin𝜃
180
1= |1
1
0=|0𝜃|𝜓17
18", quantum qubit qubit –interpretazione geometrica •consideriamo ora generico stato 𝜓con ampiezze per semplicità reali osserviamo angoli rappresentazione geometrica  𝜃𝜓 qubit –interpretazione geometrica •possiamo esprimere componenti 𝜓usando angoli forma assi •abbiamo 𝜓cos𝜃sin𝜃cos𝜃 sin𝜃  𝜃𝜓 ,[5],"[(5, 0.95907116)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\10-quantum-un-qubit-04.pdf,9,"9/29/2021
1010-quantum -un-qubit -04
qubit –interpretazione geometrica
•se misuriamo |𝜓=cos𝜃|0+sin𝜃|1
otteniamo |0con probabilità cos𝜃2e |1con 
probabilità sin𝜃2
190
1= |1
1
0=|0𝜃|𝜓
qubit –interpretazione geometrica
•possiamo riscrivere sin𝜃2=cosΤ𝜋2−𝜃2
•quindi la probabilità di misurare uno |0o un  |1
è data dal coseno al quadrato dell’angolo che lo 
stato ha con ciascuno di essi 
200
1= |1
1
0=|0𝜃|𝜓
ൗ𝜋2−𝜃19
20", quantum qubit qubit –interpretazione geometrica •se misuriamo 𝜓cos𝜃sin𝜃 otteniamo con probabilità cos𝜃e con probabilità sin𝜃  𝜃𝜓 qubit –interpretazione geometrica •possiamo riscrivere sin𝜃cosτ𝜋−𝜃 •quindi probabilità misurare o  data coseno quadrato dell’angolo stato ciascuno essi  𝜃𝜓 ൗ𝜋−𝜃 ,[5],"[(5, 0.9526195)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\10-quantum-un-qubit-04.pdf,10,"9/29/2021
1110-quantum -un-qubit -04
qubit –interpretazione geometrica
•negli esempi ci siamo riferiti finora a valori reali, 
ma la proporzionalità con il coseno al quadrato 
rimane anche se i numeri sono complessi
210
1= |1
1
0=|0𝜃|𝜓
ൗ𝜋2−𝜃
qubit –basi diverse
•lo stato |𝜓di un qubit esiste indipendentemente 
dalla base nella quale lo esprimiamo
•possiamo quindi scegliere due versori 
(perpendicolari) |𝑢e |𝑢⊥diversi da  |0e|1
ed esprimere |𝜓in funzione di |𝑢e |𝑢⊥
220
1= |1
1
0=|0𝜃|𝜓
ൗ𝜋2−𝜃
|𝑢|𝑢⊥21
22", quantum qubit qubit –interpretazione geometrica •negli esempi riferiti finora valori reali proporzionalità coseno quadrato rimane numeri complessi  𝜃𝜓 ൗ𝜋−𝜃 qubit –basi diverse •lo stato 𝜓di qubit esiste indipendentemente base esprimiamo •possiamo quindi scegliere due versori perpendicolari 𝑢e 𝑢⊥diversi e esprimere 𝜓in funzione 𝑢e 𝑢⊥  𝜃𝜓 ൗ𝜋−𝜃 𝑢𝑢⊥ ,[5],"[(5, 0.96895504)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\10-quantum-un-qubit-04.pdf,11,"9/29/2021
1210-quantum -un-qubit -04
qubit –basi diverse
•la regola che lega la probabilità di misurare uno 
stato di base o un altro in funzione del coseno 
dell’angolo che lo stato ha con ciascuno di essi 
vale anche per versori diversi da  |0e|1
230
1= |1
1
0=|0𝜃|𝜓
ൗ𝜋2−𝜃
|𝑢|𝑢⊥
qubit –basi diverse
•nota: la misura può essere effettuata 
relativamente a qualunque base
24𝜃|𝜓
ൗ𝜋2−𝜃
|𝑢|𝑢⊥23
24", quantum qubit qubit –basi diverse •la regola lega probabilità misurare stato base altro funzione coseno dell’angolo stato ciascuno essi vale versori diversi e  𝜃𝜓 ൗ𝜋−𝜃 𝑢𝑢⊥ qubit –basi diverse •nota misura può essere effettuata relativamente qualunque base 𝜃𝜓 ൗ𝜋−𝜃 𝑢𝑢⊥ ,"[2, 5, 8]","[(2, 0.41630495), (5, 0.53646237), (8, 0.021290982)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\10-quantum-un-qubit-04.pdf,12,"9/29/2021
1310-quantum -un-qubit -04
qubit –basi diverse
•quindi la misura di un qubit necessita della 
specifica della base rispetto alla quale è effettuata
•consideriamo ora il caso generale dei numeri 
complessi
25𝜃|𝜓
ൗ𝜋2−𝜃
|𝑢|𝑢⊥
richiamo –prodotto scalare
•il prodotto scalare tra due vettori (il primo riga e 
il secondo colonna ) si calcola in questo modo
•𝑎1𝑎2⋯𝑎𝑛𝑏1
𝑏2
⋮
𝑏𝑛=
=𝑎1𝑏1+𝑎2𝑏2+⋯+𝑎𝑛𝑏𝑛=෍
𝑖=1𝑛
𝑎𝑖𝑏𝑖
2625
26", quantum qubit qubit –basi diverse •quindi misura qubit necessita specifica base rispetto effettuata •consideriamo ora caso generale numeri complessi 𝜃𝜓 ൗ𝜋−𝜃 𝑢𝑢⊥ richiamo –prodotto scalare •il prodotto scalare due vettori il primo riga secondo colonna calcola modo •𝑎𝑎⋯𝑎𝑛𝑏 𝑏 ⋮ 𝑏𝑛 𝑎𝑏𝑎𝑏⋯𝑎𝑛𝑏𝑛෍ 𝑖𝑛 𝑎𝑖𝑏𝑖 ,"[5, 9]","[(5, 0.39389408), (9, 0.581849)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\10-quantum-un-qubit-04.pdf,13,"9/29/2021
1410-quantum -un-qubit -04
richiamo –complesso coniugato
•si ricorda che il complesso coniugato di un 
numero complesso z=𝑥+𝑦𝑖è definito come 
തz=𝑥−𝑦𝑖
27
prodotto scalare tra vettori complessi
•il prodotto scalare tra due vettori complessi |𝜑e 
|𝜓si calcola facendo il trasposto coniugato di 
|𝜑e calcolando il prodotto scalare con il 
secondo
•se |𝜑=𝑎1
𝑎2
⋮
𝑎𝑛il suo trasposto coniugato è 
ത𝑎1ത𝑎2⋯ത𝑎𝑛
2827
28", quantum qubit richiamo –complesso coniugato •si ricorda complesso coniugato numero complesso z𝑥𝑦𝑖è definito തz𝑥−𝑦𝑖 prodotto scalare vettori complessi •il prodotto scalare due vettori complessi 𝜑e 𝜓si calcola trasposto coniugato 𝜑e calcolando prodotto scalare secondo •se 𝜑𝑎 𝑎 ⋮ 𝑎𝑛il trasposto coniugato ത𝑎ത𝑎⋯ത𝑎𝑛 ,[2],"[(2, 0.9699916)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\10-quantum-un-qubit-04.pdf,14,"9/29/2021
1510-quantum -un-qubit -04
un po’ di notazione
•mentre |𝑥denota un vettore colonna
•abbiamo che ۦ|𝑥denota un vettore riga
29
qubit –basi diverse
•in generale, la probabilità che la misura di un 
qubit|𝜓dia un certo versore |𝑢la possiamo 
calcolare come il quadrato del prodotto scalare 
tra il versore e il qubit
–si calcola usando il complesso coniugato del versore
30𝜃|𝜓
ൗ𝜋2−𝜃
|𝑢|𝑢⊥29
30", quantum qubit po’ notazione •mentre 𝑥denota vettore colonna •abbiamo ۦ𝑥denota vettore riga qubit –basi diverse •in generale probabilità misura qubit𝜓dia certo versore 𝑢la possiamo calcolare quadrato prodotto scalare versore qubit –si calcola usando complesso coniugato versore 𝜃𝜓 ൗ𝜋−𝜃 𝑢𝑢⊥ ,"[1, 5]","[(1, 0.2916989), (5, 0.6786635)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\10-quantum-un-qubit-04.pdf,15,"9/29/2021
1610-quantum -un-qubit -04
qubit –basi diverse
•il prodotto scalare tra |𝑢=𝛽0|0+𝛽1|1e |𝜓
=𝛼0|0+𝛼1|1si calcola come
–𝛽0𝛽1𝛼0
𝛼1=𝛽0𝛼0+𝛽1𝛼1
–si ricorda che il complesso coniugato di un numero 
complesso z=𝑥+𝑦𝑖è definito come തz=𝑥−𝑦𝑖
31𝜃|𝜓
ൗ𝜋2−𝜃
|𝑢|𝑢⊥
qubit –basi diverse
•il prodotto scalare tra |𝑢e |𝜓si denota anche 
con 𝑢𝜓dove la prima parentesi angolata si 
chiama brae le seconda ket(bra-ketnotation , 
dovuta a Dirac)
32𝜃|𝜓
ൗ𝜋2−𝜃
|𝑢|𝑢⊥31
32", quantum qubit qubit –basi diverse •il prodotto scalare 𝑢𝛽𝛽e 𝜓 𝛼𝛼si calcola –𝛽𝛽𝛼 𝛼𝛽𝛼𝛽𝛼 –si ricorda complesso coniugato numero complesso z𝑥𝑦𝑖è definito തz𝑥−𝑦𝑖 𝜃𝜓 ൗ𝜋−𝜃 𝑢𝑢⊥ qubit –basi diverse •il prodotto scalare 𝑢e 𝜓si denota 𝑢𝜓dove prima parentesi angolata chiama brae seconda ketbra ketnotation dovuta dirac 𝜃𝜓 ൗ𝜋−𝜃 𝑢𝑢⊥ ,"[0, 5]","[(0, 0.6807879), (5, 0.29339224)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\10-quantum-un-qubit-04.pdf,16,"9/29/2021
1710-quantum -un-qubit -04
qubit –basi diverse
•quindi la probabilità che la misura di un qubit|𝜓
dia un certo versore |𝑢la possiamo denotare 
come 𝑢𝜓2
33𝜃|𝜓
ൗ𝜋2−𝜃
|𝑢|𝑢⊥
esempio sulla misura
•calcola la probabilità che |0assuma il valore del 
versore |ۧ+=ൗ1
2|0+ൗ1
2|1
•abbiamo che |0=1
0
•quindi 0+=10ൗ1
2
ൗ1
2=ൗ1
2
•e 0+2=1
2
3433
34", quantum qubit qubit –basi diverse •quindi probabilità misura qubit𝜓 dia certo versore 𝑢la possiamo denotare 𝑢𝜓 𝜃𝜓 ൗ𝜋−𝜃 𝑢𝑢⊥ esempio misura •calcola probabilità assuma valore versore ۧൗ ൗ  •abbiamo  •quindi ൗ ൗ ൗ •e ,[3],"[(3, 0.943739)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\10-quantum-un-qubit-04.pdf,17,"9/29/2021
1810-quantum -un-qubit -04
esempio sulla misura
•calcola la probabilità che |0assuma il valore del 
versore |ۧ1
•abbiamo che |0=1
0e |1=0
1
•quindi 01=100
1=0
•e 012=0
35
35", quantum qubit esempio misura •calcola probabilità assuma valore versore ۧ •abbiamo  e  •quindi •e ,"[0, 1, 2, 3, 4]","[(0, 0.014287935), (1, 0.01429043), (2, 0.014288154), (3, 0.014291985), (4, 0.014287168)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\15-quantum-un-qubit-heisenberg-02.pdf,0,"10/6/2021
115-quantum -un-qubit -Heisenberg -02
1Next Generation Computing Models
Quantum Computing
Il principio di indeterminazione di Heisenberg 
e un qubit
principio di indeterminazione  di 
Heisenberg
•nella meccanica quantistica il principio stabilisce 
l'impossibilità di determinare con precisione a 
priori illimitata i valori di due variabili 
incompatibili, che specificano lo stato di una 
particella
–es. posizione e velocità
•indaghiamo il principio usando il quantum 
computing
21
2", quantum qubit heisenberg next generation computing models quantum computing principio indeterminazione heisenberg qubit principio indeterminazione heisenberg •nella meccanica quantistica principio stabilisce limpossibilità determinare precisione priori illimitata valori due variabili incompatibili specificano stato particella –es posizione velocità •indaghiamo principio usando quantum computing ,[1],"[(1, 0.9742819)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\15-quantum-un-qubit-heisenberg-02.pdf,1,"10/6/2021
215-quantum -un-qubit -Heisenberg -02
due basi
•usiamo due basi per descrivere lo stesso qubit
–la base costituita dai vettori |0e|1
–e la base costituita da |ۧ+=ൗ1
2|0+ൗ1
2|1e 
|ۧ−=ൗ1
2|0−ൗ1
2|1
30
1= |1
1
0=|0|+
ൗ𝜋4
|−
|ۧ+e |ۧ−è una base
•in primo luogo |ۧ+=ൗ1
2|0+ൗ1
2|1è 
effettivamente uno stato
–infatti ൗ1
22
+ൗ1
22
=Τ12+Τ12=1
•e anche |ۧ−=ൗ1
2|0−ൗ1
2|1è 
effettivamente uno stato
–infatti ൗ1
22
+−ൗ1
22
=Τ12+Τ12=1
43
4", quantum qubit heisenberg due basi •usiamo due basi descrivere stesso qubit –la base costituita vettori e –e base costituita ۧൗ ൗ e ۧ−ൗ −ൗ    ൗ𝜋 − ۧe ۧ−è base •in primo luogo ۧൗ ൗ è effettivamente stato –infatti ൗ ൗ ττ •e ۧ−ൗ −ൗ è effettivamente stato –infatti ൗ −ൗ ττ ,[8],"[(8, 0.96399283)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\15-quantum-un-qubit-heisenberg-02.pdf,2,"10/6/2021
315-quantum -un-qubit -Heisenberg -02
|ۧ+e |ۧ−è una base
•inoltre |ۧ+e |ۧ−sono perpendicolari tra loro
•per dimostrarlo basta calcolare il loro prodotto 
scalare +−=ൗ1
2ൗ1
2ൗ1
2
−ൗ1
2e osservare 
che ha valore nullo
5
due misure
•dato un qubit|𝜓, possiamo misurarlo sia usando 
la base |0e|1sia usando la base |ۧ+e |ۧ−
•la prima misura la chiamiamo bit-value e la 
seconda sign -value
6|1
|0|+
ൗ𝜋4
|−|𝜓5
6", quantum qubit heisenberg ۧe ۧ−è base •inoltre ۧe ۧ−sono perpendicolari •per dimostrarlo basta calcolare prodotto scalare −ൗ ൗ ൗ −ൗ e osservare valore nullo due misure •dato qubit𝜓 possiamo misurarlo usando base esia usando base ۧe ۧ− •la prima misura chiamiamo bit value seconda sign value   ൗ𝜋 −𝜓 ,[1],"[(1, 0.969994)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\15-quantum-un-qubit-heisenberg-02.pdf,3,"10/6/2021
415-quantum -un-qubit -Heisenberg -02
posizione e velocità
•immaginiamo ora che il bit -value corrisponda 
alla posizione e che il sign-value corrisponda alla 
velocità
7|1
|0|+
ൗ𝜋4
|−|𝜓
posizione e velocità
•è possibile in un certo istante conoscere 
posizione e velocità di un qubit ?
8|1
|0|+
ൗ𝜋4
|−|𝜓7
8", quantum qubit heisenberg posizione velocità •immaginiamo ora bit value corrisponda posizione sign value corrisponda velocità   ൗ𝜋 −𝜓 posizione velocità •è possibile certo istante conoscere posizione velocità qubit   ൗ𝜋 −𝜓 ,[5],"[(5, 0.9549889)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\15-quantum-un-qubit-heisenberg-02.pdf,4,"10/6/2021
515-quantum -un-qubit -Heisenberg -02
conoscenza perfetta del bit -value
•perchè si possa conoscere perfettamente il bit -
value di |𝜓occorre che esso sia |0oppure |1
9|1
|0|+
ൗ𝜋4
|−|𝜓
conoscenza perfetta del sign-value
•perchè si possa conoscere perfettamente il sign-
value di |𝜓occorre che esso sia |ۧ+oppure |ۧ−
10|1
|0|+
ൗ𝜋4
|−|𝜓9
10", quantum qubit heisenberg conoscenza perfetta bit value •perchè possa conoscere perfettamente bit value 𝜓occorre esso oppure    ൗ𝜋 −𝜓 conoscenza perfetta sign value •perchè possa conoscere perfettamente sign value 𝜓occorre esso ۧoppure ۧ−   ൗ𝜋 −𝜓 ,[3],"[(3, 0.9624946)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\15-quantum-un-qubit-heisenberg-02.pdf,5,"10/6/2021
615-quantum -un-qubit -Heisenberg -02
conoscenza perfetta di entrambi
•se possiamo conoscere perfettamente il sign-
value di |𝜓, es. perchè esso è molto vicino a |0, 
allora abbiamo molta incertezza sul sign-value
–è |ۧ+con probabilità Τ12e |ۧ−con probabilità Τ12
11|1
|0|+
ൗ𝜋4
|−|𝜓
11", quantum qubit heisenberg conoscenza perfetta entrambi •se possiamo conoscere perfettamente sign value 𝜓 es perchè esso molto vicino  allora molta incertezza sign value –è ۧcon probabilità τe ۧ−con probabilità τ   ൗ𝜋 −𝜓 ,[2],"[(2, 0.95907855)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,0,"9/28/2021
102-linguaggio -e-grammatiche -24
1Linguaggi e Grammatiche
2Linguaggi e informatica
•ubiquitari nelle applicazioni
–linguaggi di programmazione
•compilatori ed interpreti
–linguaggi di comunicazione
•protocolli per il dialogo traentità omologhe
–linguaggi per intefacce
•specifica di sequenze di operazioni
•paradigmatici nella teoria
–molti importanti problemi teorici sono riconducibili a 
quello dell’appartenenza di una stringa ad un 
linguaggio1
2", linguaggio grammatiche linguaggi grammatiche linguaggi informatica •ubiquitari applicazioni –linguaggi programmazione •compilatori interpreti –linguaggi comunicazione •protocolli dialogo traentità omologhe –linguaggi intefacce •specifica sequenze operazioni •paradigmatici teoria –molti importanti problemi teorici riconducibili dell’appartenenza stringa linguaggio ,[5],"[(5, 0.9608514)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,1,"9/28/2021
202-linguaggio -e-grammatiche -24
3Tre approcci diversi
•approccio insiemistico
–utile per determinare le 
proprietà elementari dei
linguaggi
•approccio generativo
–grammatiche formali
•approccio riconoscitivo
–automi riconoscitori
4Concetti matematici di base
•Insiemi
•Relazioni
•Funzioni3
4", linguaggio grammatiche tre approcci diversi •approccio insiemistico –utile determinare proprietà elementari linguaggi •approccio generativo –grammatiche formali •approccio riconoscitivo –automi riconoscitori concetti matematici base •insiemi •relazioni •funzioni ,[4],"[(4, 0.947038)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,2,"9/28/2021
302-linguaggio -e-grammatiche -24
5Insiemi
•consideriamo insiemi finiti e insiemi infiniti
•|A| = cardinalità dell’insieme (finito ) A
•alcuni insiemi infiniti di numeri:
N naturali (contiene zero)
N+ naturali positivi
Z interi relativi
Z+interi positivi
Z- interi negativiQ razionali relativi
Q+ razionali positivi
Q-razionali negativi
R reali
R+ reali positivi
R-reali negativi
6Sottoinsiemi e insiemi uguali
•datidue insiemi A e B, se
x B x A
allora B è sottoinsieme di A, e siscrive B A
•ogni insieme è sottoinsieme di se stesso
•l’insieme vuotoè sottoinsieme di ogni insieme
•se A e B sono finiti , allora B A |B| |A|
•A e B insiemi uguali
A=B (x A x B)
sipuòscrivere anche
A=B (A B B A)
•A è sottoinsieme proprio di B (A B) se 
(A B) (A B)5
6", linguaggio grammatiche insiemi •consideriamo insiemi finiti insiemi infiniti •a cardinalità dell’insieme finito •alcuni insiemi infiniti numeri n naturali contiene zero n naturali positivi z interi relativi zinteri positivi z interi negativiq razionali relativi q razionali positivi q razionali negativi r reali r reali positivi r reali negativi sottoinsiemi insiemi uguali •datidue insiemi b x b x a allora b sottoinsieme a siscrive b a •ogni insieme sottoinsieme stesso •l’insieme vuotoè sottoinsieme ogni insieme •se b finiti allora b a b a •a b insiemi uguali ab x a x b sipuòscrivere ab a b b a •a sottoinsieme proprio b a b a b a b ,[9],"[(9, 0.9836331)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,3,"9/28/2021
402-linguaggio -e-grammatiche -24
7Insieme delle parti
A
P(A)l’insieme dei sottoinsiemi di A è detto l’ insieme delle parti di A e si 
indica con P(A) o 2A
se A è finito e |A| = n allora |P(A)| = 2n
8Operazioni tra insiemi
•unione C = A B
–se A e B sono finiti |C| |A|+|B|
–commutativa e associativa
•intersezione C=A B
–se A e B sono finiti |C| min{|A|, |B|}
–commutativa e associativa
–l’intersezione è distributiva rispetto all’unione
•partizione di A
–insieme di n sottoinsiemi di A tali che 
A1A2… An= A
i j AiAj= A B
A B
A7
8", linguaggio grammatiche insieme parti pal’insieme sottoinsiemi detto l’ insieme parti indica pa a finito a n allora pa n operazioni insiemi •unione b –se b finiti c ab –commutativa associativa •intersezione ca b –se b finiti c mina b –commutativa associativa –l’intersezione distributiva rispetto all’unione •partizione –insieme n sottoinsiemi tali aa… an j aiaj a b b a ,[9],"[(9, 0.9639883)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,4,"9/28/2021
502-linguaggio -e-grammatiche -24
9Operazioni tra insiemi
•complemento di B rispetto ad A
C = A -B = {x| xA xB}
•differenza simmetrica o somma disgiunta
A+B=AB-(A B)
•prodotto cartesiano C=A B
C= {x,y| xA yB}
–insieme di tutte le possibili coppie ordinate
–il prodotto cartesiano è associativo ma non commutativoA BA B
10Relazioni
•siano A1, A2, …, Ann insiemi 
(non necessariamente distinti)
•una relazione n -aria è un sottoinsieme di 
esempio :
–la relazione “ minore di ” definita sui naturali è l’insieme 
R NN = N2, dove R= {x,y| xy}A1A2…An
R A1A2…An9
10", linguaggio grammatiche operazioni insiemi •complemento b rispetto b x xa xb •differenza simmetrica somma disgiunta abab a b •prodotto cartesiano ca b c xy xa yb –insieme tutte possibili coppie ordinate –il prodotto cartesiano associativo commutativoa ba b relazioni •siano a a … ann insiemi non necessariamente distinti •una relazione n aria sottoinsieme esempio –la relazione “ minore ” definita naturali l’insieme r nn n r xy xyaa…an r aa…an ,"[0, 9]","[(0, 0.3775241), (9, 0.59893835)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,5,"9/28/2021
602-linguaggio -e-grammatiche -24
11Relazione d’ordine
•RA2=A A è una relazione d’ordine se valgono le 
seguenti proprietà:
1.riflessività
x,xR
2.antisimmetria
x,yRy,xRx=y
3.transitività
x,yRy,zRx,zR
un insieme su cui è definita una relazione d’ordine si dice 
parzialmente ordinato o poset (“partially ordered set”)
esempio : la relazione “ ” è una relazione d’ordine su N
12Relazione d’ordine totale
•una relazione d’ordine R A2è detta totale se
x,yA2 x,yR y,xR
esempio :
la relazione “ ” è una relazione d’ordine totale su N
1 2 3 4 5 6 7 8 …11
12", linguaggio grammatiche relazione d’ordine •raa a relazione d’ordine valgono seguenti proprietà riflessività xxr antisimmetria xyryxrxy transitività xyryzrxzr insieme definita relazione d’ordine dice parzialmente ordinato poset “partially ordered set” esempio relazione “ ” relazione d’ordine n relazione d’ordine totale •una relazione d’ordine r aè detta totale xya xyr yxr esempio relazione “ ” relazione d’ordine totale n        … ,[7],"[(7, 0.9678525)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,6,"9/28/2021
702-linguaggio -e-grammatiche -24
13Relazione di equivalenza
•RA2= AA è una relazione di equivalenza se valgono 
le seguenti proprietà:
1.riflessività
x,xR
2.simmetria
x,yRy,xR
3.transitività
x,yRy,zRx,zR 
esempio : la relazione “= ”è una relazione di equivalenza su R
14Relazione di equivalenza
•un insieme A su cui è definita una relazione di 
equivalenza si può partizionare in sottoinsiemi 
massimali di equivalenza , detti classi di 
equivalenza
•l’insieme delle classi di equivalenza di A è 
detto insieme quoziente e si denota A/R 
•un elemento di A/R si denota con [a]
•il numero di classi di A/R si chiama indice di R13
14", linguaggio grammatiche relazione equivalenza •ra aa relazione equivalenza valgono seguenti proprietà riflessività xxr simmetria xyryxr transitività xyryzrxzr esempio relazione “ ”è relazione equivalenza r relazione equivalenza •un insieme definita relazione equivalenza può partizionare sottoinsiemi massimali equivalenza detti classi equivalenza •l’insieme classi equivalenza detto insieme quoziente denota ar •un elemento ar denota a •il numero classi ar chiama indice r ,[6],"[(6, 0.9785674)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,7,"9/28/2021
802-linguaggio -e-grammatiche -24
15Esempio di relazione di equivalenza
•consideriamo la relazione Eksu N
n k m
se esistono q, q ′, r (con r<k) tali che
n=qk+r    e    m=q′k+r
•Ekè una relazione di equivalenza
•le sue classi sono le classi resto rispetto alla 
divisione per k
16Operazioni su relazioni
•unione
R1R2={x,y|x,yR1x,yR2}
•complementazione
R={x,y|x,yR}
•chiusura transitiva
R+  ={x,y|
y1, …,ynA, n2, y1=x, yn=y
tali che
yi,yi+1R, i=1, …,n -1} 
•chiusura transitiva e riflessiva
R*=R+{x,x|xA}15
16", linguaggio grammatiche esempio relazione equivalenza •consideriamo relazione eksu n n k m esistono q q ′ r con rk tali nqkr mq′kr •ekè relazione equivalenza •le classi classi resto rispetto divisione k operazioni relazioni •unione rrxyxyrxyr •complementazione rxyxyr •chiusura transitiva r xy y …yna n yx yny tali yiyir i …n •chiusura transitiva riflessiva rrxxxa ,"[6, 8]","[(6, 0.23249224), (8, 0.7389265)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,8,"9/28/2021
902-linguaggio -e-grammatiche -24
17Chiusure di relazioni
2
31
54
2
31
542
31
54chiusura transitivachiusura transitiva
e riflessiva
18Funzioni
R X1 … Xn
è una relazione funzionale se
x1, …, xn-1X1 … Xn-1
esiste al più un elemento xn Xntale che
x1, …, xn-1, xnR
si chiama funzione la legge che associa x1, …, xn-1ad xn
f(x1, …, xn-1) = xn
f: X1 … Xn-1→Xn
X1 … Xn-1è il tipodella funzione17
18", linguaggio grammatiche chiusure relazioni chiusura transitivachiusura transitiva riflessiva funzioni r x … xn relazione funzionale x … xn x … xn esiste elemento xn xntale x … xn xnr chiama funzione legge associa x … xn ad xn fx … xn xn f x … xn →xn x … xn è tipodella funzione ,[6],"[(6, 0.9666608)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,9,"9/28/2021
1002-linguaggio -e-grammatiche -24
19Funzioni: dominio codominio
dom(f) = dominio di f
sottoinsieme di X1 … Xn-1
dom(f) = { x1, …, xn-1X1 … Xn-1|
xn Xnf(x1, …, xn-1) = xn}
cod(f) = codominio di f
sottoinsieme di Xn
cod(f) = { xn Xn|
x1, …, xn-1X1 … Xn-1
f(x1, …, xn-1) = xn}
20Funzioni: fibra
dato un xn
f-1(xn) = controimmagine o fibra di xn
sottoinsieme di X1 … Xn-1
f-1(xn) = {x1, …, xn-1X1 … Xn-1|
x1, …, xn-1dom(f)

f(x1, …, xn-1) = xn}19
20", linguaggio grammatiche funzioni dominio codominio domf dominio f sottoinsieme x … xn domf x … xn x … xn xn xnfx … xn xn codf codominio f sottoinsieme xn codf xn xn x … xn x … xn fx … xn xn funzioni fibra dato xn f xn controimmagine fibra xn sottoinsieme x … xn f xn x … xn x … xn x … xn domf  fx … xn xn ,[6],"[(6, 0.97631425)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,10,"9/28/2021
1102-linguaggio -e-grammatiche -24
21Funzione
dominiocodominioX1 … Xn-1 Xn
22Funzione totale
dominiocodominioX1 … Xn-1 Xn•una funzione f è totale se dom(f) = X1, …, Xn-121
22", linguaggio grammatiche funzione dominiocodominiox … xn xn funzione totale dominiocodominiox … xn xn•una funzione f totale domf x … xn ,"[0, 6]","[(0, 0.7326359), (6, 0.19462982)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,11,"9/28/2021
1202-linguaggio -e-grammatiche -24
23Funzione suriettiva
dominiocodominioX1 … Xn-1 Xn•una funzione f è suriettiva se cod(f) = Xn
24Funzione iniettiva
dominiocodominioX1 … Xn-1 Xn•una funzione f è iniettiva se |f-1(xn)|=123
24", linguaggio grammatiche funzione suriettiva dominiocodominiox … xn xn•una funzione f suriettiva codf xn funzione iniettiva dominiocodominiox … xn xn•una funzione f iniettiva f xn ,[0],"[(0, 0.93570215)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,12,"9/28/2021
1302-linguaggio -e-grammatiche -24
25Funzione biiettiva
dominiocodominioX1 … Xn-1 Xn•una funzione f è biiettiva (biiezione) se è 
iniettiva, suriettiva e totale
26Alfabeto
•un alfabeto è un insieme finito non vuoto di 
simboli (caratteri)
•esempi:
{‘M’, ‘C’, ‘L’, ‘X’, ‘I’, ‘V’}
{‘0’, ‘1’}
{‘0’, ‘1’, ‘2’, ‘3’, ‘4’, ‘5’, ‘6’, ‘7’, ‘8’, ‘9’}
{‘a’, ‘b’, ‘c’, ‘d’, ‘e’, ‘f’, ‘g’, ‘h’, ‘i’, ‘l’, ‘m’, 
‘n’, ‘o’, ‘p’, ‘q’, ‘r’, ‘s’, ‘t’, ‘u’, ‘v’, ‘z’}25
26", linguaggio grammatiche funzione biiettiva dominiocodominiox … xn xn•una funzione f biiettiva biiezione iniettiva suriettiva totale alfabeto •un alfabeto insieme finito vuoto simboli caratteri •esempi ‘m’ ‘c’ ‘l’ ‘x’ ‘i’ ‘v’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘a’ ‘b’ ‘c’ ‘d’ ‘e’ ‘f’ ‘g’ ‘h’ ‘i’ ‘l’ ‘m’ ‘n’ ‘o’ ‘p’ ‘q’ ‘r’ ‘s’ ‘t’ ‘u’ ‘v’ ‘z’ ,[0],"[(0, 0.9499922)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,13,"9/28/2021
1402-linguaggio -e-grammatiche -24
27Concatenazione
•dato un alfabeto , definiamo l’operazione binaria 
concatenazione (denotata con “ ◦”)
a◦b= abcon a, b
•indichiamo con anla concatenazione di acon se stessa n 
volte
esempio: a4 = a◦a◦a◦a= aaaa
•l’operazione “ ◦” è associativa ma non commutativa
•dati e “◦” definiamo +come l’insieme delle stringhe 
(parole) di lunghezza finita
•se a +aggiungiamo la stringa vuota = “” otteniamo *
28Linguaggio
•un linguaggio è un sottoinsieme di *
•*è detto linguaggio universale
•il linguaggio vuoto non contiene stringhe 
(nota che coincide con l’insieme vuoto )
–attenzione:

{}27
28", linguaggio grammatiche concatenazione •dato alfabeto  definiamo l’operazione binaria concatenazione denotata “ ◦” a◦b abcon a b •indichiamo anla concatenazione acon stessa n volte esempio a a◦a◦a◦a aaaa •l’operazione “ ◦” associativa commutativa •dati e “◦” definiamo come l’insieme stringhe parole lunghezza finita •se aggiungiamo stringa vuota  “” otteniamo  linguaggio •un linguaggio sottoinsieme  •è detto linguaggio universale •il linguaggio vuoto non contiene stringhe nota coincide l’insieme vuoto  –attenzione   ,[0],"[(0, 0.97691506)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,14,"9/28/2021
1502-linguaggio -e-grammatiche -24
29Operazioni sui linguaggi
L1e L2linguaggi
•unione
L1L2= {x*| xL1x L2}
L1= L1
•intersezione
L1L2= {x*| xL1x L2}
L1= 
•complementazione
L1={x*| xL1}
30Operazioni sui linguaggi
L1e L2linguaggi
•concatenazione o prodotto
L1◦L2= {x*|
x1L1x2L2tali che x = x1◦x2}
L ◦{} = {} ◦L = L
esempio :
L1= {an | n1};  L2= {bm | m1};   L1◦L2= {an bm | n,m1}
•potenza Lhdi un linguaggio L
L0= {}
Lh= L ◦Lh-1, per h 129
30", linguaggio grammatiche operazioni linguaggi le llinguaggi •unione ll x xlx l l l •intersezione ll x xlx l l  •complementazione lx xl operazioni linguaggi le llinguaggi •concatenazione prodotto l◦l x xlxltali x x◦x ◦  ◦l esempio l an n l bm m l◦l an bm nm •potenza lhdi linguaggio l  lh ◦lh h  ,[9],"[(9, 0.95499027)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,15,"9/28/2021
1602-linguaggio -e-grammatiche -24
31Operatore di Kleene
•chiusura riflessiva e transitiva di un linguaggio
L*= Lh
L* *={}
esempio : L={aa} L*={a2n|n0}
•chiusura transitiva (non riflessiva) di un 
linguaggio
L+= Lh
esempio : L={aa} L+={a2n|n1}
L*=L+ {}
h=0

h=1
32Espressioni regolari
•è uno strumento per descrivere linguaggi (vedremo nel seguito quali)
•dato un alfabeto , si definisce espressione regolare ogni stringa r
r({+, *, (, ), ◦, })+
•tale che:
1.r=oppure
2.roppure
3.r=(s+t) oppure r=(s◦t) oppure r=s*, con se tespressioni regolari
espressione linguaggio
 
a {a}
(s+t) L(s)L(t)
(s◦t) L(s)◦L(t)
s*L(s)*semantica31
32", linguaggio grammatiche operatore kleene •chiusura riflessiva transitiva linguaggio l lh l  esempio laa lann •chiusura transitiva non riflessiva linguaggio l lh esempio laa lann ll  h  h espressioni regolari •è strumento descrivere linguaggi vedremo seguito quali •dato alfabeto  definisce espressione regolare ogni stringa r r ◦  •tale che roppure roppure rst oppure rs◦t oppure rs tespressioni regolari espressione linguaggio   a a st lslt s◦t ls◦lt slssemantica ,[0],"[(0, 0.97953963)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,16,"9/28/2021
1702-linguaggio -e-grammatiche -24
33Espressioni regolari
i linguaggi rappresentabili con espressioni regolari sono una 
interessante sottoclasse stè forma sintetica di s◦tforma sintetica
espressioni sintetiche si ottengno definendo delle 
precedenze tra gli operatori: *> ◦> +
esempio : 
(a+(b(cd))) = a+bcdforma sinteticaesempio : 
(a+b)*rappresenta L=({ a}{b})*
esempio : 
(a+b)*arappresenta L={x|x {a,b}*“x termina con a”}
34Esercizio
data una mappa stradale, scrivere un’espressione regolare che 
definisca tutti i percorsi possibili tra A e B
adec +adg+fec+fg= 
= ad(ec+g) + f(ec+g) = 
= (ad+f)(ec+g)A Ba d c e
f g
33
34", linguaggio grammatiche espressioni regolari linguaggi rappresentabili espressioni regolari interessante sottoclasse stè forma sintetica s◦tforma sintetica espressioni sintetiche ottengno definendo precedenze operatori ◦ esempio abcd abcdforma sinteticaesempio abrappresenta l ab esempio abarappresenta lxx ab“x termina a” esercizio data mappa stradale scrivere un’espressione regolare definisca percorsi possibili b adec adgfecfg adecg fecg adfecga ba d f g ,"[1, 2]","[(1, 0.11176747), (2, 0.86961967)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,17,"9/28/2021
1802-linguaggio -e-grammatiche -24
35Esercizio
data una mappa stradale, scrivere un’espressione regolare che 
definisca tutti i percorsi possibili tra A e B
f(ebd)*gA Bd e
f gb
36Esercizio
data una mappa stradale, scrivere un’espressione regolare che 
definisca tutti i percorsi possibili tra A e B
a(deb)*decA Ba d c eb
35
36", linguaggio grammatiche esercizio data mappa stradale scrivere un’espressione regolare definisca percorsi possibili b febdga bd f gb esercizio data mappa stradale scrivere un’espressione regolare definisca percorsi possibili b adebdeca ba d eb ,[2],"[(2, 0.96666217)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,18,"9/28/2021
1902-linguaggio -e-grammatiche -24
37Esercizio
data una mappa stradale, scrivere un’espressione regolare che 
definisca tutti i percorsi possibili tra A e B
a(deb)*dgA Ba d e
gb
38Esercizio
data una mappa stradale, scrivere un’espressione regolare che 
definisca tutti i percorsi possibili tra A e B
f(edb)*ecA Bd c e
fb
37
38", linguaggio grammatiche esercizio data mappa stradale scrivere un’espressione regolare definisca percorsi possibili b adebdga ba d gb esercizio data mappa stradale scrivere un’espressione regolare definisca percorsi possibili b fedbeca bd fb ,[2],"[(2, 0.966662)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,19,"9/28/2021
2002-linguaggio -e-grammatiche -24
39Esercizio
data una mappa stradale, scrivere un’espressione regolare che 
definisca tutti i percorsi possibili tra A e B
f(ebd)*g+ f(ebd)*ec+ a(deb)*dec+ a(deb)*dg=
= f(ebd)*(g+ec) + a(deb)*d(g+ec) =
= (f(ebd)*+a(deb)*d) (g+ec) =
= (f+ad)(ebd)*(g+ec)A Ba d c e
f gb
40Le grammatiche formali
1940 Post e Markof, riscrittura e derivazione di 
stringhe
1950 Chomsky, classificazione delle grammatiche 
nell’ambito degli studi sul linguaggio 
naturale
1960 Backus Naur Form per descrivere Algol•approccio generativo alla descrizione dei 
linguaggi
•metodo di costruzione delle stringhe basato sulla 
riscrittura39
40", linguaggio grammatiche esercizio data mappa stradale scrivere un’espressione regolare definisca percorsi possibili b febdg febdec adebdec adebdg febdgec adebdgec febdadebd gec fadebdgeca ba d f gb le grammatiche formali post markof riscrittura derivazione stringhe chomsky classificazione grammatiche nell’ambito studi linguaggio naturale backus naur form descrivere algol•approccio generativo descrizione linguaggi •metodo costruzione stringhe basato riscrittura ,"[0, 2, 5]","[(0, 0.36920336), (2, 0.23184898), (5, 0.38435674)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,20,"9/28/2021
2102-linguaggio -e-grammatiche -24
41Grammatiche formali
•grammatiche di Chomsky
•-produzioni
•riconoscimento di linguaggi
42Grammatiche di Chomsky
unagrammatica è una quadrupla 
G=<VT, VN, P, S>
•VT è l’alfabeto (finito) di simboli terminali
•VNè un insieme (finito) di simboli non terminali , o 
categorie sintattiche , tale che VN= 
•P, detto insieme delle produzioni , è una relazione 
binaria finita su
(VTVN)*◦VN◦(VTVN)*(VTVN)*
•SVNè l’assioma<,>P si indica generalmente con →forma sintetica41
42", linguaggio grammatiche grammatiche formali •grammatiche chomsky • produzioni •riconoscimento linguaggi grammatiche chomsky unagrammatica quadrupla gvt vn p s •vt è l’alfabeto finito simboli terminali •vnè insieme finito simboli terminali categorie sintattiche tale vn  •p detto insieme produzioni relazione binaria finita vtvn◦vn◦vtvnvtvn •svnè l’assiomap indica generalmente →forma sintetica ,[3],"[(3, 0.9727195)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,21,"9/28/2021
2202-linguaggio -e-grammatiche -24
43Esempio
una grammatica definisce implicitamente tutte le stringhe 
di terminali generabili a partire dall’assioma tramite una 
sequenza di riscritture
esempio:
G=<{a, b, c}, {S, B, C}, P, S>, con P composto da:
S → aSS → B B → bB
B → bCC → cCC → c
genera L(G) = { anbmch| n0, m, h1}
→ 1→ 2 …→ n
viene anche indicato con
→ 1| 2|…|nforma sintetica
44Linguaggio generato
•derivazione diretta : relazione su
(V*◦VN◦V*) V*
<,> appartiene alla relazione (si scrive  ) se
 V*◦VN◦V*ed ,,V*t.c. ==e →P
e sono dette forme di frase
•derivazione : chiusura riflessiva e transitiva della 
derivazione diretta, si rappresenta con *
•il linguaggio generato da G è L(G) = {x|x VT*S*x}
•due grammatiche G1e G2sono equivalenti se 
L(G1)=L(G2)
talvolta al posto di *forma sinteticaVTVNviene talvolta indicato con Vforma sintetica43
44", linguaggio grammatiche esempio grammatica definisce implicitamente tutte stringhe terminali generabili partire dall’assioma tramite sequenza riscritture esempio ga b c s b c p s p composto da s → ass → b b → bb b → bcc → ccc → genera lg anbmch n m h → →  …→ n viene indicato →  …nforma sintetica linguaggio generato •derivazione diretta relazione v◦vn◦v v  appartiene relazione si scrive   v◦vn◦ved vtc e →p e sono dette forme frase •derivazione chiusura riflessiva transitiva derivazione diretta rappresenta  •il linguaggio generato g lg xx vtsx •due grammatiche ge gsono equivalenti lglg talvolta al posto forma sinteticavtvnviene talvolta indicato vforma sintetica ,[0],"[(0, 0.9844782)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,22,"9/28/2021
2302-linguaggio -e-grammatiche -24
45Grammatiche formali
esempio : generazione di { anbncn|n1}
grammatica G=<{ a, b, c},{S,B,C,F,G},P,S>
con P composto da
S → aSBC CB → BC
SB → bFFB → bF
FC → cGGC → cG
G → 
per generare aabbcc
SaSBC aaSBCBC aaSBBCC
aabFBCC aabb FCC aabbc GC
aabbcc G aabbcc
46Grammatiche formali
osservazione : non è detto che una sequenza di derivazioni 
porti ad una stringa del linguaggio
esempio : 
la grammatica G=<{ a, b, c}, {S, A}, P, S> con
S → aSc| A
A → bAc| 
genera {anbmcn+m|n,m0}
esempio : 
la grammatica G=<{a, b, c}, {S, A}, P, S> con
S → Ab
A → Sa
genera 45
46", linguaggio grammatiche grammatiche formali esempio generazione anbncnn grammatica g a b csbcfgps p composto s → asbc cb → bc sb → bffb → bf fc → cggc → cg g →  generare aabbcc sasbc aasbcbc aasbbcc aabfbcc aabb fcc aabbc gc aabbcc g aabbcc grammatiche formali osservazione detto sequenza derivazioni porti stringa linguaggio esempio grammatica g a b c s a p s s → asc → bac  genera anbmcnmnm esempio grammatica ga b c s a p s s → ab → sa genera  ,"[0, 6]","[(0, 0.055623334), (6, 0.92331576)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,23,"9/28/2021
2402-linguaggio -e-grammatiche -24
47Grammatiche di Chomsky
•di tipo 0, non limitate
•di tipo 1, context sensitive, contestuali
•di tipo 2, context free (CF), non contestuali
•di tipo 3, lineari destre (RL), regolari
48Grammatiche di Chomsky
di tipo 0, non limitate
•sono le meno restrittive
•produzioni del tipo
→, V*◦VN◦V*, V*
ammettono anche derivazioni che accorciano stringhe
linguaggi di tipo 0
esempio :
il linguaggio { anbn|n1} è di tipo 0 in quanto generato da
S → aAB B → b
aA → aaAbaAb→ ab
aAA → aA 47
48", linguaggio grammatiche grammatiche chomsky •di tipo limitate •di tipo context sensitive contestuali •di tipo context free cf contestuali •di tipo lineari destre rl regolari grammatiche chomsky tipo limitate •sono meno restrittive •produzioni tipo → v◦vn◦v v ammettono derivazioni accorciano stringhe linguaggi tipo esempio linguaggio anbnn tipo generato s → aab b → b aa → aaabaab→ ab aaa → aa ,[8],"[(8, 0.9790663)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,24,"9/28/2021
2502-linguaggio -e-grammatiche -24
49Grammatiche di Chomsky
di tipo 1, context sensitive, contestuali
•produzioni che non riducano la lunghezza delle forme di frase
→, ||≤||, V*◦VN◦V*, V*
linguaggi di tipo 1
esempio :
il linguaggio { anbncn|n1} è di tipo 0 in quanto generato da
S → aSBC CB → BC 
SB → bF FB → bF
FC → cG GC → cG
cG → c
ma è anche di tipo 1, infatti è generato anche da
S → aSBc| aBc
cB → Bc
bB → bb
aB → ab
50Generazione di stringhe di anbncn
(1)S → aSBc | aBc    (2)cB → Bc 
(3)bB → bb (4)aB → ab
SaSBc
aaSBcBc
aaaSBcBcBc
aaaaBcBcB cBc
aaaaBcB cBBcc 
aaaaBcBB cBcc 
aaaaB cBBBccc 
aaaaBB cBBccc 
aaaaBBB cBccc aaaaBBBBcccc
aaaabBBBcccc
aaaab bBBcccc
aaaabb bBcccc
aaaabbbbcccc49
50", linguaggio grammatiche grammatiche chomsky tipo context sensitive contestuali •produzioni riducano lunghezza forme frase → ≤ v◦vn◦v v linguaggi tipo esempio linguaggio anbncnn tipo generato s → asbc cb → bc sb → bf fb → bf fc → cg gc → cg cg → tipo infatti generato s → asbc abc cb → bc bb → bb ab → ab generazione stringhe anbncn s → asbc abc cb → bc bb → bb ab → ab sasbc aasbcbc aaasbcbcbc aaaabcbcb cbc aaaabcb cbbcc aaaabcbb cbcc aaaab cbbbccc aaaabb cbbccc aaaabbb cbccc aaaabbbbcccc aaaabbbbcccc aaaab bbbcccc aaaabb bbcccc aaaabbbbcccc ,[8],"[(8, 0.98524195)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,25,"9/28/2021
2602-linguaggio -e-grammatiche -24
51Grammatiche di Chomsky
di tipo 2, context free (CF), non contestuali
•produzioni del tipo
A→, AVN, V+
linguaggi di tipo 2
esempio :
il linguaggio { anbn|n1} è di tipo 0 in quanto generato da
S → aAb
aA → aaAb
A → 
ma è anche di tipo 2, infatti è generato anche da
S → aSb| ab
52Esempi di linguaggi di tipo 2
linguaggio delle espressioni aritmetiche con la variabile i (come per 
esempio “i*i+(i*i+(i))*i*i ”, oppure “((i+i)*i) ”). 
L’assioma è E. 
E → E+T | T
T → T*F | F
F → i| (E)
grammatica delle parentesi ben bilanciate (esempio “ (((())))() ”)
S → ()| SS | (S)
da quale sequenza di produzioni è generata “ ()((()())) ” ?
grammatica delle stringhe palindrome (esempio “elle”, “ereggere”)51
52", linguaggio grammatiche grammatiche chomsky tipo context free cf contestuali •produzioni tipo a→ avn v linguaggi tipo esempio linguaggio anbnn tipo generato s → aab aa → aaab →  tipo infatti generato s → asb ab esempi linguaggi tipo linguaggio espressioni aritmetiche variabile come esempio “iiiiiii ” oppure “iii ” l’assioma e → et t t → tf f f → i e grammatica parentesi ben bilanciate esempio “ ” s → ss s sequenza produzioni generata “ ” grammatica stringhe palindrome esempio “elle” “ereggere” ,"[0, 8, 9]","[(0, 0.19987482), (8, 0.25343803), (9, 0.5326831)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,26,"9/28/2021
2702-linguaggio -e-grammatiche -24
53Grammatiche di Chomsky
di tipo 3, lineari destre (RL), regolari
•produzioni del tipo
A→, AVN, (VT◦VN)VT
•linguaggi di tipo 3
esempio :
il linguaggio {anb|n0} è di tipo 3 in quanto generato da
S → aS
S → b
si possono anche definire grammatiche lineari sinistre (LL) con 
A→, AVN, (VN◦VT)VT
esempio : il linguaggio { anb|n0} è anche generato da
S → Tb| b
T → a| Ta
teorema : i linguaggi generati da grammatiche LL e RL coincidono
54Grammatiche di Chomsky
un linguaggio è strettamente di tipo n se esiste una 
grammatica di tipo n che lo genera e non esiste una 
grammatica di tipo m>n che lo genera
esempio : il linguaggio { anbn|n1} è generato da 
una grammatica di tipo 2 e non è generato da 
nessuna grammatica di tipo 353
54", linguaggio grammatiche grammatiche chomsky tipo lineari destre rl regolari •produzioni tipo a→ avn vt◦vnvt •linguaggi tipo esempio linguaggio anbn tipo generato s → as s → b possono definire grammatiche lineari sinistre ll a→ avn vn◦vtvt esempio linguaggio anbn generato s → tb b t → a ta teorema linguaggi generati grammatiche ll rl coincidono grammatiche chomsky linguaggio strettamente tipo n esiste grammatica tipo n genera esiste grammatica tipo mn genera esempio linguaggio anbnn generato grammatica tipo generato nessuna grammatica tipo ,"[0, 8]","[(0, 0.93196785), (8, 0.054235283)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,27,"9/28/2021
2802-linguaggio -e-grammatiche -24
55Grammatiche di Chomsky
contenimento tra i linguaggitipo 0
tipo 1
tipo 2
tipo 3
56Grammatiche di Chomsky
quadro riassuntivo della classificazione delle 
grammatiche secondo Chomskytipo produzioni vincoli
tipo 0
non limitate→ V*◦VN◦V*, V*
tipo 1
contestuali→||≤||
V*◦VN◦V*, V*
tipo 2
non contestualiA→ AVN, V+
tipo 3
regolariA→ AVN, (VT◦VN)VT55
56", linguaggio grammatiche grammatiche chomsky contenimento linguaggitipo tipo tipo tipo grammatiche chomsky quadro riassuntivo classificazione grammatiche secondo chomskytipo produzioni vincoli tipo limitate→ v◦vn◦v v tipo contestuali→≤ v◦vn◦v v tipo contestualia→ avn v tipo regolaria→ avn vt◦vnvt ,[7],"[(7, 0.9624935)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,28,"9/28/2021
2902-linguaggio -e-grammatiche -24
57-produzioni
•con grammatiche di tipo1, 2, 3 non è possibile
generare la stringa vuota
–per generare occorre una produzione →che
viene detta-produzione
–per Chomsky tutti ilinguaggi checontengono -
produzioni sono linguaggi di tipo0
•qual è l’impatto sui corrispondenti linguaggi
delle-produzioni nelle grammatiche ?
–se ammettiamo -produzioni dobbiamo fare 
attenzione , altrimenti rischiamo di snaturare la 
gerarchia di Chomsky
58-produzioni : variazione della gerarchia
con le seguenti modifiche , ilinguaggi generati dale 
diverse tipologie di grammatiche rimangono inalterati , 
salvo per la possibilità di generare la stringa vuota
tipo-produzioni ammesse
0 tutte (per definizione)
1 solo sull’assioma quando quest’ultimo non 
compare mai a destra di una produzione
2 tutte
3 tutte57
58", linguaggio grammatiche  produzioni •con grammatiche tipo possibile generare stringa vuota –per generare occorre produzione →che viene detta produzione –per chomsky ilinguaggi checontengono  produzioni linguaggi tipo •qual l’impatto corrispondenti linguaggi delle produzioni grammatiche –se ammettiamo  produzioni dobbiamo fare attenzione altrimenti rischiamo snaturare gerarchia chomsky  produzioni variazione gerarchia seguenti modifiche ilinguaggi generati dale diverse tipologie grammatiche rimangono inalterati salvo possibilità generare stringa vuota tipo produzioni ammesse tutte per definizione solo sull’assioma quando quest’ultimo compare mai destra produzione tutte tutte ,[3],"[(3, 0.98571205)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,29,"9/28/2021
3002-linguaggio -e-grammatiche -24
59Esempi di grammatiche
•il linguaggio {w ◦w| w (a+b)*}
•è generato dalla grammatica contestuale
S → T | 
T → aAT | bBT | A0a| B0bAa→ aA
Ab→ bA
Ba→ aB
Bb→ bBAA0→ A0a
BA0→ A0b
AB0→ B0a
BB0→ B0b(1) (2) (3)
A0→ a
B0→ b(4)
•le (1) generano insieme caratteri della prima e della seconda 
stringa; A0(B0) è l’ultimo carattere della prima stringa
•le (2) e le (3) separano la prima stringa dalla seconda
•le (4) chiudono la generazione, se sono applicate troppo presto 
il processo diverge
60Esempi di grammatiche
•il linguaggio {(x #)*| x = permutazione di (a,b,c)} (che contiene 
per esempio le stringhe , abc# , acb# , bac#cab# , ecc)
•ma è generato anche dalla grammatica CF:
S → E#S |  E → abc | acb | cba | cab | bac | bca
•ed anche dalla grammatica regolare:
S → aX | bY | cZ | 
X → bX| cX
X→ cR
X→ bRR → #S
Y → aY| cY
Y→ cR
Y→ aRZ → aZ| bZ
Z→ bR
Z→ aRS → S’ |  A → a
B → b
C → cAB → BA
AC → CA
BC → CBS’ → ABC#
S’ → ABC#S’è generato dalla grammatica contestuale:59
60", linguaggio grammatiche esempi grammatiche •il linguaggio w ◦w w ab •è generato grammatica contestuale s → t  t → aat bbt aa bbaa→ aa ab→ ba ba→ ab bb→ bbaa→ aa ba→ ab ab→ ba bb→ bb a→ b→ b •le generano insieme caratteri prima seconda stringa ab l’ultimo carattere prima stringa •le separano prima stringa seconda •le chiudono generazione applicate troppo presto processo diverge esempi grammatiche •il linguaggio x x permutazione abc che contiene esempio stringhe  abc acb baccab ecc •ma generato grammatica cf s → es  → abc acb cba cab bac bca •ed grammatica regolare s → ax by cz  x → bx cx x→ cr x→ brr → s y → ay cy y→ cr y→ arz → az bz z→ br z→ ars → s’  → b → b → cab → ba ac → ca bc → cbs’ → abc s’ → abcs’è generato grammatica contestuale ,[0],"[(0, 0.9891528)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,30,"9/28/2021
3102-linguaggio -e-grammatiche -24
61Forma normale di Backus
•la BNF è una notazione CF con alcuni accorgimenti 
sintattici che ne aumentano la leggibilità
<sequenza istruzioni> ::= <istruzione>; 
{<istruzione>;}
<istruzione if> ::= if ( <condizione> ) 
<istruzione> [else <istruzione>]esempio
può essere riscritto:
Q → I;| I;Q
può essere riscritto:
F → if( C )I else I | if( C )I
62Riconoscimento dei linguaggi
•esistono linguaggi a cui non corrisponde alcun algoritmo 
di decisione
•i linguaggi di tipo 3 sono riconosciuti da dispositivi con 
memoria costante in tempo lineare (automi a stati finiti)
•i linguaggi strettamente di tipo 2 sono riconosciuti da 
dispositivi non deterministici con pila in tempo lineare 
(automi a pila non deterministici)problema : 
stabilire se una stringa appartiene ad un dato linguaggio61
62", linguaggio grammatiche forma normale backus •la bnf notazione cf alcuni accorgimenti sintattici aumentano leggibilità sequenza istruzioni istruzione istruzione istruzione if if condizione istruzione else istruzioneesempio può essere riscritto q → i iq può essere riscritto f → if i else if i riconoscimento linguaggi •esistono linguaggi corrisponde alcun algoritmo decisione •i linguaggi tipo riconosciuti dispositivi memoria costante tempo lineare automi stati finiti •i linguaggi strettamente tipo riconosciuti dispositivi deterministici pila tempo lineare automi pila deterministiciproblema stabilire stringa appartiene dato linguaggio ,"[4, 8]","[(4, 0.66847324), (8, 0.3192121)]"
dataExtraction\data_test\rootfolder\universita\algoBigData\primoEsonero\020-linguaggi-e-grammatiche-24.pdf,31,"9/28/2021
3202-linguaggio -e-grammatiche -24
63Riconoscimento dei linguaggi
•i linguaggi strettamente di tipo 1 sono riconosciuti da 
dispositivi non deterministici con memoria che cresce 
linearmente con la lunghezza della stringa da esaminare 
(automi non deterministici “linear bounded”)
•i linguaggi strettamente di tipo 0 sono riconosciuti da 
macchine di Turing con memoria e tempo illimitati
–è possibile che non esista un algoritmo di decisione ma un 
processo semidecisionale, in cui, se la stringa non fa parte del 
linguaggio non è detto che la computazione termini
63", linguaggio grammatiche riconoscimento linguaggi •i linguaggi strettamente tipo riconosciuti dispositivi deterministici memoria cresce linearmente lunghezza stringa esaminare automi deterministici “linear bounded” •i linguaggi strettamente tipo riconosciuti macchine turing memoria tempo illimitati –è possibile esista algoritmo decisione processo semidecisionale cui stringa fa parte linguaggio detto computazione termini ,[8],"[(8, 0.97856706)]"
dataExtraction\data_test\rootfolder\universita\analisiProgettazioneSoftware\hofmeister2005.pdf,0,"Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . 
Pittsburgh, PA, November 6-9, 2005.    Named one of the five best papers of the conference. 
1 Generalizing a Model of Soft ware Architecture Design  
from Five Industrial Approaches 
Christine Hofmeister 
Lehigh University 
Bethlehem, PA, USA 
crh@eecs.lehigh.edu Philippe Kruchten 
University of British Columbia
Vancouver, B.C., Canada 
pbk@ece.ubc.ca  Robert L. Nord 
Software Engineering Institute
Pittsburgh, PA, USA 
rn@sei.cmu.edu  
Henk Obbink 
Philips Research Labs 
Eindhoven, The Netherlands 
henk.obbink@philips.com Alexander Ran 
Nokia 
Burlington, MA, USA 
alexander.ran@nokia.com Pierre America 
Philips Research Labs 
Eindhoven, The Netherlands 
pierre.america@philips.com 
 
Abstract 
We compare five industrial software architecture 
design methods and we extract from their commonal-ities a general software architecture design approach. 
Using this general approach, we compare across the 
five methods the artifacts and activities they use or recommend, and we pinpoint similarities and differ-
ences. Once we get beyond th e great variance in termi-
nology and description, we find that the 5 approaches have a lot in common and match more or less the 
“ideal” pattern we introduced. 
1. Introduction  
Over the last 15 years a number of organizations 
and individual researchers have developed and docu-
mented techniques, processes, guidelines, and best 
practices for software architect ure design [4, 5, 6, 7, 8, 
12, 15]. Some of these were cast and published as ar-
chitecture design methods or systems of concepts, 
processes and techniques for architecture design [16, 22, 26, 27].  
Since many of the design methods were developed 
independently, their descriptions use different vocabu-lary and appear quite different from each other. Some 
of the differences are essential. Architecture design 
methods that were developed in different domains naturally exhibit domain characteristics and emphasize 
different goals. For exampl e architectural design of 
information systems emphasizes data modeling, and architecture design of tel ecommunication software is 
concerned with continuous operation, live upgrade and 
interoperability. Other esse ntial differences may in-
clude methods designed for large organization vs. 
methods suitable for a team of a dozen software devel-opers, methods with explicit support for product fami-
lies vs. methods for one of a kind systems, etc. 
On the other hand, all software architecture design 
methods must have much in common as they deal with 
the same basic problem: maintaining intellectual con-trol over the design of larg e software systems that: re-
quire involvement of and negotiation among multiple 
stakeholders; are developed by large, often distributed teams over extended periods of time; and have to ad-
dress multiple possibly conflicting goals and concerns. 
It is thus of significant interest to understand the 
commonalities that exist between different methods 
and to develop a general model of architecture design. 
Such a model would help us better understand the 
strengths and weaknesses of different existing methods 
as well as provide a framework for developing new methods better suited to specific application domains. 
With this goal in mind, we selected five different 
methods: Attribute-Driven Design (ADD) Method  [4], developed at the SEI; Siemens’ 4 Views (S4V) method 
[16], developed at Siemens Corporate Research; the 
Rational Unified Process 4 + 1 views (RUP 4+1) [21, 22] developed and commercialized by Rational Soft-
ware, now IBM; Business Architecture Process and 
Organization (BAPO) developed primarily at Philips Research [1, 26], and Architectural Separation of Con-
cerns (ASC) [27] developed at Nokia Research. We 
also assembled a team of people who have made sig-nificant contributions to developing and documenting 
at least one of the methods. Through extensive discus-
sions focused on how typical  architecture design tasks 
are accomplished by different  methods, we have ar-
rived at a joint understanding of a general software 
architecture design model that underlies the five meth-
ods.  In this paper we document our understanding of ",proceedings of the th working ieeeifip conference on software architecture wicsa pittsburgh pa november named one of the five best papers of the conference generalizing model of soft ware architecture design from five industrial approaches christine hofmeister lehigh university bethlehem pa usa crheecslehighedu philippe kruchten university of british columbia vancouver bc canada pbkeceubcca robert l nord software engineering institute pittsburgh pa usa rnseicmuedu henk obbink philips research labs eindhoven the netherlands henkobbinkphilipscom alexander ran nokia burlington ma usa alexanderrannokiacom pierre america philips research labs eindhoven the netherlands pierreamericaphilipscom abstract we compare five industrial software architecture design methods and we extract from their commonal ities general software architecture design approach using this general approach we compare across the five methods the artifacts and activities they use or recommend and we pinpoint similarities and differ ences once we get beyond th great variance termi nology and description we find that the approaches have lot common and match more or less the “ideal” pattern we introduced introduction over the last years number of organizations and individual researchers have developed and docu mented techniques processes guidelines and best practices for software architect ure design some of these were cast and published as ar chitecture design methods or systems of concepts processes and techniques for architecture design since many of the design methods were developed independently their descriptions use different vocabu lary and appear quite different from each other some of the differences are essential architecture design methods that were developed different domains naturally exhibit domain characteristics and emphasize different goals for exampl architectural design of information systems emphasizes data modeling and architecture design of tel ecommunication software is concerned with continuous operation live upgrade and interoperability other esse ntial differences may clude methods designed for large organization vs methods suitable for team of dozen software devel opers methods with explicit support for product fami lies vs methods for one of kind systems etc on the other hand software architecture design methods must have much common as they deal with the same basic problem maintaining intellectual trol over the design of larg software systems that re quire involvement of and negotiation among multiple stakeholders are developed by large often distributed teams over extended periods of time and have to dress multiple possibly conflicting goals and concerns it is thus of significant interest to understand the commonalities that exist between different methods and to develop general model of architecture design such model would help us better understand the strengths and weaknesses of different existing methods as well as provide framework for developing new methods better suited to specific application domains with this goal mind we selected five different methods attribute driven design add method developed at the sei siemens’ views sv method developed at siemens corporate research the rational unified process views rup developed and commercialized by rational soft ware now ibm business architecture process and organization bapo developed primarily at philips research and architectural separation of cerns asc developed at nokia research we also assembled team of people who have made sig nificant contributions to developing and documenting at least one of the methods through extensive discus sions focused on how typical architecture design tasks are accomplished by different methods we have ar rived at joint understanding of general software architecture design model that underlies the five meth ods this paper we document our understanding of,[4],"[(4, 0.99578446)]"
dataExtraction\data_test\rootfolder\universita\analisiProgettazioneSoftware\hofmeister2005.pdf,1,"Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . 
Pittsburgh, PA, November 6-9, 2005.    Named one of the five best papers of the conference. 
2 what seems to be fundamental about architecture de-
sign.  
This paper is organized as follows. We introduce 
the five contributing methods in Section 2. Then in Section 3 we present a general model of architecture 
design. Section 4describes the five contributing meth-
ods using terms and concepts of the general model, and discusses the commonalities and differences between 
the contributing methods. Section 5 discusses related 
work, and Section 6 concludes the paper. 
2. Five Industrial Software Architecture 
Design Methods 
2.1. Attribute-Driven Design 
The Attribute-Driven Design (ADD) method [4], 
developed at the SEI, is an approach to defining soft-
ware architectures by basing the design process on the 
architecture’s quality attribute requirements. It follows 
a recursive decomposition pro cess where, at each stage 
in the decomposition, architectural tactics and patterns are chosen to satisfy a set of quality attribute scenarios.  
In ADD, the architects, for each module to decom-
pose, 1) choose the architectural drivers, 2) choose an 
architectural pattern that satis fies the drivers, 3) instan-
tiate modules and allocate functionality from use cases, and represent the results using multiple views, 4) de-
fine interfaces of the child modules, and 5) verify and 
refine the use cases and quality scenarios, making them constraints for the child modules. 
 
2.2. Siemens’ 4 views 
The Siemens Four-Views (S4V) method [16, 32],  
developed at Siemens Corporate Research, is based on 
best architecture practices fo r industrial systems. The 
four views (conceptual, execution, module and code 
architecture view), separate  different engineering con-
cerns, thus reducing the comp lexity of the architecture 
design task. 
These views are developed in the context of a re-
curring Global Analysis act ivity. For Global Analysis, 
the architect identifies the organizational, technologi-
cal, and product factors that influence the architecture: 
requirements, desired system qualities, organizational constraints, existing technology, etc. From these the 
key architectural issues or challenges are identified; 
typically they arise from a set of factors that, taken 
together, will be difficult to fulfill. Design strategies 
are proposed to solve the issu e, and they are applied to 
one or more of the views. In addition to interleaving Global Analysis with the vi ew design, the architect is 
expected to iterate among the design tasks of the four 
views. 
 2.3. RUP’s 4+1 Views 
The Rational Unified Process (RUP) is a software 
development process developed and commercialized 
by Rational Software, now IBM. RUP includes an ar-chitectural design method, using the concept of 4+1 
views (RUP 4+1) [21, 22]; four views to describe the 
design: logical view, process view, implementation view and deployment view, using a use-case view to 
relate the design to the context and goals. 
In RUP, architectural design is spread over several 
iterations in an elaboration phase, iteratively populating 
the 4 views, driven by ar chitecturally significant use 
cases, nonfunctional requirements in the supplementary specification, and risks. Each iteration results in an 
executable architectural prot otype, which is used to 
validate the architectural design.  
2.4. Business Architecture Process and Organi-
zation 
The BAPO/CAFCR approach [1, 24, 26, 33], de-
veloped primarily by Philips Research, aims at devel-
oping an architecture (the A in BAPO) for software-
intensive systems that fits optimally in the context of 
business (B), process (P), and organization (O). For 
that purpose, the five CAFCR views are described: Customer, Application, Functional, Conceptual, and 
Realization. These views bridge the gap between cus-
tomer needs, wishes, and ob jectives on the one hand 
and technological realization on the other hand.  
In BAPO/CAFCR, the architect iteratively: 1) fills 
in information in one of the CAFCR views, possibly in the form of one of the sugges ted artifacts; 2) analyzes a 
particular quality attribute across the views to establish 
a link between the views and with the surrounding business, processes and orga nization. The architecture 
is complete when there is sufficient information to real-
ize the system and the quality attribute analysis shows no discrepancies. 
 
2.5. Architectural Separation of Concerns 
Architectural Separation of Concerns (ASC) or 
ARES System of Concepts [27], developed primarily 
by Nokia, is a conceptual framework based on separa-tion of concerns to manage complexity of architecture 
design. ASC relies on the fact that concerns related to 
different segments of the so ftware transformation cycle 
(typically including design, build, upgrade, load, and 
run time) are often separable.   In addition to design of 
architectural structures fo r each segment, ASC pays 
special attention to design of texture – replicated mi-
crostructure that addresses concerns that cannot be lo-
calized within the main structure. ",proceedings of the th working ieeeifip conference on software architecture wicsa pittsburgh pa november named one of the five best papers of the conference what seems to be fundamental about architecture de sign this paper is organized as follows we introduce the five contributing methods section then section we present general model of architecture design section describes the five contributing meth ods using terms and concepts of the general model and discusses the commonalities and differences between the contributing methods section discusses related work and section concludes the paper five industrial software architecture design methods attribute driven design the attribute driven design add method developed at the sei is an approach to defining soft ware architectures by basing the design process on the architecture’s quality attribute requirements it follows recursive decomposition pro cess where at each stage the decomposition architectural tactics and patterns are chosen to satisfy set of quality attribute scenarios add the architects for each module to decom pose choose the architectural drivers choose an architectural pattern that satis fies the drivers instan tiate modules and allocate functionality from use cases and represent the results using multiple views de fine interfaces of the child modules and verify and refine the use cases and quality scenarios making them constraints for the child modules siemens’ views the siemens four views sv method developed at siemens corporate research is based on best architecture practices fo r industrial systems the four views conceptual execution module and code architecture view separate different engineering cerns thus reducing the comp lexity of the architecture design task these views are developed the context of re curring global analysis act ivity for global analysis the architect identifies the organizational technologi cal and product factors that influence the architecture requirements desired system qualities organizational constraints existing technology etc from these the key architectural issues or challenges are identified typically they arise from set of factors that taken together will be difficult to fulfill design strategies are proposed to solve the issu e and they are applied to one or more of the views addition to interleaving global analysis with the ew design the architect is expected to iterate among the design tasks of the four views rup’s views the rational unified process rup is software development process developed and commercialized by rational software now ibm rup includes an ar chitectural design method using the concept of views rup four views to describe the design logical view process view implementation view and deployment view using use case view to relate the design to the context and goals rup architectural design is spread over several iterations an elaboration phase iteratively populating the views driven by ar chitecturally significant use cases nonfunctional requirements the supplementary specification and risks each iteration results an executable architectural prot otype which is used to validate the architectural design business architecture process and organi zation the bapocafcr approach de veloped primarily by philips research aims at devel oping an architecture the bapo for software intensive systems that fits optimally the context of business b process p and organization o for that purpose the five cafcr views are described customer application functional conceptual and realization these views bridge the gap between cus tomer needs wishes and ob jectives on the one hand and technological realization on the other hand bapocafcr the architect iteratively fills information one of the cafcr views possibly the form of one of the sugges ted artifacts analyzes particular quality attribute across the views to establish link between the views and with the surrounding business processes and orga nization the architecture is complete when there is sufficient information to real ize the system and the quality attribute analysis shows no discrepancies architectural separation of concerns architectural separation of concerns asc or ares system of concepts developed primarily by nokia is conceptual framework based on separa tion of concerns to manage complexity of architecture design asc relies on the fact that concerns related to different segments of the so ftware transformation cycle typically including design build upgrade load and run time are often separable addition to design of architectural structures fo r each segment asc pays special attention to design of texture – replicated crostructure that addresses concerns that cannot be calized within the main structure,[4],"[(4, 0.9987164)]"
dataExtraction\data_test\rootfolder\universita\analisiProgettazioneSoftware\hofmeister2005.pdf,2,"Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . 
Pittsburgh, PA, November 6-9, 2005.    Named one of the five best papers of the conference. 
3 In ASC, the architect analyses design inputs, such 
as preferred technology platforms, road maps, func-
tional and quality requirements for the product family 
and the product, and using a palette of techniques, pro-duces and prioritizes ASR (architecturally significant 
requirements), groups ASR by segments of the soft-
ware transformation cycle that they address. Implemen-tation (write-time) design addresses the ASR con-
cerned with the write-time se gment. Design decisions 
make implementation technology choices, partition functional requirements betw een different architectural 
scopes of product portfolio, product family, or single 
product, establish portability  layers for multiplatform 
products, allocate classes of functional requirements to 
different subsystems, and develop description of the API facilitating work division and outsourcing. Per-
formance (run-time) design deals with run-time ASR 
addressing concurrency and protection, develops per-formance models and makes decisions regarding task 
and process partitions, scheduling policies, resource 
sharing and allocation. Finally, delivery/installation/ upgrade design decisions addr ess the ASR of the corre-
sponding segments. Typical decisions address parti-
tions into separately loadable/executable units, installa-tion support, configuration data, upgrade/downgrade 
policies and mechanisms, management of shared com-
ponents, external dependencies and compatibility re-quirements. 
3. A General Model for Software Architec-
ture Design  
The general model for software architecture design 
we developed first classifies the kinds of activities per-
formed during design. Architect ural analysis articulates 
architecturally significant requirements (ASRs) based 
on the architectural concerns and context. Architectural 
synthesis results in candidate architectural solutions 
that address these requirem ents. Architectural evalua-
tion ensures that the architectural decisions used are the right ones (see Figure 1).  
Because of the complexity of the design task, these 
activities are not executed sequentially. Instead they 
are used repeatedly, at multiple levels of granularity, until the architecture is complete and validated. Thus 
the second part of the general model is a characteriza-
tion of its workflow. 
The key requirement of our model was that it be 
general enough to fit our fi ve architecture design meth-
ods, and provide a useful framework for comparing them. One strong influence on the activities in our 
model was Gero’s Function-Behavior-Structure 
framework for engineering design [13, 14], which 
Kruchten applies to software design in [23]. 
 
3.1. Architectural Design Activities & Artifacts 
First we describe the main activities of the model, 
and their related artifacts. 
Architectural concerns:  The IEEE 1471 standard 
defines architectural concerns as “those interests which 
pertain to the system’s development, its operation or 
any other aspects that are critical or otherwise impor-
tant to one or more stakeholders. Concerns include 
system considerations such as performance, reliability, 
security, distribution, and evolvability” [18]. Most ar-
chitectural concerns are expressed as requirements on 
the system, but they can also  include mandated design 
decisions (e.g., use of existing standards). Regulatory 
requirements may also in troduce architectural con-
cerns. 
Context:  According to IEEE 1471, “a system’s … 
environment, or context, determines the setting and 
circumstances of developmental, operational, political, and other influences upon that system” [18]. This in-
cludes things like business goals (e.g., buy vs. build), 
characteristics of the organization (e.g., skills of devel-opers, development tools available), and the state of 
technology. Note that sometimes the only distinction 
between a concern and a context is whether it is spe-cifically desired for this system (a concern) or is in-
 
 
Figure 1: Architectural design activities ",proceedings of the th working ieeeifip conference on software architecture wicsa pittsburgh pa november named one of the five best papers of the conference asc the architect analyses design inputs such as preferred technology platforms road maps func tional and quality requirements for the product family and the product and using palette of techniques pro duces and prioritizes asr architecturally significant requirements groups asr by segments of the soft ware transformation cycle that they address implemen tation write time design addresses the asr cerned with the write time gment design decisions make implementation technology choices partition functional requirements betw een different architectural scopes of product portfolio product family or single product establish portability layers for multiplatform products allocate classes of functional requirements to different subsystems and develop description of the api facilitating work division and outsourcing formance run time design deals with run time asr addressing concurrency and protection develops formance models and makes decisions regarding task and process partitions scheduling policies resource sharing and allocation finally deliveryinstallation upgrade design decisions addr ess the asr of the corre sponding segments typical decisions address parti tions into separately loadableexecutable units installa tion support configuration data upgradedowngrade policies and mechanisms management of shared com ponents external dependencies and compatibility re quirements general model for software architec ture design the general model for software architecture design we developed first classifies the kinds of activities formed during design architect ural analysis articulates architecturally significant requirements asrs based on the architectural concerns and context architectural synthesis results candidate architectural solutions that address these requirem ents architectural evalua tion ensures that the architectural decisions used are the right ones see figure because of the complexity of the design task these activities are not executed sequentially instead they are used repeatedly at multiple levels of granularity until the architecture is complete and validated thus the second part of the general model is characteriza tion of its workflow the key requirement of our model was that it be general enough to fit our fi ve architecture design meth ods and provide useful framework for comparing them one strong influence on the activities our model was gero’s function behavior structure framework for engineering design which kruchten applies to software design architectural design activities artifacts first we describe the main activities of the model and their related artifacts architectural concerns the ieee standard defines architectural concerns as “those interests which pertain to the system’s development its operation or any other aspects that are critical or otherwise impor tant to one or more stakeholders concerns include system considerations such as performance reliability security distribution and evolvability” most ar chitectural concerns are expressed as requirements on the system but they can also include mandated design decisions eg use of existing standards regulatory requirements may also troduce architectural cerns context according to ieee “a system’s … environment or context determines the setting and circumstances of developmental operational political and other influences upon that system” this cludes things like business goals eg buy vs build characteristics of the organization eg skills of devel opers development tools available and the state of technology note that sometimes the only distinction between concern and context is whether it is spe cifically desired for this system a concern or is figure architectural design activities,[4],"[(4, 0.99831605)]"
dataExtraction\data_test\rootfolder\universita\analisiProgettazioneSoftware\hofmeister2005.pdf,3,"Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . 
Pittsburgh, PA, November 6-9, 2005.    Named one of the five best papers of the conference. 
4 stead a general characteristic or goal of the organiza-
tion or a stakeholder (context). For example, a business 
goal of the architecture is a concern, whereas a busi-
ness goal of the enterprise is context. 
Architecturally-Significant Requirements:  An 
ASR is “a requirement upon a software system which 
influences its architecture” [2 5]. Not all of the system’s 
requirements will be relevant to the architecture. Con-
versely, not all ASRs will have originally been ex-
pressed as requirements: they may arise from other architectural concerns or from the system context. 
Architectural analysis: Architectural analysis 
serves to define the prob lems the architecture must 
solve. This activity examin es architectural concerns 
and context in order to come up with a set of ASRs.  
Candidate architectural solutions:  Candidate ar-
chitectural solutions may present alternative solutions, 
and/or may be partial solutions (i.e., fragments of an architecture). They reflect design decisions about the 
structure of software. The architectural solutions in-
clude information about the design rationale, that is, commentary on why decisions where made, what deci-
sions were considered and rejected, and traceability of 
decisions to requirements. 
Architectural synthesis: Architectural synthesis 
is the core of architectur e design. This activity pro-
poses architecture solutions to a set of ASRs, thus it moves from the problem to the solution space.  
Validated architecture:  The validated architec-
ture consists of those candidate architectural solutions that are consistent with the ASRs. These solutions must 
also be mutually consistent. Only one of a set of alter-
native solutions can be present in the validated archi-
tecture. The validated arch itecture, like the candidate 
architectural solutions, incl udes information about the 
design rationale. 
Architectural evaluation:  Architectural evalua-
tion ensures that the archit ectural design decisions 
made are the right ones. The candidate architectural 
solutions are measured against the ASRs. Although 
multiple iterations are expect ed, the eventual result of 
architectural evaluation is the validated architecture. 
Intermediate results would be the validation or invali-
dation of candidate ar chitectural solutions. 
In addition to the above-described artifacts used in 
the design activities, there are some less explicit inputs 
that are critical to the design process: 
 Design knowledge comes fr om the architect, from 
organizational memory, or from the architecture 
community.  It can take the form of styles, patterns, frameworks, reference architectures, ADLs, product-
line technologies, etc.  
 Analysis knowledge is needed to define the problem 
and evaluate the solution.  Some work exists in 
analysis patterns [11] and analytic models associated with design fragments [2].  Knowledge of the evalua-
tion process itself (e.g., workflow, methods and 
techniques) [25] can also be an important input. 
 Knowledge necessary to pr oduce the system (tech-
nologies, components, project management). In 
many cases analysis knowledge is not sufficient to 
evaluate the architecture.  One example is when a 
partial implementation is needed upon which to do 
experimentation. In general the design must be 
evaluated using realization knowledge, in order to ensure that the system can be built.  
 
3.2. Workflow 
In all five of the architectural methods on which 
our model is based, the three main activities in Figure 1 
(architectural analysis, arch itectural synthesis, and ar-
chitectural evaluation) do not proceed sequentially, but 
rather proceed in small l eaps and bounds as architects 
move constantly from one to another, “growing” the architecture progressively over  time. This is primarily 
because it is not possible to an alyze, resolve, find solu-
tions and evaluate the archit ecture for all architectural 
concerns simultaneously: the range and number of in-
terrelated issues is just too overwhelming for the hu-man mind, and moreover the inputs (goals, constraints, 
etc) are usually ill-defined and only get better under-
stood or discovered as the architecture starts to emerge. 
To drive this apparently  haphazard process, archi-
tects maintain, implicitly or explicitly, a backlog  of 
smaller needs, issues, problem s they need to tackle and 
ideas they might want to us e. The backlog drives the 
workflow, helping the architect determine what to do 
next. It is not an externally visible, persistent artifact; on small projects it may only be a list in the architect’s 
notebook, while for larger projects it might be an elec-
tronic, shared spreadsheet. See Figure 2. 
The backlog is fed by: a) selecting some architec-
tural concern and/or ASR fr om architectural analysis, 
b) negative feedback in the form of issues or problems arising from architectural evaluation, and to a lesser 
extent, c) ideas from the architect’s experience, discus-
sions, readings, etc. A backlog item can be thought of 
as a statement of the form: 
 “We need to make a decision about X.” 
 or “We should look at Y in order to address Z.” 
The backlog is constantly prioritized, bringing to 
the front the items that seem most urgent. The tactics for prioritization will vary, mostly based on external 
forces. These forces include risks to mitigate, upcom-
ing milestones, team pressure to start work on a part of the system, or simply perception of greater difficulty. 
Very often it is simply the need to relieve pressure 
from a stakeholder that drives  an item to the top of the 
backlog.",proceedings of the th working ieeeifip conference on software architecture wicsa pittsburgh pa november named one of the five best papers of the conference stead general characteristic or goal of the organiza tion or stakeholder context for example business goal of the architecture is concern whereas busi ness goal of the enterprise is context architecturally significant requirements an asr is “a requirement upon software system which influences its architecture” not of the system’s requirements will be relevant to the architecture versely not asrs will have originally been ex pressed as requirements they may arise from other architectural concerns or from the system context architectural analysis architectural analysis serves to define the prob lems the architecture must solve this activity examin es architectural concerns and context order to up with set of asrs candidate architectural solutions candidate ar chitectural solutions may present alternative solutions andor may be partial solutions ie fragments of an architecture they reflect design decisions about the structure of software the architectural solutions clude information about the design rationale that is commentary on why decisions where made what deci sions were considered and rejected and traceability of decisions to requirements architectural synthesis architectural synthesis is the core of architectur design this activity pro poses architecture solutions to set of asrs thus it moves from the problem to the solution space validated architecture the validated architec ture consists of those candidate architectural solutions that are consistent with the asrs these solutions must also be mutually consistent only one of set of alter native solutions can be present the validated archi tecture the validated arch itecture like the candidate architectural solutions incl udes information about the design rationale architectural evaluation architectural evalua tion ensures that the archit ectural design decisions made are the right ones the candidate architectural solutions are measured against the asrs although multiple iterations are expect ed the eventual result of architectural evaluation is the validated architecture intermediate results would be the validation or invali dation of candidate ar chitectural solutions addition to the above described artifacts used the design activities there are some less explicit inputs that are critical to the design process  design knowledge comes fr om the architect from organizational memory or from the architecture community it can take the form of styles patterns frameworks reference architectures adls product line technologies etc  analysis knowledge is needed to define the problem and evaluate the solution some work exists analysis patterns and analytic models associated with design fragments knowledge of the evalua tion process itself eg workflow methods and techniques can also be an important input  knowledge necessary to pr oduce the system tech nologies components project management many cases analysis knowledge is not sufficient to evaluate the architecture one example is when partial implementation is needed upon which to do experimentation general the design must be evaluated using realization knowledge order to ensure that the system can be built workflow five of the architectural methods on which our model is based the three main activities figure architectural analysis arch itectural synthesis and ar chitectural evaluation do not proceed sequentially but rather proceed small eaps and bounds as architects move constantly from one to another “growing” the architecture progressively over time this is primarily because it is not possible to an alyze resolve find solu tions and evaluate the archit ecture for architectural concerns simultaneously the range and number of terrelated issues is just too overwhelming for the hu man mind and moreover the inputs goals constraints etc are usually ill defined and only get better under stood or discovered as the architecture starts to emerge to drive this apparently haphazard process archi tects maintain implicitly or explicitly backlog of smaller needs issues problem s they need to tackle and ideas they might want to us e the backlog drives the workflow helping the architect determine what to do next it is not an externally visible persistent artifact on small projects it may only be list the architect’s notebook while for larger projects it might be an elec tronic shared spreadsheet see figure the backlog is fed by a selecting some architec tural concern andor asr fr om architectural analysis b negative feedback the form of issues or problems arising from architectural evaluation and to lesser extent c ideas from the architect’s experience discus sions readings etc backlog item can be thought of as statement of the form  “we need to make decision about x”  or “we should look at y order to address z” the backlog is constantly prioritized bringing to the front the items that seem most urgent the tactics for prioritization will vary mostly based on external forces these forces include risks to mitigate upcom ing milestones team pressure to start work on part of the system or simply perception of greater difficulty very often it is simply the need to relieve pressure from stakeholder that drives an item to the top of the backlog,[4],"[(4, 0.99324644)]"
dataExtraction\data_test\rootfolder\universita\analisiProgettazioneSoftware\hofmeister2005.pdf,4,"Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . Pittsburgh, PA, November 6-9, 
2005.    Named one of the five be st papers of the conference. 
5 Table 1 – Comparing methods: Activities 
Activity ADD S4V RUP 4+1 BAPO/CAFCR ASC 
Architectural 
analysis Step 2a: Choose the architec-
tural drivers. 
Quality attribute models help 
elicit and structure the re-quirements. Global Analysis involves 1) identifying 
influencing factors; 2) analyzing them 
to identify their im portance to the ar-
chitecture, flexibility, and change-ability; 3) identifying key issues or 
problems that arise from a set of factors  Build or extract a 
subset of the use case 
model as key drivers 
for architectural de-sign BAPO analysis identifies 
those elements of the 
BAPO context that are 
relevant for the architec-tural fit and determine the 
scope of the architecture Concept definition, identification 
and refinement of ASR, partition of 
ASR by software segments: runtime, 
development, load, etc. Thus analy-sis results in a collection of semi 
separable problems. 
Architectural 
synthesis Steps 2b: Choose an architec-
tural pattern that satisfies the architectural drivers; 2c: In-
stantiate modules and allocate 
functionality from the use cases using multiple views; 2d: Define interfaces of the child 
modules. The fourth part of Global Analysis, 
identifying solution strategies, is the 
beginning of arch. synthesis. Then 
strategies are instantiated as design 
decisions that determine the number and type of design elements for one of the software architecture views. Design 
decisions can be captured in a table.  Gradually build during 
the elaboration phase architecture organized 
along 4 different 
views; in parallel implement an architec-tural prototype. Elaborate the five CAFCR 
views, adding or refining artifacts suitable for the 
particular system Address the ASR, segment by seg-
ment in an iterative process, resolv-ing conflicts between the ASR 
within the same segment and inte-
grating solutions from different segments. 
Architectural evaluation Step 2e: Verify and refine use 
cases and quality scenarios and make them constraints for the 
child modules.   Note: this step 
bridges evaluation and analy-sis, preparing for the next 
iteration of ADD. S4V splits evaluation into global 
evaluation (done by the architect as the design progresses ) and architecture 
evaluation, led by a team of external 
reviewers, and done at major check-points (e.g. to validate arch. concepts 
and after design is complete). Build an executable 
prototype architecture to assess whether 
architectural objec-
tives have been met, and risks retired 
(elaboration phase). Evaluation of the CAFCR 
views in the BAPO con-text and quality attribute 
analysis across the 
CAFCR views Architectural decisions are evaluated 
with respect to ASR that they ad-dress. Typical procedure of evalua-
tion may include model-based analy-
sis (LQN, Petri nets, Q nets) simula-tion, prototyping, and discussion of 
change / use scenarios  
 
 
Table 2: Comparing methods: Artifacts  
Artifact ADD S4V RUP 4+1 BAPO/CAFCR ASC 
Architectural 
concerns Functional require-
ments, system quality 
attribute requirements, 
design constraints. Influencing factors are organizational, 
technological, and product factors. Prod-
uct factors, describing required charac-
teristics of the product, are always archi-tectural concerns, so are technological 
factors (state of technology including 
standards) that could affect the product.  Vision document, Supplemen-
tary specification (for non func-
tional requirements); the Risk 
List identifies, among others, technical issues: elements that 
are novel, unknown, or just 
perceived as challenging. These concerns are expressed 
in the Customer and Applica-
tion views. The overriding 
meta-concern is bridging the gap between customer needs, 
wishes, and objectives and 
technological realization. Each product family has lists of 
typical concerns that need to be 
addressed by products in the 
domain. Stakeholders contrib-ute product specific concerns 
during product conception 
phase. 
Context Business quality goals 
(e.g., time to market, 
cost and benefit), 
architecture qualities (e.g., conceptual integ-rity, buildability) Organizational factors (see above) are 
usually context, not concerns. Business case and Vision docu-
ment Business goals and con-
straints (including the scope 
of the market to be ad-
dressed), process goals and constraints, organizational goals and constraints Preferred technology platforms 
Technology/product road maps 
Product family functional and 
quality requirements System / hardware architecture Implementation constraints 
 ",proceedings of the th working ieeeifip conference on software architecture wicsa pittsburgh pa november named one of the five be st papers of the conference table – comparing methods activities activity add sv rup bapocafcr asc architectural analysis step a choose the architec tural drivers quality attribute models help elicit and structure the re quirements global analysis involves identifying influencing factors analyzing them to identify their im portance to the ar chitecture flexibility and change ability identifying key issues or problems that arise from set of factors build or extract subset of the use case model as key drivers for architectural de sign bapo analysis identifies those elements of the bapo context that are relevant for the architec tural fit and determine the scope of the architecture concept definition identification and refinement of asr partition of asr by software segments runtime development load etc thus analy sis results collection of semi separable problems architectural synthesis steps b choose an architec tural pattern that satisfies the architectural drivers c stantiate modules and allocate functionality from the use cases using multiple views d define interfaces of the child modules the fourth part of global analysis identifying solution strategies is the beginning of arch synthesis then strategies are instantiated as design decisions that determine the number and type of design elements for one of the software architecture views design decisions can be captured table gradually build during the elaboration phase architecture organized along different views parallel implement an architec tural prototype elaborate the five cafcr views adding or refining artifacts suitable for the particular system address the asr segment by seg ment an iterative process resolv ing conflicts between the asr within the same segment and inte grating solutions from different segments architectural evaluation step e verify and refine use cases and quality scenarios and make them constraints for the child modules note this step bridges evaluation and analy sis preparing for the next iteration of add sv splits evaluation into global evaluation done by the architect as the design progresses and architecture evaluation led by team of external reviewers and done at major check points eg to validate arch concepts and after design is complete build an executable prototype architecture to assess whether architectural objec tives have been met and risks retired elaboration phase evaluation of the cafcr views the bapo text and quality attribute analysis across the cafcr views architectural decisions are evaluated with respect to asr that they dress typical procedure of evalua tion may include model based analy sis lqn petri nets q nets simula tion prototyping and discussion of change use scenarios table comparing methods artifacts artifact add sv rup bapocafcr asc architectural concerns functional require ments system quality attribute requirements design constraints influencing factors are organizational technological and product factors prod uct factors describing required charac teristics of the product are always archi tectural concerns so are technological factors state of technology including standards that could affect the product vision document supplemen tary specification for func tional requirements the risk list identifies among others technical issues elements that are novel unknown or just perceived as challenging these concerns are expressed the customer and applica tion views the overriding meta concern is bridging the gap between customer needs wishes and objectives and technological realization each product family has lists of typical concerns that need to be addressed by products the domain stakeholders contrib ute product specific concerns during product conception phase context business quality goals eg time to market cost and benefit architecture qualities eg conceptual integ rity buildability organizational factors see above are usually context not concerns business case and vision docu ment business goals and straints including the scope of the market to be dressed process goals and constraints organizational goals and constraints preferred technology platforms technologyproduct road maps product family functional and quality requirements system hardware architecture implementation constraints,[4],"[(4, 0.99858475)]"
dataExtraction\data_test\rootfolder\universita\analisiProgettazioneSoftware\hofmeister2005.pdf,5,"Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . Pittsburgh, PA, November 6-9, 2005.    
Named one of the five best papers of the conference. 
6 Artifact ADD S4V RUP 4+1 BAPO/CAFCR ASC 
Architec-
turally  
significant requirements 
(ASR) Architectural drivers are the 
combination of functional, 
quality attribute, and busi-ness requirements that 
“shape” the architecture. To 
identify them, locate the 
quality attribute scenarios 
that reflect the highest 
priority business goals and have the most impact on the 
decomposition. Issue cards describe issues or 
problems that arise from sets of 
factors that, taken together, pose significant architectural chal-
lenges. These issues and their 
influencing factors are equiva-lent to the architecturally signifi-
cant requirements. ASR are identified out of 
the requirements docu-
ments (Vision, use case model, supplementary 
specification), and  the risk 
list. Some of the ASR are expressed in the form of 
scenarios (use case in-
stances) that are allocated as objectives in the upcom-
ing iteration; this forms a 
requirements view (+1). Those elements of the BAPO context 
that are relevant for the architectural fit 
and determine the scope of the architec-ture. Traditional types of requirements 
are represented in the Customer and 
Application views, which can be influ-enced by the architect in order to obtain 
a better BAPO fit. 
 A specific process is used to 
identify ASR based on stake-
holder concerns, domain and product family specific check-
lists, and patterns for analysis. 
ASR are partitioned by seg-ments of software transforma-
tion cycle to establish semi-
separable solution domains. ASR that are in the same seg-
ment are prioritized and ana-
lyzed for potential conflicts. 
Candidate architectural solutions A collection of views, 
patterns, and architectural tactics.  The architecture also has associated with it 
refined scenarios that show 
mapping from requirements to decisions and also aid the 
next iteration of design. Part of the four views (concep-
tual, module, execution, and code arch. views). These repre-sent design decisions taken in 
accordance with strategies that 
solve one or more issues. Issue Cards capture th e issues, their 
influencing factors, and solution 
strategies. Factors are listed and characterized in Factor Tables. Design decisions are in-
crementally captured in four views (logical, proc-ess, implementation, de-
ployment), supplemented 
with a use-case view and with complementary texts, 
and plus  an architectural 
prototype.  Consistent and partially complete 
CAFCR views (Customer, Application, Functional, Conceptual, and Realiza-tion), filled with various artifacts (mod-
els, scenarios, interfaces, etc.) A collection of patterns, frame-
works, and reference architec-tures constitute the source for alternative decisions. An often 
used practice is to analyze 
alternatives along with any proposed solutions. 
Validated architecture Architecture describes a 
system as containers for 
functionality and interac-
tions among the containers, typically expressed in three 
views: module decomposi-
tion., concurrency, and deployment. The architec-
ture is validated for satis-
faction of require-ments/constraints with 
respect to the decomposi-
tion.   The description of the four 
views, the Issue Cards, and the 
Factor Tables represent the 
validated architecture. Baseline a complete, ex-
ecutable architectural 
prototype at the end of the 
elaboration phase. This prototype is complete 
enough to be tested, and to 
validate that major archi-tectural objectives (func-
tional and non functional, 
such as performance) have been met, and major tech-
nical risks mitigated. Consistent and complete CAFCR 
views. Consistent in the sense that these 
artifacts are mutually corresponding 
and quality attribute analysis shows no discrepancies (for example, all quality 
requirements from the Application view 
are satisfied by the Conceptual and Realization views).  Complete in the 
sense that artifacts have been suffi-
ciently elaborated to enable realization.  Concepts, structure and texture 
for each significant segment of 
software transformation cycle 
(development / load/ runtime) 
Backlog  Information to be processed 
in subsequent steps includ-ing:  
requirements to be ana-
lyzed, decisions to be merged, patterns to be instantiated, requirements 
to be verified and refined. Supported in part by Issue 
Cards, which  help the architect identify important issues to 
address and drive the bigger 
iterations through the activities.  Issue Cards are intended to be permanent artifacts. S4V also 
recommends the capture of 
certain inputs to the backlog: Issue Cards can capture strate-
gies (ideas) that don’t work. In larger projects, an Issue 
List is maintained, which contains elements of the 
backlog. Architectural 
objectives are allocated to upcoming iterations, and captured in the form of 
iteration objectives in the 
iteration plan. Worry List contains: Artifacts to be 
completed; Quality attributes to be analyzed; Quality requirements to be 
satisfied; BAPO analysis to be done; 
BAPO issues to be improved. Design knowledge comes from the architect (or organizational memory or community 
best practice) and is recorded as an 
influencing factor. A large amount of general architectural knowledge is 
documented in the Gaudì website [24]. The initial backlog is a result of 
the analysis. As the design progresses ASR are partitioned 
into solvable problems and 
some are left on the backlog to be addressed later while some are being addressed earlier. 
Thus entries in the backlog 
represent finer and finer grained problems or issues. ",proceedings of the th working ieeeifip conference on software architecture wicsa pittsburgh pa november named one of the five best papers of the conference artifact add sv rup bapocafcr asc architec turally significant requirements asr architectural drivers are the combination of functional quality attribute and busi ness requirements that “shape” the architecture to identify them locate the quality attribute scenarios that reflect the highest priority business goals and have the most impact on the decomposition issue cards describe issues or problems that arise from sets of factors that taken together pose significant architectural chal lenges these issues and their influencing factors are equiva lent to the architecturally signifi cant requirements asr are identified out of the requirements docu ments vision use case model supplementary specification and the risk list some of the asr are expressed the form of scenarios use case stances that are allocated as objectives the upcom ing iteration this forms requirements view those elements of the bapo context that are relevant for the architectural fit and determine the scope of the architec ture traditional types of requirements are represented the customer and application views which can be influ enced by the architect order to obtain better bapo fit specific process is used to identify asr based on stake holder concerns domain and product family specific check lists and patterns for analysis asr are partitioned by seg ments of software transforma tion cycle to establish semi separable solution domains asr that are the same seg ment are prioritized and ana lyzed for potential conflicts candidate architectural solutions collection of views patterns and architectural tactics the architecture also has associated with it refined scenarios that show mapping from requirements to decisions and also aid the next iteration of design part of the four views concep tual module execution and code arch views these repre sent design decisions taken accordance with strategies that solve one or more issues issue cards capture th issues their influencing factors and solution strategies factors are listed and characterized factor tables design decisions are crementally captured four views logical proc ess implementation de ployment supplemented with use case view and with complementary texts and plus an architectural prototype consistent and partially complete cafcr views customer application functional conceptual and realiza tion filled with various artifacts mod els scenarios interfaces etc collection of patterns frame works and reference architec tures constitute the source for alternative decisions an often used practice is to analyze alternatives along with any proposed solutions validated architecture architecture describes system as containers for functionality and interac tions among the containers typically expressed three views module decomposi tion concurrency and deployment the architec ture is validated for satis faction of require mentsconstraints with respect to the decomposi tion the description of the four views the issue cards and the factor tables represent the validated architecture baseline complete ex ecutable architectural prototype at the end of the elaboration phase this prototype is complete enough to be tested and to validate that major archi tectural objectives func tional and functional such as performance have been met and major tech nical risks mitigated consistent and complete cafcr views consistent the sense that these artifacts are mutually corresponding and quality attribute analysis shows no discrepancies for example quality requirements from the application view are satisfied by the conceptual and realization views complete the sense that artifacts have been suffi ciently elaborated to enable realization concepts structure and texture for each significant segment of software transformation cycle development load runtime backlog information to be processed subsequent steps includ ing requirements to be ana lyzed decisions to be merged patterns to be instantiated requirements to be verified and refined supported part by issue cards which help the architect identify important issues to address and drive the bigger iterations through the activities issue cards are intended to be permanent artifacts sv also recommends the capture of certain inputs to the backlog issue cards can capture strate gies ideas that don’t work larger projects an issue list is maintained which contains elements of the backlog architectural objectives are allocated to upcoming iterations and captured the form of iteration objectives the iteration plan worry list contains artifacts to be completed quality attributes to be analyzed quality requirements to be satisfied bapo analysis to be done bapo issues to be improved design knowledge comes from the architect or organizational memory or community best practice and is recorded as an influencing factor large amount of general architectural knowledge is documented the gaudì website the initial backlog is result of the analysis as the design progresses asr are partitioned into solvable problems and some are left on the backlog to be addressed later while some are being addressed earlier thus entries the backlog represent finer and finer grained problems or issues,[4],"[(4, 0.99886394)]"
dataExtraction\data_test\rootfolder\universita\analisiProgettazioneSoftware\hofmeister2005.pdf,6,"Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . 
Pittsburgh, PA, November 6-9, 2005.    Named one of the five best papers of the conference. 
7 Once a backlog item (or a small set of backlog 
items) is picked by the architects, they will proceed to 
incrementally do architectural synthesis, making some 
design decisions and integrating them with the existing set of design decisions. Thus it serves to set the objec-
tives for a particular iteration of architectural synthesis. 
Less frequently, backlog items will drive architectural analysis or architectural ev aluation. Once resolved, an 
item is removed from the backlog, and the architects 
proceed to the next one. If they encounter some diffi-culty or some input is missing, the item is returned to 
the backlog. 
Thus the backlog is constantly changing. The cycle 
of adding to the backlog, reprioritizing, resolving an 
item, and removing an item is happening at various periods: from a few hours, to a few days, or more.  
This backlog is similar to what some Agile meth-
ods use, in particular Scrum [29]. It guides the work-flow through the three kinds of activities and provides 
the objectives for each iteration through the synthesis 
activity. In addition to using some kind of backlog, the architect should also make sure that each iteration of 
each activity is preceded by th e setting of objectives for 
that step. 
4. Method Comparison using the General 
Model 
The five architectural methods have been devel-
oped independently but there are many commonalities 
among them.  
  
4.1. Side-by-side comparison 
See Tables 1 & 2 for a comparison of activities and 
artifacts By putting the methods side by side, we are working to identify and understand this commonality 
as well as the important differences.  The rows of the 
table are based on the activ ities and artifacts identified 
in the general model of the previous section. 
This comparison has been an iterative process of 
producing a common model of design activities and 
artifacts, seeing how well they relate to the methods, and adjusting the models.  We take a broad view of 
architectural design activities and see that the methods 
address interrelated activities centered on analysis, syn-thesis, and evaluation.   
The steps of ADD follow th e sequence of analysis, 
synthesis, and evaluation activities.  Subsequent itera-
tions of the activities follow the decomposition of the 
architecture – the order of which will vary (e.g., depth-first, breadth-first) based on the business context, do-
main knowledge, or technology. 
Global Analysis from S4V plays a large role in 
analysis and in driving iterations through the activities. 
Thus it spans architectural analysis, architectural syn-
thesis, the backlog, and describes how architectural concerns, context, ASRs, and some backlog items 
should be recorded. The Glob al Analysis artifacts, de-
sign decision table, and tabl es that record the relation-
ships among views support traceability from require-
ments to the code (at the file and module level). 
 
4.2. Commonalities 
Elements the methods have in common  include: 
 an emphasis on quality attribute requirements and the 
need to aid the architect in  focusing on the important 
requirements that impact  the architecture during 
analysis, 
 design elements organized into multiple views dur-
ing synthesis, 
 and an iterative fine-grained evaluation activity (per-
formed internally after each  synthesis result by the 
architect) as distinct from  course-grained evaluation 
(architectural reviews perfor med at key stages in the 
software development life-cycle). 
 
4.3. Variations 
There are also important variations  between the meth-
ods: 
 Intent  – ADD was developed as a design approach 
based on making a series of design decisions (aided 
by the application of arch itectural tactics).  Other 
view-based approaches were initially centered on de-sign artifacts, with their dependencies suggesting a 
sequencing of activities.  4+1 embedded in RUP pro-
vides full process support. BAPO/CAFCR has been especially developed to support the development of 
product families. 
Ideas
Context, Constraints
Evaluation results
Architectural
Assets
Architecturally 
Significant 
Requirements
Architecture
Backlog
Architectural
EvaluationArchitectural
Synthesis
Architectural
Analysis
Ideas
Context, Constraints
Evaluation results
Architectural
Assets
Architecturally 
Significant 
Requirements
Architecture
Backlog
Architectural
EvaluationArchitectural
Synthesis
Architectural
Analysis
Figure 2: Backlog ",proceedings of the th working ieeeifip conference on software architecture wicsa pittsburgh pa november named one of the five best papers of the conference once backlog item or small set of backlog items is picked by the architects they will proceed to incrementally do architectural synthesis making some design decisions and integrating them with the existing set of design decisions thus it serves to set the objec tives for particular iteration of architectural synthesis less frequently backlog items will drive architectural analysis or architectural ev aluation once resolved an item is removed from the backlog and the architects proceed to the next one if they encounter some diffi culty or some input is missing the item is returned to the backlog thus the backlog is constantly changing the cycle of adding to the backlog reprioritizing resolving an item and removing an item is happening at various periods from few hours to few days or more this backlog is similar to what some agile meth ods use particular scrum it guides the work flow through the three kinds of activities and provides the objectives for each iteration through the synthesis activity addition to using some kind of backlog the architect should also make sure that each iteration of each activity is preceded by th setting of objectives for that step method comparison using the general model the five architectural methods have been devel oped independently but there are many commonalities among them side by side comparison see tables for comparison of activities and artifacts by putting the methods side by side we are working to identify and understand this commonality as well as the important differences the rows of the table are based on the activ ities and artifacts identified the general model of the previous section this comparison has been an iterative process of producing common model of design activities and artifacts seeing how well they relate to the methods and adjusting the models we take broad view of architectural design activities and see that the methods address interrelated activities centered on analysis syn thesis and evaluation the steps of add follow th sequence of analysis synthesis and evaluation activities subsequent itera tions of the activities follow the decomposition of the architecture – the order of which will vary eg depth first breadth first based on the business context do main knowledge or technology global analysis from sv plays large role analysis and driving iterations through the activities thus it spans architectural analysis architectural syn thesis the backlog and describes how architectural concerns context asrs and some backlog items should be recorded the glob analysis artifacts de sign decision table and tabl es that record the relation ships among views support traceability from require ments to the code at the file and module level commonalities elements the methods have common include  an emphasis on quality attribute requirements and the need to aid the architect focusing on the important requirements that impact the architecture during analysis  design elements organized into multiple views dur ing synthesis  and an iterative fine grained evaluation activity per formed internally after each synthesis result by the architect as distinct from course grained evaluation architectural reviews perfor med at key stages the software development life cycle variations there are also important variations between the meth ods  intent – add was developed as design approach based on making series of design decisions aided by the application of arch itectural tactics other view based approaches were initially centered on de sign artifacts with their dependencies suggesting sequencing of activities embedded rup pro vides full process support bapocafcr has been especially developed to support the development of product families ideas context constraints evaluation results architectural assets architecturally significant requirements architecture backlog architectural evaluationarchitectural synthesis architectural analysis ideas context constraints evaluation results architectural assets architecturally significant requirements architecture backlog architectural evaluationarchitectural synthesis architectural analysis figure backlog,[4],"[(4, 0.9985964)]"
dataExtraction\data_test\rootfolder\universita\analisiProgettazioneSoftware\hofmeister2005.pdf,7,"Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . 
Pittsburgh, PA, November 6-9, 2005.    Named one of the five best papers of the conference. 
8  Emphasis  – RUP puts a strong emphasis on incre-
mentally building an evolutionary prototype, forcing 
the designers to a more experimental style of archi-
tectural design.  BAPO/CAFCR is putting a strong emphasis on the scoping of the architecture and once 
the scope of the architectur e using a BAPO analysis 
has been established, the focus is on ensuring the consistency and the completeness of the CAFCR 
views.  ADD puts its emphasis on constructing the 
architecture by applying ar chitectural tactics (design 
options for the architect that are influential in the 
control of a quality attribute response). 
 Driving forces  – ADD is quality attribute scenario 
focused; experience suggests  that a handful of these 
shape the architecture and all other requirements are then mapped to this structure. This fact is also recog-
nized in ASC, which ties architecture design to archi-
tecturally significant requ irements. ASR are broader 
than quality attributes and may include key func-
tional requirements. RUP is mostly driven by risk 
mitigation. 
 Architectural Scope  – ASC recognizes a hierarchy 
of architectural scopes like product portfolio, product 
family, a single product, and a product release. Each architecture design project uses enclosing scope as 
the context of the design. 
 Process Scope  – ADD provides a step for choosing 
the architectural drivers but its scope is such that it 
depends on more analysis types of activities from 
other methods, such as global analysis from S4V. However, S4V does no t recommend or advocate 
specific evaluation techniques. Thus ADD and S4V 
complement each other in these respects. 
 Description  – Although four specific views are rec-
ommended, the view-related  aspects of S4V are lim-
ited to the second part of arch synthesis. Thus other 
views could be substituted or added while still using 
all the other parts of S4V. The views used for archi-tecture design in ASC are tied to architectural struc-
tures that are important for the specific system, 
which in turn, are determined by the ASR. Thus ASC offers a process to determine which views should be 
used for architecture design of a specific system.  
The views used in ADD are determined by the ASR, though typically there is one for each of the three 
kinds of viewtypes: module, component & connec-
tor, and allocation [6]. 
5. Related Work 
We have found four main  approaches to compar-
ing design methods. Some  researchers compare the 
methods by comparing their results or artifacts. Others 
compare the activities done wh en following the meth-
ods. Each of these approaches breaks down further into comparisons based on applying the methods to a par-
ticular example application, or comparing the methods 
by classifying the artifacts or activities. 
The first group compares the artifacts for an ex-
ample application. Bahill et al.  [3] first provide a 
“benchmark” application to  be used for comparing 
design methods. Then they provide a qualitative analy-sis of the results of applying eleven design methods to 
the benchmark application. Sharble & Cohen  [30] use 
complexity metrics to compare the class diagrams that result from applying two different OO development 
methods on a brewery application. 
The next group also comp ares artifacts, but by 
classifying them according to  what they can model. 
Wieringa  [35] does this for a number of structured and OO specification methods, and Hong et al.  [17] do this 
as part of their comparison of six OO analysis and de-
sign methods. 
The third kind of compar ison examines the activi-
ties undertaken when designing particular applications. 
Kim & Lerch [20] measure the cognitive activities of designers when using an OO design method versus a 
functional decomposition approach. Each participant in 
this study designed two variants of a Towers of Hanoi application. 
The approach we take in this paper falls into the 
fourth category, characteriz ing and classifying activi-
ties then comparing them across methods. Song & Os-
terweil [31] use process modeling techniques to model 
the activities and, to a lesser extent, the artifacts of the methodologies. Although this approach is similar to 
ours, the approaches differ in the development of the 
comparison model. They decompose the activities of 
each methodology, then classify and compare them. 
Thus the classification and comparison is begun with the low-level elements. In contrast we create a general 
model where only one level of decomposition is done, 
resulting in the three activities of architectural analysis, synthesis, and evaluation and the corresponding arti-
facts. We then determine which elements of each 
methodology map to these activities and artifacts, and compare to what extent each methodology covers the 
various aspects of the activities and artifacts. 
Hong et al.  [17] also compare activities by first 
characterizing and classifyi ng them. They repeatedly 
decompose the activities of each method, then create a 
“super-methodology” that is a union of all the finest 
granularity of the subactiv ities. Each method is com-
pared to the super-methodology. Fichman & Kemerer 
[10] take a similar approach, comparing methods using the eleven analysis activities and ten design activities 
that are the superset of the activities supported by 
methods. Both of these approaches decompose the ac-
tivities to very specific tasks that are tightly related to 
the artifacts produced by the method (e.g. Identify ",proceedings of the th working ieeeifip conference on software architecture wicsa pittsburgh pa november named one of the five best papers of the conference  emphasis – rup puts strong emphasis on incre mentally building an evolutionary prototype forcing the designers to more experimental style of archi tectural design bapocafcr is putting strong emphasis on the scoping of the architecture and once the scope of the architectur using bapo analysis has been established the focus is on ensuring the consistency and the completeness of the cafcr views add puts its emphasis on constructing the architecture by applying ar chitectural tactics design options for the architect that are influential the control of quality attribute response  driving forces – add is quality attribute scenario focused experience suggests that handful of these shape the architecture and other requirements are then mapped to this structure this fact is also recog nized asc which ties architecture design to archi tecturally significant requ irements asr are broader than quality attributes and may include key func tional requirements rup is mostly driven by risk mitigation  architectural scope – asc recognizes hierarchy of architectural scopes like product portfolio product family single product and product release each architecture design project uses enclosing scope as the context of the design  process scope – add provides step for choosing the architectural drivers but its scope is such that it depends on more analysis types of activities from other methods such as global analysis from sv however sv does no t recommend or advocate specific evaluation techniques thus add and sv complement each other these respects  description – although four specific views are rec ommended the view related aspects of sv are lim ited to the second part of arch synthesis thus other views could be substituted or added while still using the other parts of sv the views used for archi tecture design asc are tied to architectural struc tures that are important for the specific system which turn are determined by the asr thus asc offers process to determine which views should be used for architecture design of specific system the views used add are determined by the asr though typically there is one for each of the three kinds of viewtypes module component connec tor and allocation related work we have found four main approaches to compar ing design methods some researchers compare the methods by comparing their results or artifacts others compare the activities done wh en following the meth ods each of these approaches breaks down further into comparisons based on applying the methods to par ticular example application or comparing the methods by classifying the artifacts or activities the first group compares the artifacts for an ex ample application bahill et al first provide “benchmark” application to be used for comparing design methods then they provide qualitative analy sis of the results of applying eleven design methods to the benchmark application sharble cohen use complexity metrics to compare the class diagrams that result from applying two different oo development methods on brewery application the next group also comp ares artifacts but by classifying them according to what they can model wieringa does this for number of structured and oo specification methods and hong et al do this as part of their comparison of six oo analysis and de sign methods the third kind of compar ison examines the activi ties undertaken when designing particular applications kim lerch measure the cognitive activities of designers when using an oo design method versus functional decomposition approach each participant this study designed two variants of towers of hanoi application the approach we take this paper falls into the fourth category characteriz ing and classifying activi ties then comparing them across methods song os terweil use process modeling techniques to model the activities and to lesser extent the artifacts of the methodologies although this approach is similar to ours the approaches differ the development of the comparison model they decompose the activities of each methodology then classify and compare them thus the classification and comparison is begun with the low level elements contrast we create general model where only one level of decomposition is done resulting the three activities of architectural analysis synthesis and evaluation and the corresponding arti facts we then determine which elements of each methodology map to these activities and artifacts and compare to what extent each methodology covers the various aspects of the activities and artifacts hong et al also compare activities by first characterizing and classifyi ng them they repeatedly decompose the activities of each method then create “super methodology” that is union of the finest granularity of the subactiv ities each method is com pared to the super methodology fichman kemerer take similar approach comparing methods using the eleven analysis activities and ten design activities that are the superset of the activities supported by methods both of these approaches decompose the ac tivities to very specific tasks that are tightly related to the artifacts produced by the method eg identify,[4],"[(4, 0.99890924)]"
dataExtraction\data_test\rootfolder\universita\analisiProgettazioneSoftware\hofmeister2005.pdf,8,"Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . 
Pittsburgh, PA, November 6-9, 2005.    Named one of the five best papers of the conference. 
9 classes, Identify inheritance relationships). We did not 
want our general model to be restricted by the kinds of 
artifacts our five methods produce (e.g. specific views 
used by the method), so we did not decompose activi-ties to the low level. 
Dobrica & Niemela’s approach to comparing 
methods is perhaps closest to ours [9]. However, rather than comparing architectural design methods, they are 
comparing methods for software architecture evalua-
tion. Thus the eight methods have a much narrower scope, and in addition a number of them are variants of 
each other. Like us they compare activities and work-
flow at a fairly coarse granularity, but they add a few 
other dimensions for comparison, such as scope of 
method, stakeholders involved, etc. 
In [23] Kruchten shows that if software engineers 
were to use the term “design” analogously to the way 
other engineers use it, design would include “some requirements activities and all coding and testing ac-
tivities.” In a similar spirit, our use of the term “archi-
tecture design” encompasse s analysis and evaluation 
activities. Architectural synthesis, the activity that goes 
from the problem space to the solution space is what 
others might equate with the term “architecture de-sign.” In [11] Fowler discusses the importance of 
analysis, or understanding the problem, in moving from 
the problem space to the solution space. Roshandel et 
al. [28] reinforce our conviction that evaluation is an 
integral part of architectur e design. They demonstrate 
that the kinds of automated evaluation possible depend on the architectural view de scribed (where each of the 
two views studied is repres ented in a different ADL). 
Finally we note that our general model and the 
methods it is derived from are for the architecture de-
sign of new systems, not for evolving or reconstructing the architecture of existing sy stems. While parts of the 
model may be relevant for architecture evolution, when 
comparing our model to the Symphony architecture reconstruction process [34] we see that the activities 
and artifacts are not related at all. In both cases the 
activities can be categorized into 1) understand the problem, 2) solve it, and 3) evaluate the solution, but 
the same can be said of nearly any problem-solving 
activity. 
6. Conclusion 
In this paper we have analyzed a number of indus-
trially validated architectural design methods. Using a 
general model for architectural design activity, we have 
identified the common and variable ingredients of these methods. Despite the different vocabulary used for the 
individual methods they have a lot in common at the 
conceptual level. The basic architecting activities, like 
architectural analysis, archit ectural synthesis and archi-tectural evaluation are present in all of the investigated 
methods. The major variation can be observed in the 
different details with respect to guidance and process 
focus across the various methods. Here the concept of backlog is crucial to relate the various activities.   
For our general model many of the concepts we 
use are already part of the IEEE 1471 [18] vocabulary: views, architectural concer ns, context, stakeholders, 
etc. Our more process-oriented model introduces the 
following concepts: backlog, analysis, synthesis and evaluation.  
An important part of our model is the inclusion of 
analysis and evaluation activities as part of architecture 
design. While architecture ev aluation has been the fo-
cus of much prior work, the emphasis is typically on identifying candidate archit ectures or evaluating the 
completed architecture. There has been far less work 
on incremental or ongoing evaluation, and on architec-
tural analysis. Our model reveals these to be important 
research topics. 
Our model also introduces the concept of a back-
log as the driving force behind the workflow. The 
backlog is a much richer wo rkflow concept than simply 
noting that iteration is expected. 
We hope that our increased understanding of the 
commonalities and differences of the various ap-
proaches will contribute to future methods that com-bine the strong points of the existing ones and provide 
specific support for software  architecture design in a 
large variety of different contexts. As an example, two of the authors looked at ways of combining ADD and 
RUP 4+1 by modeling ADD as a RUP activity, and 
found that they complement each other well [19]. ADD 
fills a need within the RUP: it provides a step-by-step 
approach for defining a candidate architecture. The RUP fills a need in the ADD by placing it in a life-
cycle context; the RUP provides guidance on how to 
proceed from the candidate architecture to an executa-
ble architecture, detailed design and implementation. 
 
References 
[1] P. America, H. Obbink, and E. Rommes, ""Multi-View 
Variation Modeling for Scenario Analysis,"" in Proceedings of 
Fifth International Workshop on  Product Family Engineering 
(PFE-5) , Sienna, Italy, 2003, Springer-Verlag, pp. 44-65. 
[2] F. Bachmann, L. Bass, and M. Klein, Illuminating the 
Fundamental Contributors to Software Architecture Quality , 
CMU/SEI-2002-TR-025, Software Engineering Institute, 
Carnegie Mellon University, 2002. 
[3] A.T. Bahill, M. Alford, K. Bharathan, J.R. Clymer, D.L. 
Dean, J. Duke, G. Hill, E.V. La Budde, E.J. Taipale, and A.W. 
Wymore, ""The design-methods comparison project,"" IEEE 
Transactions on Systems, Man and Cybernetics , vol. 28, no. 
1, 1998, pp. 80-103. ",proceedings of the th working ieeeifip conference on software architecture wicsa pittsburgh pa november named one of the five best papers of the conference classes identify inheritance relationships we did not want our general model to be restricted by the kinds of artifacts our five methods produce eg specific views used by the method so we did not decompose activi ties to the low level dobrica niemela’s approach to comparing methods is perhaps closest to ours however rather than comparing architectural design methods they are comparing methods for software architecture evalua tion thus the eight methods have much narrower scope and addition number of them are variants of each other like us they compare activities and work flow at fairly coarse granularity but they add few other dimensions for comparison such as scope of method stakeholders involved etc kruchten shows that if software engineers were to use the term “design” analogously to the way other engineers use it design would include “some requirements activities and coding and testing ac tivities” similar spirit our use of the term “archi tecture design” encompasse s analysis and evaluation activities architectural synthesis the activity that goes from the problem space to the solution space is what others might equate with the term “architecture de sign” fowler discusses the importance of analysis or understanding the problem moving from the problem space to the solution space roshandel et al reinforce our conviction that evaluation is an integral part of architectur design they demonstrate that the kinds of automated evaluation possible depend on the architectural view de scribed where each of the two views studied is repres ented different adl finally we note that our general model and the methods it is derived from are for the architecture de sign of new systems not for evolving or reconstructing the architecture of existing sy stems while parts of the model may be relevant for architecture evolution when comparing our model to the symphony architecture reconstruction process we see that the activities and artifacts are not related at all both cases the activities can be categorized into understand the problem solve it and evaluate the solution but the same can be said of nearly any problem solving activity conclusion this paper we have analyzed number of indus trially validated architectural design methods using general model for architectural design activity we have identified the common and variable ingredients of these methods despite the different vocabulary used for the individual methods they have lot common at the conceptual level the basic architecting activities like architectural analysis archit ectural synthesis and archi tectural evaluation are present of the investigated methods the major variation can be observed the different details with respect to guidance and process focus across the various methods here the concept of backlog is crucial to relate the various activities for our general model many of the concepts we use are already part of the ieee vocabulary views architectural concer ns context stakeholders etc our more process oriented model introduces the following concepts backlog analysis synthesis and evaluation an important part of our model is the inclusion of analysis and evaluation activities as part of architecture design while architecture ev aluation has been the fo cus of much prior work the emphasis is typically on identifying candidate archit ectures or evaluating the completed architecture there has been far less work on incremental or ongoing evaluation and on architec tural analysis our model reveals these to be important research topics our model also introduces the concept of back log as the driving force behind the workflow the backlog is much richer wo rkflow concept than simply noting that iteration is expected we hope that our increased understanding of the commonalities and differences of the various ap proaches will contribute to future methods that com bine the strong points of the existing ones and provide specific support for software architecture design large variety of different contexts as an example two of the authors looked at ways of combining add and rup by modeling add as rup activity and found that they complement each other well add fills need within the rup it provides step by step approach for defining candidate architecture the rup fills need the add by placing it life cycle context the rup provides guidance on how to proceed from the candidate architecture to an executa ble architecture detailed design and implementation references p america h obbink and e rommes multi view variation modeling for scenario analysis proceedings of fifth international workshop on product family engineering pfe sienna italy springer verlag pp f bachmann l bass and m klein illuminating the fundamental contributors to software architecture quality cmusei tr software engineering institute carnegie mellon university at bahill m alford k bharathan jr clymer dl dean j duke g hill ev budde ej taipale and aw wymore the design methods comparison project ieee transactions on systems man and cybernetics vol no pp ,[4],"[(4, 0.9988767)]"
dataExtraction\data_test\rootfolder\universita\analisiProgettazioneSoftware\hofmeister2005.pdf,9,"Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . 
Pittsburgh, PA, November 6-9, 2005.    Named one of the five best papers of the conference. 
10 [4] L. Bass, P. Clements, and R. Kazman, Software Archi-
tecture in Practice , 2nd ed., Reading, MA: Addison-Wesley, 
2003. 
[5] J. Bosch, Design and Use of Software Architecture: 
Adopting and Evolving a Product-Line Approach , Boston: 
Addison-Wesley, 2000. 
[6] P. Clements, F. Bachmann, L. Bass, D. Garlan, J. Ivers, 
R. Little, R. Nord, and J. Stafford, Documenting Software 
Architectures: Views and Beyond , Boston: Addison-Wesley, 
2002. 
[7] P. Clements and L. Northrop, Software Product Lines: 
Practice and Patterns , Boston: Addison-Wesley, 2002. 
[8] D.M. Dikel, D. Ka ne, and J.R. Wilson, Software Archi-
tecture: Organizational Principles and Patterns , Upper Sad-
dle River, NJ: Prentice-Hall, 2001. 
[9] L. Dobrica and E. Niemela, ""A survey on software ar-
chitecture analys is methods,"" IEEE Transactions on Software 
Engineering , vol. 28, no. 7, 2002, pp. 638-653. 
[10] R.G. Fichman and C.F. Ke merer, ""Object-oriented and 
conventional analysis a nd design methodologies,"" IEEE 
Computer , vol. 25, no. 10, 1992, pp. 22-39. 
[11] M. Fowler, Analysis Patterns: Re usable Object Models , 
Addison Wesley, 1997. 
[12] J. Garland and R. Anthony, Large-Scale Software Archi-
tecture: A Practical Guide using UML , New York: John 
Wiley & Sons, Inc., 2002. 
[13] J.S. Gero, ""Design prot otypes: A knowledge representa-
tion scheme for design,"" AI Magazine , vol. 11, no. 4, 1990, 
pp. 26-36. 
[14] J.S. Gero and U. Kannengi esser, ""The situated function–
behaviour–structure framework,"" Design Studies , vol. 25, no. 
4, 2004, pp. 373-391. 
[15] H. Gomaa, Designing Concurrent, Distributed and 
Real-time Applications with UML , Boston: Addison-Wesley, 
2000. 
[16] C. Hofmeister, R. Nord, and D. Soni, Applied Software 
Architecture , Boston: Addison-Wesley, 2000. 
[17] S. Hong, G. van den Goor, and S. Brinkkemper, ""A 
formal approach to the comparison of object-oriented analy-
sis anddesign methodologies,"" in Proceedings of Twenty-
Sixth Hawaii International C onference on System Sciences , 
Wailea, HI, USA, 1993, pp. iv 689-698. 
[18] IEEE, IEEE 1471:2000--Recommended practice for 
architectural description of software intensive systems. , Los 
Alamitos, CA: IEEE, 2000. 
[19] R. Kazman, P. Kruchten, R. Nord, and J. Tomayko, 
Integrating Software Architectu re-Centric Methods into the 
Rational Unified Process , Technical report CMU/SEI-2004-
TR-011, Software Engineering Institute, 2004. 
[20] J. Kim and F.J. Lerch, "" Towards a model of cognitive 
process in logical design: comparing object-oriented and 
traditional functional decom position software methodolo-
gies,"" in Proceedings of SIGCHI c onference on human fac-
tors in computing systems , Monterey, California, United 
States, 1992, ACM Press, pp. 489-498. [21] P. Kruchten, ""The 4+1 View Model of Architecture,"" 
IEEE Software , vol. 12, no. 6, 1995, pp. 45-50. 
[22] P. Kruchten, The Rational Unified Process: An Intro-
duction , 3 ed., Boston: Addison-Wesley, 2003. 
[23] P. Kruchten, ""Casting Software Design in the Function-
Behavior-Structure (FBS) Framework,"" IEEE Software , vol. 
22, no. 2, 2005, pp. 52-58. 
[24] G. Muller, The Gaudi Project website, at 
http://www.extra.research.philips.com/natlab/sysarch/index.h
tml, 2005. 
[25] H. Obbink, P. Kruchten, W. Kozaczynski, R. Hilliard, 
A. Ran, H. Postema, D. Lutz, R. Kazman, W. Tracz, and E. 
Kahane, Report on Software Archite cture Review and As-
sessment (SARA), Version 1.0 , February 2002. 
[26] H. Obbink, J.K. Müller, P. America, R. van Ommering, 
G. Muller, W. van der Sterren,  and J.G. Wijnstra, COPA: A 
Component-Oriented Platform  Architecting Method for 
Families of Software-Intensive Electronic Products. Tutorial 
for the First Software Produc t Line Conference, Denver, 
Colorado, August 2000. 2000,  
[27] A. Ran, ""ARES Conceptual Framework for Software 
Architecture,"" in M. Jazayeri, A.  Ran, and F. van der Linden, 
ed., Software Architecture for Pr oduct Families Principles 
and Practice , Boston: Addison-Wesley, 2000, pp. 1-29. 
[28] R. Roshandel, B. Schmer l, N. Medvidovic, D. Garlan, 
and D. Zhang, ""Understanding Tradeoffs among Different 
Architectural Modeling Approaches,"" in Proceedings of 4th 
Working IEEE/IFIP Conferen ce on Software Architecture 
(WICSA-04) , Oslo, Norway, 2004, pp. 47-56. 
[29] K. Schwaber and M. Beedle, Agile Software Develop-
ment with SCRUM , Upper Saddle River: Prentice-Hall, 2002. 
[30] R.C. Sharble and S.S. Cohen, ""The object-oriented 
brewery: a comparison of two object-oriented development 
methods,"" ACM SIGSOFT Software Engineering Notes , vol. 
18, no. 2, 1993, pp. 60-73. 
[31] X. Song and L.J. Osterweil, ""Experience with an ap-
proach to comparing soft ware design methodologies,"" IEEE 
Transactions on Software Engineering , vol. 20, no. 5, 1994, 
pp. 364-384. 
[32] D. Soni, R. Nord, and C. Hofmeister, ""Software Archi-
tecture in Industrial Applications,"" in Proceedings of 17th 
International Conference on Software Engineering , 1995, 
ACM Press, pp. 196-207. 
[33] F. van der Linden, J. Bosc h, E. Kamsteries, K. Känsälä, 
and H. Obbink, ""Software Product Family Evaluation,"" in 
Proceedings of Software Product Lines, Third International 
Conference, SPLC 2004 , Boston, MA, 2004, Springer-
Verlag, pp. 110-129. 
[34] A. van Deursen, C. Hofm eister, R. Koschke, L. Moonen, 
and C. Riva, ""Symphony: View-Driven Software Architec-
ture Reconstruction,"" in Proceedings of 4th Working 
IEEE/IFIP Conference on Softw are Architecture (WICSA-
04), Oslo, Norway, 2004, IEEE, pp. 122-134. 
[35] R. Wieringa, ""A Survey of Structured and Object-
Oriented Software Specificat ion Methods and Techniques,"" 
ACM Computing Surveys , vol. 30, no. 4, 1998, pp. 459-527. 
 ",proceedings of the th working ieeeifip conference on software architecture wicsa pittsburgh pa november named one of the five best papers of the conference l bass p clements and r kazman software archi tecture practice nd ed reading ma addison wesley j bosch design and use of software architecture adopting and evolving product line approach boston addison wesley p clements f bachmann l bass d garlan j ivers r little r nord and j stafford documenting software architectures views and beyond boston addison wesley p clements and l northrop software product lines practice and patterns boston addison wesley dm dikel d ka ne and jr wilson software archi tecture organizational principles and patterns upper sad dle river nj prentice hall l dobrica and e niemela a survey on software ar chitecture analys is methods ieee transactions on software engineering vol no pp rg fichman and cf ke merer object oriented and conventional analysis nd design methodologies ieee computer vol no pp m fowler analysis patterns re usable object models addison wesley j garland and r anthony large scale software archi tecture practical guide using uml new york john wiley sons inc js gero design prot otypes knowledge representa tion scheme for design magazine vol no pp js gero and u kannengi esser the situated function– behaviour–structure framework design studies vol no pp h gomaa designing concurrent distributed and real time applications with uml boston addison wesley c hofmeister r nord and d soni applied software architecture boston addison wesley s hong g van den goor and s brinkkemper a formal approach to the comparison of object oriented analy sis anddesign methodologies proceedings of twenty sixth hawaii international onference on system sciences wailea hi usa pp iv ieee ieee recommended practice for architectural description of software intensive systems los alamitos ca ieee r kazman p kruchten r nord and j tomayko integrating software architectu re centric methods into the rational unified process technical report cmusei tr software engineering institute j kim and fj lerch towards model of cognitive process logical design comparing object oriented and traditional functional decom position software methodolo gies proceedings of sigchi onference on human fac tors computing systems monterey california united states acm press pp p kruchten the view model of architecture ieee software vol no pp p kruchten the rational unified process an intro duction ed boston addison wesley p kruchten casting software design the function behavior structure fbs framework ieee software vol no pp g muller the gaudi project website at httpwwwextraresearchphilipscomnatlabsysarchindexh tml h obbink p kruchten w kozaczynski r hilliard a ran h postema d lutz r kazman w tracz and e kahane report on software archite cture review and as sessment sara version february h obbink jk müller p america r van ommering g muller w van der sterren and jg wijnstra copa component oriented platform architecting method for families of software intensive electronic products tutorial for the first software produc t line conference denver colorado august a ran ares conceptual framework for software architecture m jazayeri a ran and f van der linden ed software architecture for pr oduct families principles and practice boston addison wesley pp r roshandel b schmer l n medvidovic d garlan and d zhang understanding tradeoffs among different architectural modeling approaches proceedings of th working ieeeifip conferen ce on software architecture wicsa oslo norway pp k schwaber and m beedle agile software develop ment with scrum upper saddle river prentice hall rc sharble and ss cohen the object oriented brewery comparison of two object oriented development methods acm sigsoft software engineering notes vol no pp x song and lj osterweil experience with an ap proach to comparing soft ware design methodologies ieee transactions on software engineering vol no pp d soni r nord and c hofmeister software archi tecture industrial applications proceedings of th international conference on software engineering acm press pp f van der linden j bosc h e kamsteries k känsälä and h obbink software product family evaluation proceedings of software product lines third international conference splc boston ma springer verlag pp a van deursen c hofm eister r koschke l moonen and c riva symphony view driven software architec ture reconstruction proceedings of th working ieeeifip conference on softw are architecture wicsa oslo norway ieee pp r wieringa a survey of structured and object oriented software specificat ion methods and techniques acm computing surveys vol no pp ,[0],"[(0, 0.9943496)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,0,"9/28/2021
102-linguaggio -e-grammatiche -24
1Linguaggi e Grammatiche
2Linguaggi e informatica
•ubiquitari nelle applicazioni
–linguaggi di programmazione
•compilatori ed interpreti
–linguaggi di comunicazione
•protocolli per il dialogo traentità omologhe
–linguaggi per intefacce
•specifica di sequenze di operazioni
•paradigmatici nella teoria
–molti importanti problemi teorici sono riconducibili a 
quello dell’appartenenza di una stringa ad un 
linguaggio1
2", linguaggio grammatiche linguaggi grammatiche linguaggi informatica •ubiquitari applicazioni –linguaggi programmazione •compilatori interpreti –linguaggi comunicazione •protocolli dialogo traentità omologhe –linguaggi intefacce •specifica sequenze operazioni •paradigmatici teoria –molti importanti problemi teorici riconducibili dell’appartenenza stringa linguaggio ,[5],"[(5, 0.9608514)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,1,"9/28/2021
202-linguaggio -e-grammatiche -24
3Tre approcci diversi
•approccio insiemistico
–utile per determinare le 
proprietà elementari dei
linguaggi
•approccio generativo
–grammatiche formali
•approccio riconoscitivo
–automi riconoscitori
4Concetti matematici di base
•Insiemi
•Relazioni
•Funzioni3
4", linguaggio grammatiche tre approcci diversi •approccio insiemistico –utile determinare proprietà elementari linguaggi •approccio generativo –grammatiche formali •approccio riconoscitivo –automi riconoscitori concetti matematici base •insiemi •relazioni •funzioni ,[4],"[(4, 0.94703823)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,2,"9/28/2021
302-linguaggio -e-grammatiche -24
5Insiemi
•consideriamo insiemi finiti e insiemi infiniti
•|A| = cardinalità dell’insieme (finito ) A
•alcuni insiemi infiniti di numeri:
N naturali (contiene zero)
N+ naturali positivi
Z interi relativi
Z+interi positivi
Z- interi negativiQ razionali relativi
Q+ razionali positivi
Q-razionali negativi
R reali
R+ reali positivi
R-reali negativi
6Sottoinsiemi e insiemi uguali
•datidue insiemi A e B, se
x B x A
allora B è sottoinsieme di A, e siscrive B A
•ogni insieme è sottoinsieme di se stesso
•l’insieme vuotoè sottoinsieme di ogni insieme
•se A e B sono finiti , allora B A |B| |A|
•A e B insiemi uguali
A=B (x A x B)
sipuòscrivere anche
A=B (A B B A)
•A è sottoinsieme proprio di B (A B) se 
(A B) (A B)5
6", linguaggio grammatiche insiemi •consideriamo insiemi finiti insiemi infiniti •a cardinalità dell’insieme finito •alcuni insiemi infiniti numeri n naturali contiene zero n naturali positivi z interi relativi zinteri positivi z interi negativiq razionali relativi q razionali positivi q razionali negativi r reali r reali positivi r reali negativi sottoinsiemi insiemi uguali •datidue insiemi b x b x a allora b sottoinsieme a siscrive b a •ogni insieme sottoinsieme stesso •l’insieme vuotoè sottoinsieme ogni insieme •se b finiti allora b a b a •a b insiemi uguali ab x a x b sipuòscrivere ab a b b a •a sottoinsieme proprio b a b a b a b ,[9],"[(9, 0.9836331)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,3,"9/28/2021
402-linguaggio -e-grammatiche -24
7Insieme delle parti
A
P(A)l’insieme dei sottoinsiemi di A è detto l’ insieme delle parti di A e si 
indica con P(A) o 2A
se A è finito e |A| = n allora |P(A)| = 2n
8Operazioni tra insiemi
•unione C = A B
–se A e B sono finiti |C| |A|+|B|
–commutativa e associativa
•intersezione C=A B
–se A e B sono finiti |C| min{|A|, |B|}
–commutativa e associativa
–l’intersezione è distributiva rispetto all’unione
•partizione di A
–insieme di n sottoinsiemi di A tali che 
A1A2… An= A
i j AiAj= A B
A B
A7
8", linguaggio grammatiche insieme parti pal’insieme sottoinsiemi detto l’ insieme parti indica pa a finito a n allora pa n operazioni insiemi •unione b –se b finiti c ab –commutativa associativa •intersezione ca b –se b finiti c mina b –commutativa associativa –l’intersezione distributiva rispetto all’unione •partizione –insieme n sottoinsiemi tali aa… an j aiaj a b b a ,[9],"[(9, 0.9639883)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,4,"9/28/2021
502-linguaggio -e-grammatiche -24
9Operazioni tra insiemi
•complemento di B rispetto ad A
C = A -B = {x| xA xB}
•differenza simmetrica o somma disgiunta
A+B=AB-(A B)
•prodotto cartesiano C=A B
C= {x,y| xA yB}
–insieme di tutte le possibili coppie ordinate
–il prodotto cartesiano è associativo ma non commutativoA BA B
10Relazioni
•siano A1, A2, …, Ann insiemi 
(non necessariamente distinti)
•una relazione n -aria è un sottoinsieme di 
esempio :
–la relazione “ minore di ” definita sui naturali è l’insieme 
R NN = N2, dove R= {x,y| xy}A1A2…An
R A1A2…An9
10", linguaggio grammatiche operazioni insiemi •complemento b rispetto b x xa xb •differenza simmetrica somma disgiunta abab a b •prodotto cartesiano ca b c xy xa yb –insieme tutte possibili coppie ordinate –il prodotto cartesiano associativo commutativoa ba b relazioni •siano a a … ann insiemi non necessariamente distinti •una relazione n aria sottoinsieme esempio –la relazione “ minore ” definita naturali l’insieme r nn n r xy xyaa…an r aa…an ,"[0, 9]","[(0, 0.37670368), (9, 0.59975874)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,5,"9/28/2021
602-linguaggio -e-grammatiche -24
11Relazione d’ordine
•RA2=A A è una relazione d’ordine se valgono le 
seguenti proprietà:
1.riflessività
x,xR
2.antisimmetria
x,yRy,xRx=y
3.transitività
x,yRy,zRx,zR
un insieme su cui è definita una relazione d’ordine si dice 
parzialmente ordinato o poset (“partially ordered set”)
esempio : la relazione “ ” è una relazione d’ordine su N
12Relazione d’ordine totale
•una relazione d’ordine R A2è detta totale se
x,yA2 x,yR y,xR
esempio :
la relazione “ ” è una relazione d’ordine totale su N
1 2 3 4 5 6 7 8 …11
12", linguaggio grammatiche relazione d’ordine •raa a relazione d’ordine valgono seguenti proprietà riflessività xxr antisimmetria xyryxrxy transitività xyryzrxzr insieme definita relazione d’ordine dice parzialmente ordinato poset “partially ordered set” esempio relazione “ ” relazione d’ordine n relazione d’ordine totale •una relazione d’ordine r aè detta totale xya xyr yxr esempio relazione “ ” relazione d’ordine totale n        … ,[7],"[(7, 0.9678525)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,6,"9/28/2021
702-linguaggio -e-grammatiche -24
13Relazione di equivalenza
•RA2= AA è una relazione di equivalenza se valgono 
le seguenti proprietà:
1.riflessività
x,xR
2.simmetria
x,yRy,xR
3.transitività
x,yRy,zRx,zR 
esempio : la relazione “= ”è una relazione di equivalenza su R
14Relazione di equivalenza
•un insieme A su cui è definita una relazione di 
equivalenza si può partizionare in sottoinsiemi 
massimali di equivalenza , detti classi di 
equivalenza
•l’insieme delle classi di equivalenza di A è 
detto insieme quoziente e si denota A/R 
•un elemento di A/R si denota con [a]
•il numero di classi di A/R si chiama indice di R13
14", linguaggio grammatiche relazione equivalenza •ra aa relazione equivalenza valgono seguenti proprietà riflessività xxr simmetria xyryxr transitività xyryzrxzr esempio relazione “ ”è relazione equivalenza r relazione equivalenza •un insieme definita relazione equivalenza può partizionare sottoinsiemi massimali equivalenza detti classi equivalenza •l’insieme classi equivalenza detto insieme quoziente denota ar •un elemento ar denota a •il numero classi ar chiama indice r ,[6],"[(6, 0.9785674)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,7,"9/28/2021
802-linguaggio -e-grammatiche -24
15Esempio di relazione di equivalenza
•consideriamo la relazione Eksu N
n k m
se esistono q, q ′, r (con r<k) tali che
n=qk+r    e    m=q′k+r
•Ekè una relazione di equivalenza
•le sue classi sono le classi resto rispetto alla 
divisione per k
16Operazioni su relazioni
•unione
R1R2={x,y|x,yR1x,yR2}
•complementazione
R={x,y|x,yR}
•chiusura transitiva
R+  ={x,y|
y1, …,ynA, n2, y1=x, yn=y
tali che
yi,yi+1R, i=1, …,n -1} 
•chiusura transitiva e riflessiva
R*=R+{x,x|xA}15
16", linguaggio grammatiche esempio relazione equivalenza •consideriamo relazione eksu n n k m esistono q q ′ r con rk tali nqkr mq′kr •ekè relazione equivalenza •le classi classi resto rispetto divisione k operazioni relazioni •unione rrxyxyrxyr •complementazione rxyxyr •chiusura transitiva r xy y …yna n yx yny tali yiyir i …n •chiusura transitiva riflessiva rrxxxa ,"[6, 8]","[(6, 0.23249565), (8, 0.7389231)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,8,"9/28/2021
902-linguaggio -e-grammatiche -24
17Chiusure di relazioni
2
31
54
2
31
542
31
54chiusura transitivachiusura transitiva
e riflessiva
18Funzioni
R X1 … Xn
è una relazione funzionale se
x1, …, xn-1X1 … Xn-1
esiste al più un elemento xn Xntale che
x1, …, xn-1, xnR
si chiama funzione la legge che associa x1, …, xn-1ad xn
f(x1, …, xn-1) = xn
f: X1 … Xn-1→Xn
X1 … Xn-1è il tipodella funzione17
18", linguaggio grammatiche chiusure relazioni chiusura transitivachiusura transitiva riflessiva funzioni r x … xn relazione funzionale x … xn x … xn esiste elemento xn xntale x … xn xnr chiama funzione legge associa x … xn ad xn fx … xn xn f x … xn →xn x … xn è tipodella funzione ,[6],"[(6, 0.9666604)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,9,"9/28/2021
1002-linguaggio -e-grammatiche -24
19Funzioni: dominio codominio
dom(f) = dominio di f
sottoinsieme di X1 … Xn-1
dom(f) = { x1, …, xn-1X1 … Xn-1|
xn Xnf(x1, …, xn-1) = xn}
cod(f) = codominio di f
sottoinsieme di Xn
cod(f) = { xn Xn|
x1, …, xn-1X1 … Xn-1
f(x1, …, xn-1) = xn}
20Funzioni: fibra
dato un xn
f-1(xn) = controimmagine o fibra di xn
sottoinsieme di X1 … Xn-1
f-1(xn) = {x1, …, xn-1X1 … Xn-1|
x1, …, xn-1dom(f)

f(x1, …, xn-1) = xn}19
20", linguaggio grammatiche funzioni dominio codominio domf dominio f sottoinsieme x … xn domf x … xn x … xn xn xnfx … xn xn codf codominio f sottoinsieme xn codf xn xn x … xn x … xn fx … xn xn funzioni fibra dato xn f xn controimmagine fibra xn sottoinsieme x … xn f xn x … xn x … xn x … xn domf  fx … xn xn ,[6],"[(6, 0.97631425)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,10,"9/28/2021
1102-linguaggio -e-grammatiche -24
21Funzione
dominiocodominioX1 … Xn-1 Xn
22Funzione totale
dominiocodominioX1 … Xn-1 Xn•una funzione f è totale se dom(f) = X1, …, Xn-121
22", linguaggio grammatiche funzione dominiocodominiox … xn xn funzione totale dominiocodominiox … xn xn•una funzione f totale domf x … xn ,"[0, 6]","[(0, 0.73244363), (6, 0.19482212)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,11,"9/28/2021
1202-linguaggio -e-grammatiche -24
23Funzione suriettiva
dominiocodominioX1 … Xn-1 Xn•una funzione f è suriettiva se cod(f) = Xn
24Funzione iniettiva
dominiocodominioX1 … Xn-1 Xn•una funzione f è iniettiva se |f-1(xn)|=123
24", linguaggio grammatiche funzione suriettiva dominiocodominiox … xn xn•una funzione f suriettiva codf xn funzione iniettiva dominiocodominiox … xn xn•una funzione f iniettiva f xn ,[0],"[(0, 0.9357035)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,12,"9/28/2021
1302-linguaggio -e-grammatiche -24
25Funzione biiettiva
dominiocodominioX1 … Xn-1 Xn•una funzione f è biiettiva (biiezione) se è 
iniettiva, suriettiva e totale
26Alfabeto
•un alfabeto è un insieme finito non vuoto di 
simboli (caratteri)
•esempi:
{‘M’, ‘C’, ‘L’, ‘X’, ‘I’, ‘V’}
{‘0’, ‘1’}
{‘0’, ‘1’, ‘2’, ‘3’, ‘4’, ‘5’, ‘6’, ‘7’, ‘8’, ‘9’}
{‘a’, ‘b’, ‘c’, ‘d’, ‘e’, ‘f’, ‘g’, ‘h’, ‘i’, ‘l’, ‘m’, 
‘n’, ‘o’, ‘p’, ‘q’, ‘r’, ‘s’, ‘t’, ‘u’, ‘v’, ‘z’}25
26", linguaggio grammatiche funzione biiettiva dominiocodominiox … xn xn•una funzione f biiettiva biiezione iniettiva suriettiva totale alfabeto •un alfabeto insieme finito vuoto simboli caratteri •esempi ‘m’ ‘c’ ‘l’ ‘x’ ‘i’ ‘v’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘a’ ‘b’ ‘c’ ‘d’ ‘e’ ‘f’ ‘g’ ‘h’ ‘i’ ‘l’ ‘m’ ‘n’ ‘o’ ‘p’ ‘q’ ‘r’ ‘s’ ‘t’ ‘u’ ‘v’ ‘z’ ,[0],"[(0, 0.9499922)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,13,"9/28/2021
1402-linguaggio -e-grammatiche -24
27Concatenazione
•dato un alfabeto , definiamo l’operazione binaria 
concatenazione (denotata con “ ◦”)
a◦b= abcon a, b
•indichiamo con anla concatenazione di acon se stessa n 
volte
esempio: a4 = a◦a◦a◦a= aaaa
•l’operazione “ ◦” è associativa ma non commutativa
•dati e “◦” definiamo +come l’insieme delle stringhe 
(parole) di lunghezza finita
•se a +aggiungiamo la stringa vuota = “” otteniamo *
28Linguaggio
•un linguaggio è un sottoinsieme di *
•*è detto linguaggio universale
•il linguaggio vuoto non contiene stringhe 
(nota che coincide con l’insieme vuoto )
–attenzione:

{}27
28", linguaggio grammatiche concatenazione •dato alfabeto  definiamo l’operazione binaria concatenazione denotata “ ◦” a◦b abcon a b •indichiamo anla concatenazione acon stessa n volte esempio a a◦a◦a◦a aaaa •l’operazione “ ◦” associativa commutativa •dati e “◦” definiamo come l’insieme stringhe parole lunghezza finita •se aggiungiamo stringa vuota  “” otteniamo  linguaggio •un linguaggio sottoinsieme  •è detto linguaggio universale •il linguaggio vuoto non contiene stringhe nota coincide l’insieme vuoto  –attenzione   ,[0],"[(0, 0.97691506)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,14,"9/28/2021
1502-linguaggio -e-grammatiche -24
29Operazioni sui linguaggi
L1e L2linguaggi
•unione
L1L2= {x*| xL1x L2}
L1= L1
•intersezione
L1L2= {x*| xL1x L2}
L1= 
•complementazione
L1={x*| xL1}
30Operazioni sui linguaggi
L1e L2linguaggi
•concatenazione o prodotto
L1◦L2= {x*|
x1L1x2L2tali che x = x1◦x2}
L ◦{} = {} ◦L = L
esempio :
L1= {an | n1};  L2= {bm | m1};   L1◦L2= {an bm | n,m1}
•potenza Lhdi un linguaggio L
L0= {}
Lh= L ◦Lh-1, per h 129
30", linguaggio grammatiche operazioni linguaggi le llinguaggi •unione ll x xlx l l l •intersezione ll x xlx l l  •complementazione lx xl operazioni linguaggi le llinguaggi •concatenazione prodotto l◦l x xlxltali x x◦x ◦  ◦l esempio l an n l bm m l◦l an bm nm •potenza lhdi linguaggio l  lh ◦lh h  ,[9],"[(9, 0.95499027)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,15,"9/28/2021
1602-linguaggio -e-grammatiche -24
31Operatore di Kleene
•chiusura riflessiva e transitiva di un linguaggio
L*= Lh
L* *={}
esempio : L={aa} L*={a2n|n0}
•chiusura transitiva (non riflessiva) di un 
linguaggio
L+= Lh
esempio : L={aa} L+={a2n|n1}
L*=L+ {}
h=0

h=1
32Espressioni regolari
•è uno strumento per descrivere linguaggi (vedremo nel seguito quali)
•dato un alfabeto , si definisce espressione regolare ogni stringa r
r({+, *, (, ), ◦, })+
•tale che:
1.r=oppure
2.roppure
3.r=(s+t) oppure r=(s◦t) oppure r=s*, con se tespressioni regolari
espressione linguaggio
 
a {a}
(s+t) L(s)L(t)
(s◦t) L(s)◦L(t)
s*L(s)*semantica31
32", linguaggio grammatiche operatore kleene •chiusura riflessiva transitiva linguaggio l lh l  esempio laa lann •chiusura transitiva non riflessiva linguaggio l lh esempio laa lann ll  h  h espressioni regolari •è strumento descrivere linguaggi vedremo seguito quali •dato alfabeto  definisce espressione regolare ogni stringa r r ◦  •tale che roppure roppure rst oppure rs◦t oppure rs tespressioni regolari espressione linguaggio   a a st lslt s◦t ls◦lt slssemantica ,[0],"[(0, 0.97953963)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,16,"9/28/2021
1702-linguaggio -e-grammatiche -24
33Espressioni regolari
i linguaggi rappresentabili con espressioni regolari sono una 
interessante sottoclasse stè forma sintetica di s◦tforma sintetica
espressioni sintetiche si ottengno definendo delle 
precedenze tra gli operatori: *> ◦> +
esempio : 
(a+(b(cd))) = a+bcdforma sinteticaesempio : 
(a+b)*rappresenta L=({ a}{b})*
esempio : 
(a+b)*arappresenta L={x|x {a,b}*“x termina con a”}
34Esercizio
data una mappa stradale, scrivere un’espressione regolare che 
definisca tutti i percorsi possibili tra A e B
adec +adg+fec+fg= 
= ad(ec+g) + f(ec+g) = 
= (ad+f)(ec+g)A Ba d c e
f g
33
34", linguaggio grammatiche espressioni regolari linguaggi rappresentabili espressioni regolari interessante sottoclasse stè forma sintetica s◦tforma sintetica espressioni sintetiche ottengno definendo precedenze operatori ◦ esempio abcd abcdforma sinteticaesempio abrappresenta l ab esempio abarappresenta lxx ab“x termina a” esercizio data mappa stradale scrivere un’espressione regolare definisca percorsi possibili b adec adgfecfg adecg fecg adfecga ba d f g ,"[1, 2]","[(1, 0.11994047), (2, 0.8614467)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,17,"9/28/2021
1802-linguaggio -e-grammatiche -24
35Esercizio
data una mappa stradale, scrivere un’espressione regolare che 
definisca tutti i percorsi possibili tra A e B
f(ebd)*gA Bd e
f gb
36Esercizio
data una mappa stradale, scrivere un’espressione regolare che 
definisca tutti i percorsi possibili tra A e B
a(deb)*decA Ba d c eb
35
36", linguaggio grammatiche esercizio data mappa stradale scrivere un’espressione regolare definisca percorsi possibili b febdga bd f gb esercizio data mappa stradale scrivere un’espressione regolare definisca percorsi possibili b adebdeca ba d eb ,[2],"[(2, 0.96666217)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,18,"9/28/2021
1902-linguaggio -e-grammatiche -24
37Esercizio
data una mappa stradale, scrivere un’espressione regolare che 
definisca tutti i percorsi possibili tra A e B
a(deb)*dgA Ba d e
gb
38Esercizio
data una mappa stradale, scrivere un’espressione regolare che 
definisca tutti i percorsi possibili tra A e B
f(edb)*ecA Bd c e
fb
37
38", linguaggio grammatiche esercizio data mappa stradale scrivere un’espressione regolare definisca percorsi possibili b adebdga ba d gb esercizio data mappa stradale scrivere un’espressione regolare definisca percorsi possibili b fedbeca bd fb ,[2],"[(2, 0.9666619)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,19,"9/28/2021
2002-linguaggio -e-grammatiche -24
39Esercizio
data una mappa stradale, scrivere un’espressione regolare che 
definisca tutti i percorsi possibili tra A e B
f(ebd)*g+ f(ebd)*ec+ a(deb)*dec+ a(deb)*dg=
= f(ebd)*(g+ec) + a(deb)*d(g+ec) =
= (f(ebd)*+a(deb)*d) (g+ec) =
= (f+ad)(ebd)*(g+ec)A Ba d c e
f gb
40Le grammatiche formali
1940 Post e Markof, riscrittura e derivazione di 
stringhe
1950 Chomsky, classificazione delle grammatiche 
nell’ambito degli studi sul linguaggio 
naturale
1960 Backus Naur Form per descrivere Algol•approccio generativo alla descrizione dei 
linguaggi
•metodo di costruzione delle stringhe basato sulla 
riscrittura39
40", linguaggio grammatiche esercizio data mappa stradale scrivere un’espressione regolare definisca percorsi possibili b febdg febdec adebdec adebdg febdgec adebdgec febdadebd gec fadebdgeca ba d f gb le grammatiche formali post markof riscrittura derivazione stringhe chomsky classificazione grammatiche nell’ambito studi linguaggio naturale backus naur form descrivere algol•approccio generativo descrizione linguaggi •metodo costruzione stringhe basato riscrittura ,"[0, 2, 5]","[(0, 0.3692025), (2, 0.23184976), (5, 0.38435686)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,20,"9/28/2021
2102-linguaggio -e-grammatiche -24
41Grammatiche formali
•grammatiche di Chomsky
•-produzioni
•riconoscimento di linguaggi
42Grammatiche di Chomsky
unagrammatica è una quadrupla 
G=<VT, VN, P, S>
•VT è l’alfabeto (finito) di simboli terminali
•VNè un insieme (finito) di simboli non terminali , o 
categorie sintattiche , tale che VN= 
•P, detto insieme delle produzioni , è una relazione 
binaria finita su
(VTVN)*◦VN◦(VTVN)*(VTVN)*
•SVNè l’assioma<,>P si indica generalmente con →forma sintetica41
42", linguaggio grammatiche grammatiche formali •grammatiche chomsky • produzioni •riconoscimento linguaggi grammatiche chomsky unagrammatica quadrupla gvt vn p s •vt è l’alfabeto finito simboli terminali •vnè insieme finito simboli terminali categorie sintattiche tale vn  •p detto insieme produzioni relazione binaria finita vtvn◦vn◦vtvnvtvn •svnè l’assiomap indica generalmente →forma sintetica ,[3],"[(3, 0.9727195)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,21,"9/28/2021
2202-linguaggio -e-grammatiche -24
43Esempio
una grammatica definisce implicitamente tutte le stringhe 
di terminali generabili a partire dall’assioma tramite una 
sequenza di riscritture
esempio:
G=<{a, b, c}, {S, B, C}, P, S>, con P composto da:
S → aSS → B B → bB
B → bCC → cCC → c
genera L(G) = { anbmch| n0, m, h1}
→ 1→ 2 …→ n
viene anche indicato con
→ 1| 2|…|nforma sintetica
44Linguaggio generato
•derivazione diretta : relazione su
(V*◦VN◦V*) V*
<,> appartiene alla relazione (si scrive  ) se
 V*◦VN◦V*ed ,,V*t.c. ==e →P
e sono dette forme di frase
•derivazione : chiusura riflessiva e transitiva della 
derivazione diretta, si rappresenta con *
•il linguaggio generato da G è L(G) = {x|x VT*S*x}
•due grammatiche G1e G2sono equivalenti se 
L(G1)=L(G2)
talvolta al posto di *forma sinteticaVTVNviene talvolta indicato con Vforma sintetica43
44", linguaggio grammatiche esempio grammatica definisce implicitamente tutte stringhe terminali generabili partire dall’assioma tramite sequenza riscritture esempio ga b c s b c p s p composto da s → ass → b b → bb b → bcc → ccc → genera lg anbmch n m h → →  …→ n viene indicato →  …nforma sintetica linguaggio generato •derivazione diretta relazione v◦vn◦v v  appartiene relazione si scrive   v◦vn◦ved vtc e →p e sono dette forme frase •derivazione chiusura riflessiva transitiva derivazione diretta rappresenta  •il linguaggio generato g lg xx vtsx •due grammatiche ge gsono equivalenti lglg talvolta al posto forma sinteticavtvnviene talvolta indicato vforma sintetica ,[0],"[(0, 0.9844782)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,22,"9/28/2021
2302-linguaggio -e-grammatiche -24
45Grammatiche formali
esempio : generazione di { anbncn|n1}
grammatica G=<{ a, b, c},{S,B,C,F,G},P,S>
con P composto da
S → aSBC CB → BC
SB → bFFB → bF
FC → cGGC → cG
G → 
per generare aabbcc
SaSBC aaSBCBC aaSBBCC
aabFBCC aabb FCC aabbc GC
aabbcc G aabbcc
46Grammatiche formali
osservazione : non è detto che una sequenza di derivazioni 
porti ad una stringa del linguaggio
esempio : 
la grammatica G=<{ a, b, c}, {S, A}, P, S> con
S → aSc| A
A → bAc| 
genera {anbmcn+m|n,m0}
esempio : 
la grammatica G=<{a, b, c}, {S, A}, P, S> con
S → Ab
A → Sa
genera 45
46", linguaggio grammatiche grammatiche formali esempio generazione anbncnn grammatica g a b csbcfgps p composto s → asbc cb → bc sb → bffb → bf fc → cggc → cg g →  generare aabbcc sasbc aasbcbc aasbbcc aabfbcc aabb fcc aabbc gc aabbcc g aabbcc grammatiche formali osservazione detto sequenza derivazioni porti stringa linguaggio esempio grammatica g a b c s a p s s → asc → bac  genera anbmcnmnm esempio grammatica ga b c s a p s s → ab → sa genera  ,"[0, 6]","[(0, 0.050018124), (6, 0.928921)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,23,"9/28/2021
2402-linguaggio -e-grammatiche -24
47Grammatiche di Chomsky
•di tipo 0, non limitate
•di tipo 1, context sensitive, contestuali
•di tipo 2, context free (CF), non contestuali
•di tipo 3, lineari destre (RL), regolari
48Grammatiche di Chomsky
di tipo 0, non limitate
•sono le meno restrittive
•produzioni del tipo
→, V*◦VN◦V*, V*
ammettono anche derivazioni che accorciano stringhe
linguaggi di tipo 0
esempio :
il linguaggio { anbn|n1} è di tipo 0 in quanto generato da
S → aAB B → b
aA → aaAbaAb→ ab
aAA → aA 47
48", linguaggio grammatiche grammatiche chomsky •di tipo limitate •di tipo context sensitive contestuali •di tipo context free cf contestuali •di tipo lineari destre rl regolari grammatiche chomsky tipo limitate •sono meno restrittive •produzioni tipo → v◦vn◦v v ammettono derivazioni accorciano stringhe linguaggi tipo esempio linguaggio anbnn tipo generato s → aab b → b aa → aaabaab→ ab aaa → aa ,[8],"[(8, 0.9790663)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,24,"9/28/2021
2502-linguaggio -e-grammatiche -24
49Grammatiche di Chomsky
di tipo 1, context sensitive, contestuali
•produzioni che non riducano la lunghezza delle forme di frase
→, ||≤||, V*◦VN◦V*, V*
linguaggi di tipo 1
esempio :
il linguaggio { anbncn|n1} è di tipo 0 in quanto generato da
S → aSBC CB → BC 
SB → bF FB → bF
FC → cG GC → cG
cG → c
ma è anche di tipo 1, infatti è generato anche da
S → aSBc| aBc
cB → Bc
bB → bb
aB → ab
50Generazione di stringhe di anbncn
(1)S → aSBc | aBc    (2)cB → Bc 
(3)bB → bb (4)aB → ab
SaSBc
aaSBcBc
aaaSBcBcBc
aaaaBcBcB cBc
aaaaBcB cBBcc 
aaaaBcBB cBcc 
aaaaB cBBBccc 
aaaaBB cBBccc 
aaaaBBB cBccc aaaaBBBBcccc
aaaabBBBcccc
aaaab bBBcccc
aaaabb bBcccc
aaaabbbbcccc49
50", linguaggio grammatiche grammatiche chomsky tipo context sensitive contestuali •produzioni riducano lunghezza forme frase → ≤ v◦vn◦v v linguaggi tipo esempio linguaggio anbncnn tipo generato s → asbc cb → bc sb → bf fb → bf fc → cg gc → cg cg → tipo infatti generato s → asbc abc cb → bc bb → bb ab → ab generazione stringhe anbncn s → asbc abc cb → bc bb → bb ab → ab sasbc aasbcbc aaasbcbcbc aaaabcbcb cbc aaaabcb cbbcc aaaabcbb cbcc aaaab cbbbccc aaaabb cbbccc aaaabbb cbccc aaaabbbbcccc aaaabbbbcccc aaaab bbbcccc aaaabb bbcccc aaaabbbbcccc ,[8],"[(8, 0.985242)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,25,"9/28/2021
2602-linguaggio -e-grammatiche -24
51Grammatiche di Chomsky
di tipo 2, context free (CF), non contestuali
•produzioni del tipo
A→, AVN, V+
linguaggi di tipo 2
esempio :
il linguaggio { anbn|n1} è di tipo 0 in quanto generato da
S → aAb
aA → aaAb
A → 
ma è anche di tipo 2, infatti è generato anche da
S → aSb| ab
52Esempi di linguaggi di tipo 2
linguaggio delle espressioni aritmetiche con la variabile i (come per 
esempio “i*i+(i*i+(i))*i*i ”, oppure “((i+i)*i) ”). 
L’assioma è E. 
E → E+T | T
T → T*F | F
F → i| (E)
grammatica delle parentesi ben bilanciate (esempio “ (((())))() ”)
S → ()| SS | (S)
da quale sequenza di produzioni è generata “ ()((()())) ” ?
grammatica delle stringhe palindrome (esempio “elle”, “ereggere”)51
52", linguaggio grammatiche grammatiche chomsky tipo context free cf contestuali •produzioni tipo a→ avn v linguaggi tipo esempio linguaggio anbnn tipo generato s → aab aa → aaab →  tipo infatti generato s → asb ab esempi linguaggi tipo linguaggio espressioni aritmetiche variabile come esempio “iiiiiii ” oppure “iii ” l’assioma e → et t t → tf f f → i e grammatica parentesi ben bilanciate esempio “ ” s → ss s sequenza produzioni generata “ ” grammatica stringhe palindrome esempio “elle” “ereggere” ,"[0, 8, 9]","[(0, 0.2040844), (8, 0.2521628), (9, 0.5297488)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,26,"9/28/2021
2702-linguaggio -e-grammatiche -24
53Grammatiche di Chomsky
di tipo 3, lineari destre (RL), regolari
•produzioni del tipo
A→, AVN, (VT◦VN)VT
•linguaggi di tipo 3
esempio :
il linguaggio {anb|n0} è di tipo 3 in quanto generato da
S → aS
S → b
si possono anche definire grammatiche lineari sinistre (LL) con 
A→, AVN, (VN◦VT)VT
esempio : il linguaggio { anb|n0} è anche generato da
S → Tb| b
T → a| Ta
teorema : i linguaggi generati da grammatiche LL e RL coincidono
54Grammatiche di Chomsky
un linguaggio è strettamente di tipo n se esiste una 
grammatica di tipo n che lo genera e non esiste una 
grammatica di tipo m>n che lo genera
esempio : il linguaggio { anbn|n1} è generato da 
una grammatica di tipo 2 e non è generato da 
nessuna grammatica di tipo 353
54", linguaggio grammatiche grammatiche chomsky tipo lineari destre rl regolari •produzioni tipo a→ avn vt◦vnvt •linguaggi tipo esempio linguaggio anbn tipo generato s → as s → b possono definire grammatiche lineari sinistre ll a→ avn vn◦vtvt esempio linguaggio anbn generato s → tb b t → a ta teorema linguaggi generati grammatiche ll rl coincidono grammatiche chomsky linguaggio strettamente tipo n esiste grammatica tipo n genera esiste grammatica tipo mn genera esempio linguaggio anbnn generato grammatica tipo generato nessuna grammatica tipo ,"[0, 8]","[(0, 0.93524295), (8, 0.050960183)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,27,"9/28/2021
2802-linguaggio -e-grammatiche -24
55Grammatiche di Chomsky
contenimento tra i linguaggitipo 0
tipo 1
tipo 2
tipo 3
56Grammatiche di Chomsky
quadro riassuntivo della classificazione delle 
grammatiche secondo Chomskytipo produzioni vincoli
tipo 0
non limitate→ V*◦VN◦V*, V*
tipo 1
contestuali→||≤||
V*◦VN◦V*, V*
tipo 2
non contestualiA→ AVN, V+
tipo 3
regolariA→ AVN, (VT◦VN)VT55
56", linguaggio grammatiche grammatiche chomsky contenimento linguaggitipo tipo tipo tipo grammatiche chomsky quadro riassuntivo classificazione grammatiche secondo chomskytipo produzioni vincoli tipo limitate→ v◦vn◦v v tipo contestuali→≤ v◦vn◦v v tipo contestualia→ avn v tipo regolaria→ avn vt◦vnvt ,[7],"[(7, 0.9624935)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,28,"9/28/2021
2902-linguaggio -e-grammatiche -24
57-produzioni
•con grammatiche di tipo1, 2, 3 non è possibile
generare la stringa vuota
–per generare occorre una produzione →che
viene detta-produzione
–per Chomsky tutti ilinguaggi checontengono -
produzioni sono linguaggi di tipo0
•qual è l’impatto sui corrispondenti linguaggi
delle-produzioni nelle grammatiche ?
–se ammettiamo -produzioni dobbiamo fare 
attenzione , altrimenti rischiamo di snaturare la 
gerarchia di Chomsky
58-produzioni : variazione della gerarchia
con le seguenti modifiche , ilinguaggi generati dale 
diverse tipologie di grammatiche rimangono inalterati , 
salvo per la possibilità di generare la stringa vuota
tipo-produzioni ammesse
0 tutte (per definizione)
1 solo sull’assioma quando quest’ultimo non 
compare mai a destra di una produzione
2 tutte
3 tutte57
58", linguaggio grammatiche  produzioni •con grammatiche tipo possibile generare stringa vuota –per generare occorre produzione →che viene detta produzione –per chomsky ilinguaggi checontengono  produzioni linguaggi tipo •qual l’impatto corrispondenti linguaggi delle produzioni grammatiche –se ammettiamo  produzioni dobbiamo fare attenzione altrimenti rischiamo snaturare gerarchia chomsky  produzioni variazione gerarchia seguenti modifiche ilinguaggi generati dale diverse tipologie grammatiche rimangono inalterati salvo possibilità generare stringa vuota tipo produzioni ammesse tutte per definizione solo sull’assioma quando quest’ultimo compare mai destra produzione tutte tutte ,[3],"[(3, 0.98571205)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,29,"9/28/2021
3002-linguaggio -e-grammatiche -24
59Esempi di grammatiche
•il linguaggio {w ◦w| w (a+b)*}
•è generato dalla grammatica contestuale
S → T | 
T → aAT | bBT | A0a| B0bAa→ aA
Ab→ bA
Ba→ aB
Bb→ bBAA0→ A0a
BA0→ A0b
AB0→ B0a
BB0→ B0b(1) (2) (3)
A0→ a
B0→ b(4)
•le (1) generano insieme caratteri della prima e della seconda 
stringa; A0(B0) è l’ultimo carattere della prima stringa
•le (2) e le (3) separano la prima stringa dalla seconda
•le (4) chiudono la generazione, se sono applicate troppo presto 
il processo diverge
60Esempi di grammatiche
•il linguaggio {(x #)*| x = permutazione di (a,b,c)} (che contiene 
per esempio le stringhe , abc# , acb# , bac#cab# , ecc)
•ma è generato anche dalla grammatica CF:
S → E#S |  E → abc | acb | cba | cab | bac | bca
•ed anche dalla grammatica regolare:
S → aX | bY | cZ | 
X → bX| cX
X→ cR
X→ bRR → #S
Y → aY| cY
Y→ cR
Y→ aRZ → aZ| bZ
Z→ bR
Z→ aRS → S’ |  A → a
B → b
C → cAB → BA
AC → CA
BC → CBS’ → ABC#
S’ → ABC#S’è generato dalla grammatica contestuale:59
60", linguaggio grammatiche esempi grammatiche •il linguaggio w ◦w w ab •è generato grammatica contestuale s → t  t → aat bbt aa bbaa→ aa ab→ ba ba→ ab bb→ bbaa→ aa ba→ ab ab→ ba bb→ bb a→ b→ b •le generano insieme caratteri prima seconda stringa ab l’ultimo carattere prima stringa •le separano prima stringa seconda •le chiudono generazione applicate troppo presto processo diverge esempi grammatiche •il linguaggio x x permutazione abc che contiene esempio stringhe  abc acb baccab ecc •ma generato grammatica cf s → es  → abc acb cba cab bac bca •ed grammatica regolare s → ax by cz  x → bx cx x→ cr x→ brr → s y → ay cy y→ cr y→ arz → az bz z→ br z→ ars → s’  → b → b → cab → ba ac → ca bc → cbs’ → abc s’ → abcs’è generato grammatica contestuale ,[0],"[(0, 0.9891528)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,30,"9/28/2021
3102-linguaggio -e-grammatiche -24
61Forma normale di Backus
•la BNF è una notazione CF con alcuni accorgimenti 
sintattici che ne aumentano la leggibilità
<sequenza istruzioni> ::= <istruzione>; 
{<istruzione>;}
<istruzione if> ::= if ( <condizione> ) 
<istruzione> [else <istruzione>]esempio
può essere riscritto:
Q → I;| I;Q
può essere riscritto:
F → if( C )I else I | if( C )I
62Riconoscimento dei linguaggi
•esistono linguaggi a cui non corrisponde alcun algoritmo 
di decisione
•i linguaggi di tipo 3 sono riconosciuti da dispositivi con 
memoria costante in tempo lineare (automi a stati finiti)
•i linguaggi strettamente di tipo 2 sono riconosciuti da 
dispositivi non deterministici con pila in tempo lineare 
(automi a pila non deterministici)problema : 
stabilire se una stringa appartiene ad un dato linguaggio61
62", linguaggio grammatiche forma normale backus •la bnf notazione cf alcuni accorgimenti sintattici aumentano leggibilità sequenza istruzioni istruzione istruzione istruzione if if condizione istruzione else istruzioneesempio può essere riscritto q → i iq può essere riscritto f → if i else if i riconoscimento linguaggi •esistono linguaggi corrisponde alcun algoritmo decisione •i linguaggi tipo riconosciuti dispositivi memoria costante tempo lineare automi stati finiti •i linguaggi strettamente tipo riconosciuti dispositivi deterministici pila tempo lineare automi pila deterministiciproblema stabilire stringa appartiene dato linguaggio ,"[4, 8]","[(4, 0.6684653), (8, 0.31922004)]"
dataExtraction\data_test\rootfolder\universita\automata\020-linguaggi-e-grammatiche-24.pdf,31,"9/28/2021
3202-linguaggio -e-grammatiche -24
63Riconoscimento dei linguaggi
•i linguaggi strettamente di tipo 1 sono riconosciuti da 
dispositivi non deterministici con memoria che cresce 
linearmente con la lunghezza della stringa da esaminare 
(automi non deterministici “linear bounded”)
•i linguaggi strettamente di tipo 0 sono riconosciuti da 
macchine di Turing con memoria e tempo illimitati
–è possibile che non esista un algoritmo di decisione ma un 
processo semidecisionale, in cui, se la stringa non fa parte del 
linguaggio non è detto che la computazione termini
63", linguaggio grammatiche riconoscimento linguaggi •i linguaggi strettamente tipo riconosciuti dispositivi deterministici memoria cresce linearmente lunghezza stringa esaminare automi deterministici “linear bounded” •i linguaggi strettamente tipo riconosciuti macchine turing memoria tempo illimitati –è possibile esista algoritmo decisione processo semidecisionale cui stringa fa parte linguaggio detto computazione termini ,[8],"[(8, 0.978567)]"
dataExtraction\data_test\rootfolder\universita\automata\022-espressioni-regolari-07.pdf,0,"1Esercizi di Informatica Teorica
Espressioni regolari
queste esercitazioni sono il frutto del lavoro di molte persone, tra le quali 
Luca Cabibbo, Walter Didi mo e Giuseppe Di Battista",esercizi informatica teorica espressioni regolari esercitazioni frutto lavoro molte persone quali luca cabibbo walter didi mo giuseppe battista,"[3, 5]","[(3, 0.6011431), (5, 0.35673338)]"
dataExtraction\data_test\rootfolder\universita\automata\022-espressioni-regolari-07.pdf,1,"2
Notazione sulla difficoltà degli esercizi
facile
non difficile
difficile
molto difficile
", notazione difficoltà esercizi facile difficile difficile molto difficile,"[0, 1, 2, 3, 4]","[(0, 0.012502091), (1, 0.012501978), (2, 0.012502124), (3, 0.012502366), (4, 0.012501988)]"
dataExtraction\data_test\rootfolder\universita\automata\022-espressioni-regolari-07.pdf,2,"3Espressioni regolari
esercizio 1
dire se le seguenti affermazioni sono vere o false:
1.a L(∅*) = ∅
1.b baa ∈L(a*b*a*b*)
1.c abcd ∈L( (a (cd)*b)*)
1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)
1.e L((ab)*)∩L((cd)*)=  ∅
1.f L((abb + a)*a) = L(a(bba + a)*)
1.g L((a+b)*) = L((a*b*)*)
",espressioni regolari esercizio dire seguenti affermazioni vere false a l∅ ∅ b baa ∈labab c abcd ∈l a cdb d lab∩lba ab e lab∩lcd ∅ f labb aa labba a g lab lab,[5],"[(5, 0.94999737)]"
dataExtraction\data_test\rootfolder\universita\automata\022-espressioni-regolari-07.pdf,3,"4Espressioni regolari
esercizio 1
dire se le seguenti affermazioni sono vere o false:
1.a L(∅*) = ∅
1.b baa ∈L(a*b*a*b*)
1.c abcd ∈L( (a (cd)*b)*)
1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)
1.e L((ab)*)∩L((cd)*)=  ∅
1.f L((abb + a)*a) = L(a(bba + a)*)
1.g L((a+b)*) = L((a*b*)*)
",espressioni regolari esercizio dire seguenti affermazioni vere false a l∅ ∅ b baa ∈labab c abcd ∈l a cdb d lab∩lba ab e lab∩lcd ∅ f labb aa labba a g lab lab,[5],"[(5, 0.94999737)]"
dataExtraction\data_test\rootfolder\universita\automata\022-espressioni-regolari-07.pdf,4,"5Espressioni regolari
esercizio 1
dire se le seguenti affermazioni sono vere o false:
1.a L(∅*) = ∅
1.b baa ∈L(a*b*a*b*)
1.c abcd ∈L( (a (cd)*b)*)
1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)
1.e L((ab)*)∩L((cd)*)=  ∅
1.f L((abb + a)*a) = L(a(bba + a)*)
1.g L((a+b)*) = L((a*b*)*)
",espressioni regolari esercizio dire seguenti affermazioni vere false a l∅ ∅ b baa ∈labab c abcd ∈l a cdb d lab∩lba ab e lab∩lcd ∅ f labb aa labba a g lab lab,[5],"[(5, 0.94999737)]"
dataExtraction\data_test\rootfolder\universita\automata\022-espressioni-regolari-07.pdf,5,"6Espressioni regolari
esercizio 1
dire se le seguenti affermazioni sono vere o false:
1.a L(∅*) = ∅
1.b baa ∈L(a*b*a*b*)
1.c abcd ∈L( (a (cd)*b)*)
1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)
1.e L((ab)*)∩L((cd)*)=  ∅
1.f L((abb + a)*a) = L(a(bba + a)*)
1.g L((a+b)*) = L((a*b*)*)
",espressioni regolari esercizio dire seguenti affermazioni vere false a l∅ ∅ b baa ∈labab c abcd ∈l a cdb d lab∩lba ab e lab∩lcd ∅ f labb aa labba a g lab lab,[5],"[(5, 0.94999737)]"
dataExtraction\data_test\rootfolder\universita\automata\022-espressioni-regolari-07.pdf,6,"7Espressioni regolari
esercizio 1
dire se le seguenti affermazioni sono vere o false:
1.a L(∅*) = ∅
1.b baa ∈L(a*b*a*b*)
1.c abcd ∈L( (a (cd)*b)*)
1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)
1.e L((ab)*)∩L((cd)*)=  ∅
1.f L((abb + a)*a) = L(a(bba + a)*)
1.g L((a+b)*) = L((a*b*)*)
",espressioni regolari esercizio dire seguenti affermazioni vere false a l∅ ∅ b baa ∈labab c abcd ∈l a cdb d lab∩lba ab e lab∩lcd ∅ f labb aa labba a g lab lab,[5],"[(5, 0.94999737)]"
dataExtraction\data_test\rootfolder\universita\automata\022-espressioni-regolari-07.pdf,7,"8Espressioni regolari
esercizio 1
dire se le seguenti affermazioni sono vere o false:
1.a L(∅*) = ∅
1.b baa ∈L(a*b*a*b*)
1.c abcd ∈L( (a (cd)*b)*)
1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)
1.e L((ab)*)∩L((cd)*)=  ∅
1.f L((abb + a)*a) = L(a(bba + a)*)
1.g L((a+b)*) = L((a*b*)*)
",espressioni regolari esercizio dire seguenti affermazioni vere false a l∅ ∅ b baa ∈labab c abcd ∈l a cdb d lab∩lba ab e lab∩lcd ∅ f labb aa labba a g lab lab,[5],"[(5, 0.94999737)]"
dataExtraction\data_test\rootfolder\universita\automata\022-espressioni-regolari-07.pdf,8,"9Espressioni regolari
esercizio 1
dire se le seguenti affermazioni sono vere o false:
1.a L(∅*) = ∅
1.b baa ∈L(a*b*a*b*)
1.c abcd ∈L( (a (cd)*b)*)
1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)
1.e L((ab)*)∩L((cd)*)=  ∅
1.f L((abb + a)*a) = L(a(bba + a)*)
1.g L((a+b)*) = L((a*b*)*)
",espressioni regolari esercizio dire seguenti affermazioni vere false a l∅ ∅ b baa ∈labab c abcd ∈l a cdb d lab∩lba ab e lab∩lcd ∅ f labb aa labba a g lab lab,[5],"[(5, 0.94999737)]"
dataExtraction\data_test\rootfolder\universita\automata\022-espressioni-regolari-07.pdf,9,"10Espressioni regolari
esercizio 1
dire se le seguenti affermazioni sono vere o false:
1.a L(∅*) = ∅
1.b baa ∈L(a*b*a*b*)
1.c abcd ∈L( (a (cd)*b)*)
1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)
1.e L((ab)*)∩L((cd)*)=  ∅
1.f L((abb + a)*a) = L(a(bba + a)*)
1.g L((a+b)*) = L((a*b*)*)
",espressioni regolari esercizio dire seguenti affermazioni vere false a l∅ ∅ b baa ∈labab c abcd ∈l a cdb d lab∩lba ab e lab∩lcd ∅ f labb aa labba a g lab lab,[5],"[(5, 0.94999725)]"
dataExtraction\data_test\rootfolder\universita\automata\022-espressioni-regolari-07.pdf,10,"11Espressioni regolari
esercizio 2
quali linguaggi sono descritti dalle seguenti espressioni regolari? 
2.a 1(0+1)*
2.b (0+1)*1(0+1)*
",espressioni regolari esercizio quali linguaggi descritti seguenti espressioni regolari a b ,"[0, 1, 2, 3, 4]","[(0, 0.010006853), (1, 0.010008363), (2, 0.17507239), (3, 0.010006599), (4, 0.010005637)]"
dataExtraction\data_test\rootfolder\universita\automata\022-espressioni-regolari-07.pdf,11,"12Espressioni regolari
esercizio 3
scrivere le espressioni regolari corrispondenti ai seguenti linguaggi 
su Σ=  { 0, 1}
3.a tutte le sequenze alternate (cioè che non contengono né 00
né11) di 0e 1che iniziano e finiscono per 1o che iniziano 
e finiscono per 0
3.b tutte le sequenze con un numero pari di 0",espressioni regolari esercizio scrivere espressioni regolari corrispondenti seguenti linguaggi σ a tutte sequenze alternate cioè contengono né né e che iniziano finiscono o iniziano finiscono b tutte sequenze numero pari ,"[0, 5]","[(0, 0.72114474), (5, 0.24406189)]"
dataExtraction\data_test\rootfolder\universita\automata\022-espressioni-regolari-07.pdf,12,"13Espressioni regolari
esercizio 4
scrivere l’espressione regolare che descrive il complemento dei 
seguenti linguaggi su Σ=  { 0, 1}
4.a 1(0+1)*
4.b 0*+1*
",espressioni regolari esercizio scrivere l’espressione regolare descrive complemento seguenti linguaggi σ a b ,"[0, 1, 2, 3, 4]","[(0, 0.010006955), (1, 0.010005067), (2, 0.61836064), (3, 0.010005053), (4, 0.010003922)]"
dataExtraction\data_test\rootfolder\universita\automata\022-espressioni-regolari-07.pdf,13,"14Espressioni regolari
esercizio 5
semplificare le seguenti espressioni regolari su Σ={a, b, c}
5.a (a*b+b*cb)*
5.b ((a*b*)*(b*a*)*)*
",espressioni regolari esercizio semplificare seguenti espressioni regolari σa b c a abbcb b abba,[1],"[(1, 0.91816366)]"
dataExtraction\data_test\rootfolder\universita\automata\022-espressioni-regolari-07.pdf,14,"15Espressioni regolari
esercizio 6
determinare le espressioni re golari per i seguenti linguaggi
6.a i numeri naturali in notazione binaria 
6.b i numeri binari su 4 bit 
6.c i numeri naturali in base 10
6.d i numeri naturali pari 
6.e i numeri pari in base 3
",espressioni regolari esercizio determinare espressioni re golari seguenti linguaggi a numeri naturali notazione binaria b numeri binari bit c numeri naturali base d numeri naturali pari e numeri pari base ,"[5, 8]","[(5, 0.7743745), (8, 0.1948493)]"
dataExtraction\data_test\rootfolder\universita\automata\022-espressioni-regolari-07.pdf,15,"16Soluzioni
soluzione esercizio 3
3.a (10)*1+(01)*0
3.b 1*(01*01*)*
soluzione esercizio 4
4.a (0(0+1)*)*
4.b ((1+0)*0(1+0)*1(1+0)*)+((1+0)*1(1+0)*0(1+0)*) 
oppure 
(0+1)*(01+10)(0+1)*",soluzioni soluzione esercizio a b soluzione esercizio a b oppure ,"[0, 1, 2, 3, 4]","[(0, 0.014290258), (1, 0.014290323), (2, 0.014293047), (3, 0.014288832), (4, 0.014287867)]"
dataExtraction\data_test\rootfolder\universita\automata\022-espressioni-regolari-07.pdf,16,"17Soluzioni
soluzione esercizio 6
6.a i numeri naturali in notazione binaria 
0+1(0+1)*
6.b i numeri binari su 4 bit 
(0+1) (0+1) (0+1) (0+1)
6.c i numeri naturali in base 10
0+(1+2+3+4+5+6+7+8+9)(0+1+2+3+4+
5+6+7+8+9)*",soluzioni soluzione esercizio a numeri naturali notazione binaria b numeri binari bit c numeri naturali base ,[8],"[(8, 0.93570095)]"
dataExtraction\data_test\rootfolder\universita\automata\022-espressioni-regolari-07.pdf,17,"18Soluzioni
6.d i numeri naturali pari 
(0+2+4+6+8)+(1+2+..+9)(0+1+..+9)*(0+2+4+6
+8)
6.e i numeri pari in base 3
si noti che i numeri pari in base tre sono tutte e 
sole quelle sequenze di cifre in { 0,1,2} con un 
numero pari di 1
Sia α= (2(0+2)*) e β= (1(0+2)*1(0+2)*)
Il linguaggio è rappresentabile da:
αα*β*+  α*ββ*+  0",soluzioni d numeri naturali pari e numeri pari base noti numeri pari base tre tutte sole sequenze cifre numero pari α β linguaggio rappresentabile da ααβ αββ ,[5],"[(5, 0.96249163)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,0,"1Informatica Teorica
Cardinalità transfinite",informatica teorica cardinalità transfinite,"[0, 1, 2, 3, 4]","[(0, 0.025009813), (1, 0.025012331), (2, 0.025010375), (3, 0.025014296), (4, 0.025010413)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,1,"2Pidgeonhole principle
teorema : 
dati due insiemi A e B tali che
0 < |B| < |A| < ∞
non esiste una funzione f: A →B che sia totale e 
iniettiva
dimostrazione : 
basata sulla cardinalità di B e per induzione",pidgeonhole principle teorema dati due insiemi b tali b a ∞ esiste funzione f →b totale iniettiva dimostrazione basata cardinalità b induzione,[0],"[(0, 0.93998617)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,2,"3Pidgeonhole principle
ma questa 
assegnazione 
non è totale!",pidgeonhole principle assegnazione totale,"[0, 1, 2, 3, 4]","[(0, 0.81993556), (1, 0.020006841), (2, 0.020005476), (3, 0.020005995), (4, 0.020007273)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,3,"4Pidgeonhole principle
… e questa non 
è iniettiva!
a/1
",pidgeonhole principle … iniettiva a,"[0, 1, 2, 3, 4]","[(0, 0.77496624), (1, 0.02500507), (2, 0.025002072), (3, 0.02500305), (4, 0.025002621)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,4,"5Dimostrazione (pidgeonhole principle)
• dimostrazione per induzione
– passo base: |B|=1
– passo induttivo: |B|>1
• passo base (|B|=1)
B={b}, |A|>1, es. A={a1,a2}
se f è totale, allora f(a1)=b e f(a2)=b
allora f non è iniettiva perché |f -1(b)|>1",dimostrazione pidgeonhole principle • dimostrazione induzione – passo base b – passo induttivo b • passo base b bb a es aaa f totale allora fab fab allora f iniettiva f b,[7],"[(7, 0.9571313)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,5,"6Dimostrazione (pidgeonhole principle)
• passo induttivo: |B|>1
supponiamo sia vero per |B| = n ed |A| ≥n+1
dimostriamo che è vero per |B| = n+1 e |A| ≥n+2
ipotizziamo per assurdo che esista una funzione totale 
iniettiva f e scegliamo un qualunque elemento b di B
se |f -1(b)|≥2 ⇒contraddizione ⇒teorema dimostrato
se |f -1(b)|≤1 consideriamo
A′=A-{f -1(b)}   e    B ′=B-{b} 
|A′| ≥n+1 > |B′| = n
applichiamo l’ipotesi induttiva ⇒contraddizione ",dimostrazione pidgeonhole principle • passo induttivo b supponiamo vero b n a ≥n dimostriamo vero b n a ≥n ipotizziamo assurdo esista funzione totale iniettiva f scegliamo qualunque elemento b b f b≥ ⇒contraddizione ⇒teorema dimostrato f b≤ consideriamo a′a f b b ′b b a′ ≥n b′ n applichiamo l’ipotesi induttiva ⇒contraddizione,[0],"[(0, 0.96084857)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,6,"Considerazioni sul pidgeonhole principle 
• il pidgeonhole principle mette in relazione la 
numerosità degli insiemi con le proprietà delle funzioni che hanno gli insiemi come domini o codomini
• in particolare se esiste una funzione biettiva 
f: A→B
– esiste una funzione totale ed iniettiva f: A →B 
– esiste una funzione totale ed iniettiva f-1: B→A 
– per il pidgeonhole principle non può essere |B| > |A| 
né |A| > |B|
7",considerazioni pidgeonhole principle • pidgeonhole principle mette relazione numerosità insiemi proprietà funzioni insiemi domini codomini • particolare esiste funzione biettiva f a→b – esiste funzione totale iniettiva f →b – esiste funzione totale iniettiva f b→a – pidgeonhole principle può essere b a né a b ,"[0, 8]","[(0, 0.41150913), (8, 0.55991143)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,7,"8Cardinalità di insiemi infiniti
• due insiemi sono equinumerosi se esiste una 
biiezione tra essi
• la relazione di equinumerosità è una relazione 
di equivalenza
• possiamo ora dare una definizione rigorosa di 
cardinalità di un insieme finito A:
|A|=0 se A= ∅
|A|=n se A è equinumeroso a {0, 1, …, n-1}",cardinalità insiemi infiniti • due insiemi equinumerosi esiste biiezione essi • relazione equinumerosità relazione equivalenza • possiamo ora dare definizione rigorosa cardinalità insieme finito a a a ∅ an equinumeroso … n ,"[1, 7]","[(1, 0.20809405), (7, 0.75378394)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,8,"9Numerabilità
• insiemi numerabili
– un insieme è numerabile se è equinumeroso a N
– un insieme ha cardinalità aleph zero (א0) se è
equinumeroso a N, cioè se è numerabile
• insiemi contabili
– un insieme è contabile se è finito o numerabile
– sottoinsiemi di insiemi contabili sono contabili",numerabilità • insiemi numerabili – insieme numerabile equinumeroso n – insieme cardinalità aleph zero א equinumeroso n cioè numerabile • insiemi contabili – insieme contabile finito numerabile – sottoinsiemi insiemi contabili contabili,[1],"[(1, 0.95713544)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,9,"10Numerabilità: א0+ k = א0
teorema : 
per ogni intero k, l’insieme Nkdegli interi 
maggiori o uguali a k è numerabile
dimostrazione : 
biiezione con N
N : 01234…
Nk:k+0 k+1 k+2 k+3 k+4 …",numerabilità א k א teorema ogni intero k l’insieme nkdegli interi maggiori uguali k numerabile dimostrazione biiezione n n … nkk k k k k …,[7],"[(7, 0.9249792)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,10,"11Numerabilità degli interi relativi
teorema : 
l’insieme Z degli interi relativi è numerabile
dimostrazione : 
biiezione con N
Z:01-12-23-34-4…
N : 012345678…",numerabilità interi relativi teorema l’insieme z interi relativi numerabile dimostrazione biiezione n z … n …,"[0, 1, 2, 3, 4]","[(0, 0.011112766), (1, 0.01111426), (2, 0.0111122215), (3, 0.011112106), (4, 0.011112294)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,11,"12Numerabilità dei numeri pari ( א0 + א0= א0)
teorema : 
l’insieme P dei numeri pari è numerabile
dimostrazione : 
biiezione con N
P:024681 0 1 2 1 4 1 6 …
N : 012345678…",numerabilità numeri pari א א א teorema l’insieme p numeri pari numerabile dimostrazione biiezione n p … n …,"[0, 1, 2, 3, 4]","[(0, 0.01111311), (1, 0.011114067), (2, 0.011112151), (3, 0.011112109), (4, 0.011112273)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,12,"13Numerabilità: א0×א0 = א0
teorema : 
l’insieme N2delle coppie di naturali è numerabile
dimostrazione : 
tecnica usata da Cantor per mostrare la 
numerabilità di Q
0    1    2    3    4
00    1    3    6    10
12    4    7    11
25    8    12 
39   13
414osservazione : 
per ogni n ∈N, se A è numerabile, 
anche Anè numerabile",numerabilità א×א א teorema l’insieme ndelle coppie naturali numerabile dimostrazione tecnica usata cantor mostrare numerabilità q osservazione ogni n ∈n numerabile anè numerabile,[7],"[(7, 0.9399913)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,13,"14Insiemi non numerabili
per dimostrare la non numerabilità di un insieme si 
usa la tecnica di diagonalizzazione di Cantor
teorema :  R non è numerabile
dimostrazione : 
1. dimostriamo che R è equinumeroso a (0,1)
2. dimostriamo che (0,1) non è numerabile",insiemi numerabili dimostrare numerabilità insieme usa tecnica diagonalizzazione cantor teorema r numerabile dimostrazione dimostriamo r equinumeroso dimostriamo numerabile,[7],"[(7, 0.9399852)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,14,"15Insiemi non numerabili
(0,1) e R sono equinumerosi:  una biiezione è data, per
esempio, dalla funzione y =
00.10.20.30.40.50.60.70.80.91
- 1 0 - 9- 8- 7- 6- 5- 4- 3- 2- 1 0 1 2 3 4 5 6 7 8 9 1 0(2x+1)1
y
x",insiemi numerabili r equinumerosi biiezione data esempio funzione y x y x,"[0, 1, 2, 3, 4]","[(0, 0.8874534), (1, 0.012506266), (2, 0.01250584), (3, 0.012503776), (4, 0.012504387)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,15,"16Insiemi non numerabili
• Supponiamo per assurdo che una enumerazione 
di (0,1) esista, denotiamo con Φil’iesimo 
elemento di (0,1)
• consideriamo r ∈(0,1) che ha come i-esima cifra 
della mantissa (i=1, 2, …) un valore diverso da 0, 
da 9, e dal valore della i-esima cifra di Φi",insiemi numerabili • supponiamo assurdo enumerazione esista denotiamo φil’iesimo elemento • consideriamo r ∈ esima cifra mantissa i … valore diverso valore esima cifra φi,[1],"[(1, 0.9526091)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,16,"17Insiemi non numerabili
r, detto elemento diagonale , non fa parte della 
enumerazione, in quanto differisce da ogni elemento della enumerazione in almeno una cifra, e ciò è
assurdocifre delle mantisse di Φ
i:
1234567…
Φ15104396…
Φ22410000…
Φ37985377…
Φ40046031…
r 6517 …………",insiemi numerabili r detto elemento diagonale fa parte enumerazione differisce ogni elemento enumerazione almeno cifra ciò assurdocifre mantisse φ i … φ… φ… φ… φ… r …………,[6],"[(6, 0.9470379)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,17,"Nota sulla scelta delle cifre di r
• le cifre dell’elemento diagonale rsono scelte in 
modo da essere diverse da 0 e da 9
– non si può generare la mantissa 0000… che non 
appartiene all’insieme
– non si possono generare numeri terminanti con 9 
periodico che corrispondono ad una seconda 
rappresentazione di un numero non-periodico
• 0.999… coincide con 1
• 0.123999… coincide con 0.124
18",nota scelta cifre r • cifre dell’elemento diagonale rsono scelte modo essere diverse – può generare mantissa … appartiene all’insieme – possono generare numeri terminanti periodico corrispondono seconda rappresentazione numero periodico • … coincide • … coincide ,"[5, 7]","[(5, 0.3920977), (7, 0.5758893)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,18,"19Insiemi non numerabili
teorema :  P(N) non è numerabile
dimostrazione :
supponiamo per assurdo che lo sia
sia P1, P2, …, Pi, … una sua enumerazione
a ciascun Piassociamo la sequenza
bi0, bi1, bi2, …, dove
bij=0 se j∉Pi
bij=1 se j∈Pi",insiemi numerabili teorema pn numerabile dimostrazione supponiamo assurdo p p … pi … enumerazione ciascun piassociamo sequenza bi bi bi … bij j∉pi bij j∈pi,"[0, 5, 7]","[(0, 0.6050542), (5, 0.27759105), (7, 0.08049449)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,19,"20Insiemi non numerabili
costruiamo ora l’insieme P(diagonale) con 
sequenza p0, p1, …, pk,… dove
pk= 1 - bkk
Pdifferisce da ogni Pi, in quanto
i∈P⇔i∉Pi
osservazione : la non numerabilità di P(N) vale 
anche per l’insieme delle parti di ogni insieme di 
cardinalità א0",insiemi numerabili costruiamo ora l’insieme pdiagonale sequenza p p … pk… pk bkk pdifferisce ogni pi i∈p⇔i∉pi osservazione numerabilità pn vale l’insieme parti ogni insieme cardinalità א,[5],"[(5, 0.9499716)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,20,"21Cardinalità transfinite
teorema : R è equinumeroso a P(N) ed è quindi 
continuo
dimostrazione : 
è sufficiente mostrare che la proprietà vale per i 
reali in (0,1), vista la biiezione tra R e (0,1)
uso della rappresentazione binaria della mantissa e 
del concetto di funzione caratteristica",cardinalità transfinite teorema r equinumeroso pn quindi continuo dimostrazione sufficiente mostrare proprietà vale reali vista biiezione r uso rappresentazione binaria mantissa concetto funzione caratteristica,[7],"[(7, 0.9549908)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,21,"22Cardinalità transfinite – notazione aleph
• se un insieme finito ha cardinalità n, il suo 
insieme delle parti ha cardinalità 2n
• analogamente, se un insieme infinito ha 
cardinalità א0denotiamo con 2א0la 
cardinalità del suo insieme delle parti
• gli insiemi con cardinalità 2א0sono detti 
continui
• Cantor ha dimostrato che esistono infiniti 
cardinali transfiniti ( א0, 2א0, 22א0, …)",cardinalità transfinite – notazione aleph • insieme finito cardinalità n insieme parti cardinalità n • analogamente insieme infinito cardinalità אdenotiamo אla cardinalità insieme parti • insiemi cardinalità אsono detti continui • cantor dimostrato esistono infiniti cardinali transfiniti א א א …,[6],"[(6, 0.9639785)]"
dataExtraction\data_test\rootfolder\universita\automata\025-cardinalita-transfinite-06.pdf,22,"Conseguenze della teoria
• vedremo come considerazioni relative alla cardinalità di 
insiemi infiniti daranno interessanti spunti sull’idea di 
calcolabilità
• per il momento ci limitiamo alla seguente riflessione
– un linguaggio è un sottoinsieme di Σ*
• qual è la cardinalità di Σ*?
• qual è la cardinalità di P( Σ*)?
• quanti linguaggi esistono?
– un programma in un linguaggio di programmazione qualsiasi 
può essere considerato come una sequenza finita di caratteri
• quanti sono i possibili progr ammi che possiamo scrivere?
23",conseguenze teoria • vedremo considerazioni relative cardinalità insiemi infiniti daranno interessanti spunti sull’idea calcolabilità • momento limitiamo seguente riflessione – linguaggio sottoinsieme σ • qual cardinalità σ • qual cardinalità p σ • linguaggi esistono – programma linguaggio programmazione qualsiasi può essere considerato sequenza finita caratteri • possibili progr ammi possiamo scrivere ,[3],"[(3, 0.97426707)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,0,"Basi di datiIntroduzione
01/10/2020Basi di dati I ---12",basi datiintroduzione basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.7749401), (1, 0.025006542), (2, 0.025007349), (3, 0.025008827), (4, 0.025003623)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,1,"Dati•Da Repubblica di sabato e domenica
01/10/2020Basi di dati I ---13",dati•da repubblica sabato domenica basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.016678), (1, 0.016677195), (2, 0.8499046), (3, 0.016677747), (4, 0.01667629)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,2,"01/10/2020Basi di dati I ---14
",basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.69991416), (1, 0.033342604), (2, 0.03334371), (3, 0.033344902), (4, 0.033338442)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,3,"01/10/2020Basi di dati I ---15
",basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.69991755), (1, 0.03334259), (2, 0.03334369), (3, 0.033344917), (4, 0.033338435)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,4,"01/10/2020Basi di dati I ---16
",basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.03334852), (1, 0.033343095), (2, 0.033344243), (3, 0.033345405), (4, 0.033338707)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,5,"01/10/2020Basi di dati I ---17Base di dati•Insieme organizzato di dati utilizzati per il supporto allo svolgimento di attività (di un ente, azienda, ufficio, persona)–Dietro a ciascuno dei ritagli che abbiamo visto ci può essere una base di dati•quotazioni di borsa•pensioni•graduatorie per le supplenze•epidemia•risultati sportivi•bollettino meteo",basi dati base dati•insieme organizzato dati utilizzati supporto svolgimento attività di ente azienda ufficio persona–dietro ciascuno ritagli visto può essere base dati•quotazioni borsa•pensioni•graduatorie supplenze•epidemia•risultati sportivi•bollettino meteo,"[2, 4]","[(2, 0.43828315), (4, 0.5195699)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,6,"01/10/2020Basi di dati I ---18Base di dati•Insieme organizzato di dati utilizzati per il supporto allo svolgimento di attività (di un ente, azienda, ufficio, persona)•Forse non lo sappiamo ma quasi tutte le nostre attività coinvolgono una base di dati–proviamo a cercarne qualcuna•Carriere degli studenti•Sistema bibliotecario•Campagna pubblicitaria•Lista della spesa (e-commerce)•Dati relativi al traffico•Orari bus, ferrovie, aerei•Bilancio dello stato, dati economico•Dati bancari•Traffico telefonico•Social network (Facebooke simili)",basi dati base dati•insieme organizzato dati utilizzati supporto svolgimento attività di ente azienda ufficio persona•forse sappiamo quasi tutte attività coinvolgono base dati–proviamo cercarne qualcuna•carriere studenti•sistema bibliotecario•campagna pubblicitaria•lista spesa e commerce•dati relativi traffico•orari bus ferrovie aerei•bilancio stato dati economico•dati bancari•traffico telefonico•social network facebooke simili,[0],"[(0, 0.96783495)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,7,01/10/2020Basi di dati I ---110Punti di vista•Metodologico•Tecnologico,basi dati punti vista•metodologico•tecnologico,"[0, 1, 2, 3, 4]","[(0, 0.025009988), (1, 0.025008203), (2, 0.025008764), (3, 0.7749262), (4, 0.025006065)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,8,"01/10/2020Basi di dati I ---111Che cos'è l'informatica?•Scienza del trattamento razionale, specialmente per mezzo di macchine automatiche, dell’informazione, considerata come supporto alla conoscenza umana e alla comunicazione(Accad. di Francia) Due anime:–metodologica–tecnologica",basi dati che cosè linformatica•scienza trattamento razionale specialmente mezzo macchine automatiche dell’informazione considerata supporto conoscenza umana comunicazioneaccad francia due anime–metodologica–tecnologica,[8],"[(8, 0.9437186)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,9,01/10/2020Basi di dati I ---112Contenuti•modelli per l'organizzazione dei dati •linguaggi per l'utilizzo dei dati•sistemi per la gestione dei dati•metodologie di progettazione di basi di datiIl corso,basi dati contenuti•modelli lorganizzazione dati •linguaggi lutilizzo dati•sistemi gestione dati•metodologie progettazione basi datiil corso,[0],"[(0, 0.9181318)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,10,"01/10/2020Basi di dati I ---119Informazioni e dati •I dati, nei sistemi informatici (e non solo), servono a rappresentare le informazioni, rappresentandole in modo essenziale, spartano",basi dati informazioni dati •i dati sistemi informatici e solo servono rappresentare informazioni rappresentandole modo essenziale spartano,[9],"[(9, 0.9399744)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,11,"01/10/2020Basi di dati I ---120Gestione delle informazioni •In tante forme–idee confuse –a parole –disegni,grafici,schemi–numeriecodici•esuvari""supporti""–mente umana, carta, dispositivi elettronici",basi dati gestione informazioni •in tante forme–idee confuse –a parole –disegnigraficischemi–numeriecodici•esuvarisupporti–mente umana carta dispositivi elettronici,[3],"[(3, 0.92497146)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,12,"Un esempio•Gli Inca usavano un supporto e un sistema di codifica molto particolari: il quipu http://it.wikipedia.org/wiki/Quipu
01/10/2020Basi di dati I ---121
",esempio•gli inca usavano supporto sistema codifica molto particolari quipu httpitwikipediaorgwikiquipu basi dati ,[0],"[(0, 0.918132)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,13,"Quipu•insieme di cordicelle annodate, distanziate in modo sistematico tra loro e legate a una corda più grossa e corta che le sorregge.•I quipu erano concepiti per rimanere inalterati. Erano infatti bagnati, fatti seccare e incollati con resine particolari.•I quipu, scoperti in antichi insediamenti in Perù, servivano per i calcoli matematici. I nodi delle corde sono di diversi colori, infatti rappresentavano dei numeri e dalla loro reciproca posizione se ne potevano ricavare le unità, le decine, le centinaia e le migliaia.•Si crede che i quipu venissero utilizzati per calcoli astronomici, fondamentali per la cultura inca, oppure per formule magiche ma anche per descrivere sommariamente avvenimenti storici ed economici.•Al momento attuale i quipu non sono stati ancora pienamente decifrati ed infatti esiste una grande varietà di teorie sul tipo di informazioni che essi in realtà veicolano.•Gli usi principali dei quipu finora conosciuti sono: conteggi per ilcenso, notazione delletasse, conteggio degli articoli comprati o venduti e dati numerici di base. 01/10/2020Basi di dati I ---122",quipu•insieme cordicelle annodate distanziate modo sistematico legate corda grossa corta sorregge•i quipu concepiti rimanere inalterati infatti bagnati fatti seccare incollati resine particolari•i quipu scoperti antichi insediamenti perù servivano calcoli matematici nodi corde diversi colori infatti rappresentavano numeri reciproca posizione potevano ricavare unità decine centinaia migliaia•si crede quipu venissero utilizzati calcoli astronomici fondamentali cultura inca oppure formule magiche descrivere sommariamente avvenimenti storici economici•al momento attuale quipu stati ancora pienamente decifrati infatti esiste grande varietà teorie tipo informazioni essi realtà veicolano•gli usi principali quipu finora conosciuti sono conteggi ilcenso notazione delletasse conteggio articoli comprati venduti dati numerici base basi dati ,"[3, 8]","[(3, 0.7591792), (8, 0.23180534)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,14,"01/10/2020Basi di dati I ---123Informazioni e dati (definizioni dal Vocabolario della lingua italiana 1987)informazione: notizia, dato o elemento che consente di avere conoscenza più o meno esatta di fatti, situazioni, modi di essere. dato: ciò che è immediatamente presente alla conoscenza, prima di ogni elaborazione; (in informatica) elementi di informazione costituiti da simboli che debbono essere elaborati",basi dati informazioni dati definizioni vocabolario lingua italiana informazione notizia dato elemento consente avere conoscenza meno esatta fatti situazioni modi essere dato ciò immediatamente presente conoscenza prima ogni elaborazione in informatica elementi informazione costituiti simboli debbono essere elaborati,[1],"[(1, 0.9763045)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,15,"Interpretazione dei dati•I dati debbono spesso essere intrepretati•Talvolta senza interpretazione non significano niente (e non servono a niente)
01/10/2020Basi di dati I ---124",interpretazione dati•i dati debbono spesso essere intrepretati•talvolta senza interpretazione significano niente e servono niente basi dati ,[7],"[(7, 0.9356876)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,16,"01/10/202025Interpretazione dei dati
Basi di dati I ---1
Torsdag: giovedì",interpretazione dati basi dati torsdag giovedì,"[0, 1, 2, 3, 4]","[(0, 0.016674133), (1, 0.849935), (2, 0.01667324), (3, 0.016673598), (4, 0.016671924)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,17,"Il mio orologio
01/10/202027
Basi di dati I ---1",orologio basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.025011662), (1, 0.025009936), (2, 0.025010468), (3, 0.025011009), (4, 0.025007894)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,18,"Quando arrivo in ufficio, spesso mi dice …Pedalata fantastica! ma…
01/10/202028
Basi di dati I ---1",quando arrivo ufficio spesso dice …pedalata fantastica ma… basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.011116383), (1, 0.011116695), (2, 0.011116617), (3, 0.011116689), (4, 0.011115592)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,19,"01/10/2020Basi di dati I ---129Gestione delle informazioni•I dati sono spesso il risultato di forme di organizzazione e codifica delle informazioni•Ad esempio, nei servizi anagrafici e nel riferimento a persone–descrizioni discorsive –nome e cognome–estremianagrafici–codicefiscale",basi dati gestione informazioni•i dati spesso risultato forme organizzazione codifica informazioni•ad esempio servizi anagrafici riferimento persone–descrizioni discorsive –nome cognome–estremianagrafici–codicefiscale,[8],"[(8, 0.9399686)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,20,"01/10/2020Basi di dati I ---131Base di dati (accezionegenerica,metodologica)•Insieme organizzato di dati utilizzati per il supporto allo svolgimento delle attività di un ente (azienda, ufficio, persona)(accezione specifica, metodologicae tecnologica) •Insieme organizzato di dati [...] gestito da un DBMS ",basi dati base dati accezionegenericametodologica•insieme organizzato dati utilizzati supporto svolgimento attività ente azienda ufficio personaaccezione specifica metodologicae tecnologica •insieme organizzato dati gestito dbms,[2],"[(2, 0.9549708)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,21,01/10/2020Basi di dati I ---134Sistema di gestione di basi di datiDataBase Management System (DBMS)•Sistemache gestisce collezioni di dati: –grandi–persistenti–condivisegarantendo –privatezza–affidabilità–efficienza–efficacia,basi dati sistema gestione basi datidatabase management system dbms•sistemache gestisce collezioni dati –grandi–persistenti–condivisegarantendo –privatezza–affidabilità–efficienza–efficacia,[8],"[(8, 0.92496455)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,22,01/10/2020Basi di dati I ---135DBMS•Prodotti software (complessi) disponibili sul mercato; esempi:–DB2–Oracle–SQLServer–MySQL–PostgreSQL,basi dati dbms•prodotti software complessi disponibili mercato esempi–db–oracle–sqlserver–mysql–postgresql,"[0, 1, 2, 3, 4]","[(0, 0.87135196), (1, 0.014293492), (2, 0.014295656), (3, 0.014292985), (4, 0.0142926555)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,23,"01/10/2020Basi di dati I ---139Le basi di dati sono ... condivise•Ad esempio, all'università, le informazioni sui professori interessano–all'ufficio del personale–per l'orario delle lezioni–per la verbalizzazione degli esami  ",basi dati le basi dati condivise•ad esempio alluniversità informazioni professori interessano–allufficio personale–per lorario lezioni–per verbalizzazione esami,"[1, 2]","[(1, 0.22017385), (2, 0.71308106)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.1-Intro.pdf,24,"01/10/2020Basi di dati I ---187Personaggi e interpreti •progettistie realizzatori di DBMS•progettisti della base di datie amministratori della base di dati (DBA) •progettistie programmatori di applicazioni•utenti–utenti finali(terminalisti): eseguono programmi, applicazioni predefinite–utenti casuali: eseguono operazioni non previste a priori, usando linguaggi interattivi ",basi dati personaggi interpreti •progettistie realizzatori dbms•progettisti base datie amministratori base dati dba •progettistie programmatori applicazioni•utenti–utenti finaliterminalisti eseguono programmi applicazioni predefinite–utenti casuali eseguono operazioni previste priori usando linguaggi interattivi,[1],"[(1, 0.96244603)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,0,Basi di dati2IL MODELLO RELAZIONALE05/10/2020Basi di dati I ---22,basi datiil modello relazionalebasi dati ,"[0, 1, 2, 3, 4]","[(0, 0.016676998), (1, 0.01667559), (2, 0.8499198), (3, 0.01667535), (4, 0.016674995)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,1,"Organizzazione dei dati•Come sono organizzati i dati in una base di dati?
05/10/2020Basi di dati I ---24",organizzazione dati•come organizzati dati base dati basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.0125043895), (1, 0.012503807), (2, 0.012504278), (3, 0.012504034), (4, 0.012502841)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,2,"05/10/2020Basi di dati I ---25Modello dei dati•Insieme di costrutti secondo cui i dati di interesse sono organizzati e utilizzati•Esempio: •il modello relazionaleprevede il costrutto relazione(o tabella), che permette di definire insiemi di record (righe) omogenei ",basi dati modello dati•insieme costrutti secondo dati interesse organizzati utilizzati•esempio •il modello relazionaleprevede costrutto relazioneo tabella permette definire insiemi record righe omogenei,[2],"[(2, 0.9526013)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,3,"05/10/2020Basi di dati I ---26I modelli logici dei dati •“Tradizionali“•... relazionale •Altri più recenti: •a oggetti, XML, ""NoSQL"" ",basi dati i modelli logici dati •“tradizionali“• relazionale •altri recenti •a oggetti xml nosql,[3],"[(3, 0.9181565)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,4,"05/10/2020Basi di dati I ---28MatricolaCognomeNomeData di nascita6554RossiMario05/12/19788765NeriPaolo03/11/19763456RossiMaria01/02/19789283VerdiLuisa12/11/1979studenti
CodiceTitoloDocente01AnalisiMario02ChimicaBruni04ChimicaVerdicorsiStudenteVotoCorso345630043456240292832801esami65542601",basi dati matricolacognomenomedata nascitarossimarioneripaolorossimariaverdiluisastudenti codicetitolodocenteanalisimariochimicabrunichimicaverdicorsistudentevotocorsoesami,"[0, 1, 2, 3, 4]","[(0, 0.03334798), (1, 0.033343565), (2, 0.03334477), (3, 0.6999074), (4, 0.033338968)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,5,"05/10/2020Basi di dati I ---210Modello ""relazionale""•relazione matematica ... (alla lavagna)",basi dati modello relazionale•relazione matematica alla lavagna,"[0, 1, 2, 3, 4]","[(0, 0.014294227), (1, 0.014292562), (2, 0.8713631), (3, 0.014292771), (4, 0.014292094)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,6,05/10/2020Basi di dati I ---211,basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.033347085), (1, 0.03334336), (2, 0.03334454), (3, 0.0333458), (4, 0.033338852)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,7,05/10/2020Basi di dati I ---212,basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.6999175), (1, 0.03334259), (2, 0.03334369), (3, 0.033344954), (4, 0.033338435)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,8,"Due osservazioni importanti•Struttura non posizionale•Modello basato su valori
05/10/2020Basi di dati I ---216",due osservazioni importanti•struttura posizionale•modello basato valori basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.014298684), (1, 0.014299372), (2, 0.014297233), (3, 0.014298838), (4, 0.319509)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,9,"05/10/2020Basi di dati I ---217Struttura ""posizionale"" o ""non posizionale""32001021ManchesterArsenalManchesterChelseaArsenalLiverpoolChelseaLiverpoolPartiteÍstring ×string×int×int",basi dati struttura posizionale non posizionalemanchesterarsenalmanchesterchelseaarsenalliverpoolchelsealiverpoolpartiteístring ×string×int×int,"[0, 1, 2, 3, 4]","[(0, 0.016672833), (1, 0.0166716), (2, 0.016671756), (3, 0.8499494), (4, 0.016671557)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,10,05/10/2020Basi di dati I ---218Struttura non posizionale•A ciascun dominio si associa un nome: attributo(o colonna)32001021ManchesterArsenalManchesterChelseaArsenalLiverpoolChelseaLiverpoolRetiCasaRetiFuoriCasaFuori,basi dati struttura posizionale•a ciascun dominio associa nome attributoo colonnamanchesterarsenalmanchesterchelseaarsenalliverpoolchelsealiverpoolreticasaretifuoricasafuori,"[0, 1, 2, 3, 4]","[(0, 0.011115644), (1, 0.011114616), (2, 0.011114967), (3, 0.89996123), (4, 0.011114459)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,11,05/10/2020Basi di dati I ---221Il modello è basato su valori•I riferimenti fra dati in relazioni diverse sono rappresentati per mezzo di valori dei domini che compaiono nelle ennuple,basi dati il modello basato valori•i riferimenti fra dati relazioni diverse rappresentati mezzo valori domini compaiono ennuple,"[0, 5]","[(0, 0.4991923), (5, 0.4537053)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,12,"05/10/2020Basi di dati I ---222MatricolaCognomeNomeData di nascita6554RossiMario05/12/19788765NeriPaolo03/11/19763456RossiMaria01/02/19789283VerdiLuisa12/11/1979studenti
CodiceTitoloDocente01AnalisiMario02ChimicaBruni04ChimicaVerdicorsiStudenteVotoCorso345630043456240292832801esami65542601",basi dati matricolacognomenomedata nascitarossimarioneripaolorossimariaverdiluisastudenti codicetitolodocenteanalisimariochimicabrunichimicaverdicorsistudentevotocorsoesami,"[0, 1, 2, 3, 4]","[(0, 0.033347353), (1, 0.03334357), (2, 0.033344775), (3, 0.6999071), (4, 0.03333897)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,13,"05/10/2020Basi di dati I ---225MatricolaCognomeNomeData di nascita6554RossiMario05/12/19788765NeriPaolo03/11/19763456RossiMaria01/02/19789283VerdiLuisa12/11/1979studenti
CodiceTitoloDocente01AnalisiMario02ChimicaBruni04ChimicaVerdicorsiStudenteVotoCorso302428esami26",basi dati matricolacognomenomedata nascitarossimarioneripaolorossimariaverdiluisastudenti codicetitolodocenteanalisimariochimicabrunichimicaverdicorsistudentevotocorsoesami,"[0, 1, 2, 3, 4]","[(0, 0.6999175), (1, 0.03334259), (2, 0.03334369), (3, 0.033344973), (4, 0.033338435)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,14,05/10/2020Basi di dati I ---227OrarioInsegnamentoDocenteAulaOraAnalisi matem. ILuigi NeriN18:00Basi di datiPiero RossiN210:00ChimicaNicola MoriN110:00Fisica IMario BruniN112:00Fisica IIMario BruniN310:00Sistemi inform.Piero RossiN38:00Basi di dati: schema e istanza,basi dati orarioinsegnamentodocenteaulaoraanalisi matem iluigi nerinbasi datipiero rossinchimicanicola morinfisica imario bruninfisica iimario bruninsistemi informpiero rossinbasi dati schema istanza,[7],"[(7, 0.94703746)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,15,05/10/2020Basi di dati I ---228Lo schemadella relazioneOrarioInsegnamentoDocenteAulaOraBasi di dati: schema e istanza,basi dati lo schemadella relazioneorarioinsegnamentodocenteaulaorabasi dati schema istanza,"[0, 1, 2, 3, 4]","[(0, 0.6698383), (1, 0.012506841), (2, 0.01250683), (3, 0.012507749), (4, 0.012506489)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,16,05/10/2020Basi di dati I ---229L'istanzadella relazioneLo schemadella base di datiOrarioInsegnamentoDocenteAulaOraAnalisi matem. ILuigi NeriN18:00Basi di datiPiero RossiN210:00ChimicaNicola MoriN110:00Fisica IMario BruniN112:00Fisica IIMario BruniN310:00Sistemi inform.Piero RossiN38:00Basi di dati: schema e istanza,basi dati listanzadella relazionelo schemadella base datiorarioinsegnamentodocenteaulaoraanalisi matem iluigi nerinbasi datipiero rossinchimicanicola morinfisica imario bruninfisica iimario bruninsistemi informpiero rossinbasi dati schema istanza,"[5, 7]","[(5, 0.37226835), (7, 0.5896098)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,17,05/10/2020Basi di dati I ---230Definizioni e notazioni (alla lavagna)•Schema di relazione•Ennupla su uno schema di relazione •Valore di una ennupla su un attributo•Relazione (“istanza di relazione“)•Schema di base di dati•(Istanza di) base di dati,basi dati definizioni notazioni alla lavagna•schema relazione•ennupla schema relazione •valore ennupla attributo•relazione “istanza relazione“•schema base dati•istanza di base dati,"[7, 8]","[(7, 0.7174535), (8, 0.22098657)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,18,"05/10/2020Basi di dati I ---231
",basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.69991696), (1, 0.033342592), (2, 0.033343695), (3, 0.033344883), (4, 0.033338435)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,19,"05/10/2020Basi di dati I ---232
",basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.69991726), (1, 0.033342592), (2, 0.033343695), (3, 0.033344883), (4, 0.033338435)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,20,•Usiamot[A]per indiacreilvaloredella ennuplat sull'attributoA05/10/2020Basi di dati I ---235,•usiamotaper indiacreilvaloredella ennuplat sullattributoabasi dati ,"[0, 1, 2, 3, 4]","[(0, 0.03335632), (1, 0.033353783), (2, 0.6998177), (3, 0.03335475), (4, 0.033351168)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,21,"Altra osservazione•La stuttura è rigida e non sempre corrisponde ai dati:•""informazione incompleta""
05/10/2020Basi di dati I ---238",altra osservazione•la stuttura rigida sempre corrisponde dati•informazione incompleta basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.011120285), (1, 0.011117953), (2, 0.8999341), (3, 0.011118527), (4, 0.011117902)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,22,05/10/2020Basi di dati I ---239Informazione incompletaFranklinRooseveltDelanoNomeCognomeSecondoNomeWinstonChurchillCharlesDe GaulleJosipStalin,basi dati informazione incompletafranklinrooseveltdelanonomecognomesecondonomewinstonchurchillcharlesde gaullejosipstalin,"[0, 1, 2, 3, 4]","[(0, 0.025012476), (1, 0.7749207), (2, 0.025009502), (3, 0.025009455), (4, 0.025005996)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,23,05/10/2020Basi di dati I ---240Informazione incompletaMario34RomaNomeEtàUfficioLucaMilanoPiero42Firenze,basi dati informazione incompletamarioromanomeetàufficiolucamilanopierofirenze,"[0, 1, 2, 3, 4]","[(0, 0.77492565), (1, 0.025011677), (2, 0.025008924), (3, 0.025008313), (4, 0.025006302)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,24,"05/10/2020Basi di dati I ---241Informazione incompleta: soluzioni?•Potremmo pensare:•stringa nulla•""0""•""99""•Si può fare?•Meglio di no!!",basi dati informazione incompleta soluzioni•potremmo pensare•stringa nulla•••si può fare•meglio no,"[0, 1, 2, 3, 4]","[(0, 0.8499523), (1, 0.01667277), (2, 0.01667309), (3, 0.01667192), (4, 0.016671278)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,25,"05/10/2020Basi di dati I ---242Informazione incompleta nel modello relazionale •Tecnicasemplice maefficace:•valorenullo(unvalorediversodaivaloridel dominio, indicatoquiconNULL)•t[A], per ogniattributoA,  è•unvaloredel dominiodom(A)  •oppureilvalorenulloNULL•Commenti•tecnicasemplice•attenzioneai troppivalorinulli",basi dati informazione incompleta modello relazionale •tecnicasemplice maefficace•valorenullounvalorediversodaivaloridel dominio indicatoquiconnull•ta ogniattributoa è•unvaloredel dominiodoma •oppureilvalorenullonull•commenti•tecnicasemplice•attenzioneai troppivalorinulli,"[0, 1, 2, 3, 4]","[(0, 0.90994453), (1, 0.0100068), (2, 0.010007039), (3, 0.010006948), (4, 0.010005589)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,26,"05/10/2020Basi di dati I ---245MatricolaCognomeNomeData di nascita6554RossiMario05/12/1978NULLRossiMaria01/02/19789283VerdiLuisa12/11/1979studenti
CodiceTitoloDocente01AnalisiMario02NULLNULL04ChimicaVerdicorsiStudenteVotoCorsoNULL30NULLNULL240292832801esamiTroppi valori nulli",basi dati matricolacognomenomedata nascitarossimarionullrossimariaverdiluisastudenti codicetitolodocenteanalisimarionullnullchimicaverdicorsistudentevotocorsonullnullnullesamitroppi valori nulli,"[0, 1, 2, 3, 4]","[(0, 0.020005306), (1, 0.020006204), (2, 0.020004185), (3, 0.8199568), (4, 0.02000299)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,27,"Un'anticipazione parziale•Riassumendo, quanto visto finora:•La definizione dello schema di una relazione in SQL (rivedremo più avanti)
05/10/2020Basi di dati I ---246
",unanticipazione parziale•riassumendo visto finora•la definizione schema relazione sql rivedremo avanti basi dati ,[6],"[(6, 0.91814065)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,28,"Seconda parte•Abbiamo visto la struttura•Per modellare bene non basta
05/10/2020Basi di dati I ---247",seconda parte•abbiamo visto struttura•per modellare bene basta basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.01250666), (1, 0.408365), (2, 0.012505524), (3, 0.01250568), (4, 0.012504889)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,29,"05/10/2020Basi di dati I ---248Vincoli di integrità•Non sempre le nostre basi di dati sono ""corrette"" ..",basi dati vincoli integrità•non sempre basi dati corrette ,"[0, 1, 2, 3, 4]","[(0, 0.01250449), (1, 0.012503598), (2, 0.012504795), (3, 0.8874668), (4, 0.012502573)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 1.pdf,30,"05/10/2020Basi di dati I ---249Una base di dati ""scorretta""StudenteVotoLodeCorso320127654527654530e lode0278764327e lode037394302404EsamiMatricola276545787643787643CognomeRossiNeriBianchiNomeMarioPieroLucaStudenti78764378764327e lode",basi dati una base dati scorrettastudentevotolodecorsoe lodee lodeesamimatricolacognomerossineribianchinomemariopierolucastudentie lode,"[0, 1, 2, 3, 4]","[(0, 0.88746727), (1, 0.012503932), (2, 0.012503619), (3, 0.012503379), (4, 0.0125028165)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,0,"Seconda parte•Abbiamo visto la struttura•Per modellare bene non basta
08/10/2020Basi di dati I ---247",seconda parte•abbiamo visto struttura•per modellare bene basta basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.01250666), (1, 0.40876803), (2, 0.012505526), (3, 0.012505682), (4, 0.0125048915)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,1,"08/10/2020Basi di dati I ---248Vincoli di integrità•Non sempre le nostre basi di dati sono ""corrette"" ..",basi dati vincoli integrità•non sempre basi dati corrette ,"[0, 1, 2, 3, 4]","[(0, 0.012504486), (1, 0.012503599), (2, 0.012504839), (3, 0.8874667), (4, 0.012502574)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,2,"08/10/2020Basi di dati I ---249Una base di dati ""scorretta""StudenteVotoLodeCorso320127654527654530e lode0278764327e lode037394302404EsamiMatricola276545787643787643CognomeRossiNeriBianchiNomeMarioPieroLucaStudenti78764378764327e lode",basi dati una base dati scorrettastudentevotolodecorsoe lodee lodeesamimatricolacognomerossineribianchinomemariopierolucastudentie lode,"[0, 1, 2, 3, 4]","[(0, 0.8874656), (1, 0.012503934), (2, 0.012503625), (3, 0.01250338), (4, 0.012502817)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,3,08/10/2020Basi di dati I ---250Vincolo di integrità•Proprietàchedeveesseresoddisfattadalleistanzecherappresentanoinformazionicorretteper l’applicazione•Unvincoloèunafunzionebooleana(unpredicato):•associaad ogniistanzailvaloreveroo falso,basi dati vincolo integrità•proprietàchedeveesseresoddisfattadalleistanzecherappresentanoinformazionicorretteper l’applicazione•unvincoloèunafunzionebooleanaunpredicato•associaad ogniistanzailvaloreveroo falso,"[0, 1, 2, 3, 4]","[(0, 0.020007601), (1, 0.81994194), (2, 0.020006327), (3, 0.02000992), (4, 0.02000429)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,4,"08/10/2020Basi di dati I ---252Vincoli di integrità, nota•solo alcunitipidi vincolisono""supportati"" daiDBMS:•...ilDBMS ne impediscela violazione,•per i vincoli""non supportati"", la responsabilitàdella verificaèdell'utenteo del programmatore•Vediamoi vincolisuunDBMS (oggilomostroio, prossimamentedovreteusarlo)",basi dati vincoli integrità nota•solo alcunitipidi vincolisonosupportati daidbms•ildbms impediscela violazione•per vincolinon supportati responsabilitàdella verificaèdellutenteo programmatore•vediamoi vincolisuundbms oggilomostroio prossimamentedovreteusarlo,"[0, 1, 2, 3, 4]","[(0, 0.010011949), (1, 0.010011835), (2, 0.010012009), (3, 0.1480019), (4, 0.7719065)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,5,"Verifica dei vincoli•Vediamo fra poco con un esempio sul tipo più semplice di vincoli
08/10/2020Basi di dati I ---253",verifica vincoli•vediamo fra poco esempio tipo semplice vincoli basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.33703667), (1, 0.010005404), (2, 0.58291876), (3, 0.010007592), (4, 0.010004296)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,6,08/10/2020Basi di dati I ---254StudenteVotoLodeCorso320127654527654530e lode0278764327e lode037394302404EsamiMatricola276545787643787643CognomeRossiNeriBianchiNomeMarioPieroLucaStudenti78764378764327e lode,basi dati studentevotolodecorsoe lodee lodeesamimatricolacognomerossineribianchinomemariopierolucastudentie lode,"[0, 1, 2, 3, 4]","[(0, 0.8199509), (1, 0.020005329), (2, 0.02000706), (3, 0.020005945), (4, 0.02000421)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,7,08/10/2020Basi di dati I ---255Tipi di vincoli•vincoliintrarelazionali•vincolisuvalori(o di dominio) •vincolidi ennupla•Vincolidi chiave•vincoliinterrelazionali,basi dati tipi vincoli•vincoliintrarelazionali•vincolisuvalorio dominio •vincolidi ennupla•vincolidi chiave•vincoliinterrelazionali,"[0, 1, 2, 3, 4]","[(0, 0.020011287), (1, 0.02000675), (2, 0.8199207), (3, 0.020009855), (4, 0.020005142)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,8,"Vincolo di dominio•Pone condizioni sui valori ammissibili di un singolo attributo, ad esempio•il voto ha come tipo ""intero"" •ma deve essere compreso fra 18 e 30 (un sottoinsieme del dominio)
08/10/2020Basi di dati I ---256",vincolo dominio•pone condizioni valori ammissibili singolo attributo esempio•il voto tipo intero •ma deve essere compreso fra un sottoinsieme dominio basi dati ,[0],"[(0, 0.95260644)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,9,"08/10/2020Basi di dati I ---257Vincolodi dominio, in concreto•Unapossibilesintassi: •combinazionebooleana(AND, OR eNOT)•di condizionisemplicicheconfrontanounattributoconunacostante(Voto³18) AND (Voto£30)",basi dati vincolodi dominio concreto•unapossibilesintassi •combinazionebooleanaand or enot•di condizionisemplicicheconfrontanounattributoconunacostantevoto and voto£,"[0, 1, 2, 3, 4]","[(0, 0.014294283), (1, 0.014290755), (2, 0.87137073), (3, 0.014292191), (4, 0.014291693)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,10,"Verifica dei vincoli•Due prospettive•prima i vincoli, poi i dati•definiamo lo schema, con i vincoli•modifichiamo i dati (inserimenti, eliminazioni, …), il sistema controlla i vincoli•se un vincolo è violato, la modifica viene rifiutata(vediamosulsistema PostgresSQL, èimportante il concetto non i dettagli del linguaggio)08/10/2020Basi di dati I ---258",verifica vincoli•due prospettive•prima vincoli poi dati•definiamo schema vincoli•modifichiamo dati inserimenti eliminazioni … sistema controlla vincoli•se vincolo violato modifica viene rifiutatavediamosulsistema postgressql èimportante concetto dettagli linguaggiobasi dati ,[3],"[(3, 0.95254797)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,11,"08/10/2020Basi di dati I ---260
",basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.69991624), (1, 0.033342596), (2, 0.033344135), (3, 0.033344973), (4, 0.03333844)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,12,"08/10/2020Basi di dati I ---261
",basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.69991744), (1, 0.03334261), (2, 0.033343695), (3, 0.033344988), (4, 0.033338435)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,13,"Verifica dei vincoli•Due prospettive•prima i vincoli, poi i dati•definiamo lo schema, con i vincoli•modifichiamo i dati (inserimenti, eliminazioni, …), il sistema controlla i vincoli•se un vincolo è violato, la modifica viene rifiutata
08/10/2020Basi di dati I ---262",verifica vincoli•due prospettive•prima vincoli poi dati•definiamo schema vincoli•modifichiamo dati inserimenti eliminazioni … sistema controlla vincoli•se vincolo violato modifica viene rifiutata basi dati ,[3],"[(3, 0.9470472)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,14,"Verifica dei vincoli•Due prospettive•prima i vincoli, poi i dati•definiamo lo schema, con i vincoli•modifichiamo i dati (inserimenti, eliminazioni, …), il sistema controlla i vincoli•se un vincolo è violato, la modifica viene rifiutata•prima i dati, poi i vincoli•su una base di dati esistente•aggiungiamo un vincolo, il sistema controlla il soddisfacimento•se è violato, non permette di aggiungerlo08/10/2020Basi di dati I ---263",verifica vincoli•due prospettive•prima vincoli poi dati•definiamo schema vincoli•modifichiamo dati inserimenti eliminazioni … sistema controlla vincoli•se vincolo violato modifica viene rifiutata•prima dati poi vincoli•su base dati esistente•aggiungiamo vincolo sistema controlla soddisfacimento•se violato permette aggiungerlobasi dati ,[3],"[(3, 0.96398777)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,15,08/10/2020Basi di dati I ---265,basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.03334708), (1, 0.03334336), (2, 0.03334454), (3, 0.033345796), (4, 0.033338852)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,16,"08/10/2020Basi di dati I ---266
",basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.6999171), (1, 0.033342592), (2, 0.033343695), (3, 0.033345386), (4, 0.033338435)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,17,"08/10/2020Basi di dati I ---267
",basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.6999175), (1, 0.03334259), (2, 0.03334369), (3, 0.03334488), (4, 0.033338435)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,18,"08/10/2020Basi di dati I ---268Vincolo di ennupla •Esprime condizioni sui valori di ciascuna ennupla, indipendentemente dalle altre ennuple•Il vincolo di dominio è un caso particolare ",basi dati vincolo ennupla •esprime condizioni valori ciascuna ennupla indipendentemente altre ennuple•il vincolo dominio caso particolare,[3],"[(3, 0.9356601)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,19,"08/10/2020Basi di dati I ---269Sintassi ed esempi•La sintassi: comeilvincolodi dominio, main generalesupiù attributi•combinazionebooleana•di condizionisemplicicheconfrontanounattributoconunacostanteNOT ((Voto<> 30) AND (Lode = ""elode""))",basi dati sintassi esempi•la sintassi comeilvincolodi dominio main generalesupiù attributi•combinazionebooleana•di condizionisemplicicheconfrontanounattributoconunacostantenot voto and lode elode,[0],"[(0, 0.9249661)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,20,"08/10/2020Basi di dati I ---271Vincoli di ennupla, altro esempioImpiegatoRossiNeriBruniStipendiLordo55.00045.00047.000Netto42.50035.00036.000Ritenute12.50010.00011.000Ritenute>= 0 AND (Lordo= (Ritenute+ Netto))",basi dati vincoli ennupla altro esempioimpiegatorossineribrunistipendilordonettoritenuteritenute and lordo ritenute netto,"[0, 1, 2, 3, 4]","[(0, 0.0100058615), (1, 0.16205855), (2, 0.010006745), (3, 0.010009148), (4, 0.010004708)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,21,"08/10/2020Basi di dati I ---272Vincoli di ennupla, violazioneImpiegatoRossiNeriBruniStipendiLordo55.00045.00050.000Netto42.50035.00036.000Ritenute12.50010.00011.000Lordo = (Ritenute + Netto)",basi dati vincoli ennupla violazioneimpiegatorossineribrunistipendilordonettoritenutelordo ritenute netto,"[0, 1, 2, 3, 4]","[(0, 0.014291952), (1, 0.871373), (2, 0.014292116), (3, 0.01429414), (4, 0.014290252)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,22,"08/10/2020Basi di dati I ---273Identificazione delle ennuple
•non ci sonodue ennupleconlostessovaloresull’attributoMatricola•Matricolaèla chiavedella relazioneMatricola276557876365432NomeMarioPieroMario8765467653MarioCognomeRossiNeriNeriRossiRossiPieroCorsoIng InfIng MeccIng InfIng InfIng MeccNascita5/12/9810/7/993/11/963/11/965/12/98",basi dati identificazione ennuple •non sonodue ennupleconlostessovaloresull’attributomatricola•matricolaèla chiavedella relazionematricolanomemariopieromariomariocognomerossinerinerirossirossipierocorsoing infing meccing infing infing meccnascita,[6],"[(6, 0.92497617)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,23,"Vincolo di chiave•Se un insieme K è chiave, •imponiamo che non ci siano due ennuple uguali fra loro su K
08/10/2020Basi di dati I ---274",vincolo chiave•se insieme k chiave •imponiamo due ennuple uguali fra k basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.010005102), (1, 0.010003967), (2, 0.010002969), (3, 0.90996873), (4, 0.01000294)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,24,08/10/2020Basi di dati I ---275Più chiaviMatricola276557876365432NomeMarioPieroMario8765467653MarioCognomeRossiNeriNeriRossiRossiPieroCorsoIng InfIngMeccIng InfIng InfIng MeccCFRSSMRI98...NRIPTR95...NRIMRI99...RSSMRI99...RSSPRI99...,basi dati più chiavimatricolanomemariopieromariomariocognomerossinerinerirossirossipierocorsoing infingmeccing infing infing mecccfrssmrinriptrnrimrirssmrirsspri,"[0, 1, 2, 3, 4]","[(0, 0.016673252), (1, 0.016671965), (2, 0.01667237), (3, 0.016672783), (4, 0.016670408)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,25,"08/10/2020Basi di dati I ---276MatricolaCognomeNomeData di nascita6554RossiMario05/12/19988765NeriPaolo03/11/19963456RossiMaria01/02/19989283VerdiLuisa12/11/1999studenti
CodiceTitoloDocente01AnalisiMario02ChimicaBruni04ChimicaVerdicorsiStudenteVotoCorso345630043456300292832601esami65542601",basi dati matricolacognomenomedata nascitarossimarioneripaolorossimariaverdiluisastudenti codicetitolodocenteanalisimariochimicabrunichimicaverdicorsistudentevotocorsoesami,"[0, 1, 2, 3, 4]","[(0, 0.033347085), (1, 0.033343364), (2, 0.033344544), (3, 0.033346035), (4, 0.033338856)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,26,08/10/2020Basi di dati I ---277Chiave su più attributiStudenteVotoCorso345630043456300292832601esami65542601,basi dati chiave attributistudentevotocorsoesami,"[0, 1, 2, 3, 4]","[(0, 0.025010323), (1, 0.025005985), (2, 0.02500703), (3, 0.7749394), (4, 0.025003849)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,27,"""Minimalità"" delle chiavi•Una chiave di una relazione  è un insieme di attributi che, insieme, permettono di identificare le ennuple e che è minimale rispetto a questa proprietà•Anche Matricola e Cognome identificano le ennuple della relazione studenti, ma non formano una chiave, perché l'insieme non è minimale:•Matricola identifica ed è sottoinsieme di Matricola, Cognome•Matricola, Cognome formano una superchiave•Una chiave è una superchiaveminimale 08/10/2020Basi di dati I ---278",minimalità chiavi•una chiave relazione insieme attributi che insieme permettono identificare ennuple minimale rispetto proprietà•anche matricola cognome identificano ennuple relazione studenti formano chiave linsieme minimale•matricola identifica sottoinsieme matricola cognome•matricola cognome formano superchiave•una chiave superchiaveminimale basi dati ,[0],"[(0, 0.9689523)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,28,08/10/2020Basi di dati I ---287Esistenza delle chiavi•Ognirelazioneèuninsieme:•non puòconteneredue ennupleuguali•Ognirelazioneha comesuperchiavel’insiemedegliattributisucuièdefinita•equindiha (almeno) unachiave,basi dati esistenza chiavi•ognirelazioneèuninsieme•non puòconteneredue ennupleuguali•ognirelazioneha comesuperchiavel’insiemedegliattributisucuièdefinita•equindiha almeno unachiave,"[0, 1, 2, 3, 4]","[(0, 0.01667543), (1, 0.016675739), (2, 0.016674979), (3, 0.016676882), (4, 0.016674006)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,29,"08/10/2020Basi di dati I ---289Chiavi e valori nulli•In presenza di valori nulli, i valori della chiave non permettono•di identificare le ennuple •di realizzare facilmente i riferimenti da altre relazioni",basi dati chiavi valori nulli•in presenza valori nulli valori chiave permettono•di identificare ennuple •di realizzare facilmente riferimenti altre relazioni,[8],"[(8, 0.94703674)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,30,"08/10/2020Basi di dati I ---290•La presenzadi valorinulli, soprattuttonellechiavi, deveesserelimitatao almenocontrollataMatricolaNULL7876365432NomeMarioNULLMarioNULL67653MarioCognomeRossiNeriNeriRossiRossiPieroCorsoIng InfIng MeccIng InfIng InfIng MeccCFRSSMRI93...NRIPTR95...NRIMRI99...NULLRSSPRI98...",basi dati •la presenzadi valorinulli soprattuttonellechiavi deveesserelimitatao almenocontrollatamatricolanullnomemarionullmarionullmariocognomerossinerinerirossirossipierocorsoing infing meccing infing infing mecccfrssmrinriptrnrimrinullrsspri,"[0, 1, 2, 3, 4]","[(0, 0.011114681), (1, 0.01111416), (2, 0.011114327), (3, 0.011114497), (4, 0.01111353)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,31,08/10/2020Basi di dati I ---292Chiave primaria•Chiave su cui non sono ammessi nulli•Notazione: sottolineaturaMatricola276557876365432NomeMarioNULLMario8765467653MarioCognomeRossiNeriNeriRossiRossiPieroCorsoIng InfIng MeccIng InfIng InfIng MeccCFRSSMRI93...NRIPTR95...NRIMRI99...NULLRSSPRI98...,basi dati chiave primaria•chiave ammessi nulli•notazione sottolineaturamatricolanomemarionullmariomariocognomerossinerinerirossirossipierocorsoing infing meccing infing infing mecccfrssmrinriptrnrimrinullrsspri,"[0, 1, 2, 3, 4]","[(0, 0.011114819), (1, 0.011113756), (2, 0.01111402), (3, 0.011114685), (4, 0.011113129)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,32,"08/10/2020Basi di dati I ---293MatricolaCognomeNomeData di nascita6554RossiMario05/12/19988765NeriPaolo03/11/19963456RossiMaria01/02/19989283VerdiLuisa12/11/1999studenti
CodiceTitoloDocente01AnalisiMario02ChimicaBruni04ChimicaVerdicorsiStudenteVotoCorso345630043456300292832601esami65542601",basi dati matricolacognomenomedata nascitarossimarioneripaolorossimariaverdiluisastudenti codicetitolodocenteanalisimariochimicabrunichimicaverdicorsistudentevotocorsoesami,"[0, 1, 2, 3, 4]","[(0, 0.69991755), (1, 0.033342592), (2, 0.033343695), (3, 0.033344913), (4, 0.03333844)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,33,"Integrità referenziale
08/10/2020Basi di dati I ---295Matricola398732959345VigiliCognomeRossiNeriNeriNomeLucaPieroMarioMoriGino7543InfrazioniCodice34321733216452153524Data1/2/20184/3/20205/4/20205/2/2020Vigile3987329532959345StatoNumeroIFEEAA954KKEE395BBBB395BBBB395BB329532953987398793453987
93459345329532953295",integrità referenziale basi dati matricolavigilicognomerossinerinerinomelucapieromariomoriginoinfrazionicodicedatavigilestatonumeroifeeaakkeebbbbbbbbbb ,"[0, 1, 2, 3, 4]","[(0, 0.7749501), (1, 0.025005365), (2, 0.025005877), (3, 0.02500643), (4, 0.025003431)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,34,08/10/2020Basi di dati I ---296AutoStatoNumeroIFEAA954KKEE395BBBB395BBCognomeRossiRossiNeriNomeMarioMarioLucaInfrazioniCodice34321733216452153524Data1/2/20184/3/20205/4/20205/2/2020Vigile3987329532959345StatoNumeroIFEEAA954KKEE395BBBB395BBBB395BBIFEEAA954KKEE395BBBB395BBBB395BBIFEAA954KKEE395BBBB395BB,basi dati autostatonumeroifeaakkeebbbbbbcognomerossirossinerinomemariomariolucainfrazionicodicedatavigilestatonumeroifeeaakkeebbbbbbbbbbifeeaakkeebbbbbbbbbbifeaakkeebbbbbb,"[0, 1, 2, 3, 4]","[(0, 0.033348918), (1, 0.03334337), (2, 0.033344552), (3, 0.03334577), (4, 0.03333886)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,35,08/10/2020Basi di dati I ---297•Vincolo di integrità referenziale(“foreignkey”) fra X  di R1 e  R2•impone ai valori su  X  in  R1di comparire come valori della chiave primaria di  R2Vincolo di integrità referenziale,basi dati •vincolo integrità referenziale“foreignkey” fra x r r•impone valori x rdi comparire valori chiave primaria rvincolo integrità referenziale,[0],"[(0, 0.9249615)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,36,08/10/2020Basi di dati I ---298•vincoli di integrità referenziale fra: •l’attributo Vigile della relazione INFRAZIONI e la relazione VIGILI •gli attributi Stato e Numero di INFRAZIONI e la relazione AUTO ,basi dati •vincoli integrità referenziale fra •l’attributo vigile relazione infrazioni relazione vigili •gli attributi stato numero infrazioni relazione auto,[0],"[(0, 0.94372976)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,37,08/10/2020Basi di dati I ---299InfrazioniCodice34321733216452153524Data1/2/20184/3/20205/4/20205/2/2020Vigile3987329532959345StatoNumeroIFEEAA954KKEE395BBBB395BBBB395BBAutoStatoNumeroIFEEE395BBFF342BBBB395BBCognomeRossiRossiNeriNomeMarioMarioLucaFEE395BBFEE395BBViolazione di vincolo di integrità referenziale,basi dati infrazionicodicedatavigilestatonumeroifeeaakkeebbbbbbbbbbautostatonumeroifeeebbffbbbbbbcognomerossirossinerinomemariomariolucafeebbfeebbviolazione vincolo integrità referenziale,"[0, 1, 2, 3, 4]","[(0, 0.81994003), (1, 0.020010201), (2, 0.020005254), (3, 0.020013463), (4, 0.020003574)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,38,08/10/2020Basi di dati I ---2101Integrità referenziale e valori nulliImpiegatiMatricola343216452153524CognomeRossiNeriVerdiProgettoIDEAXYZNULLProgettiCodiceIDEABOHXYZInizio01/201907/202009/2019Durata362424Costo20012015073032BianchiIDEA,basi dati integrità referenziale valori nulliimpiegatimatricolacognomerossineriverdiprogettoideaxyznullprogetticodiceideabohxyzinizioduratacostobianchiidea,"[0, 1, 2, 3, 4]","[(0, 0.8199445), (1, 0.020008713), (2, 0.020004768), (3, 0.02000887), (4, 0.020004151)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,39,08/10/2020Basi di dati I ---2105AutoStatoNumeroFIEAA954AKEE395ABBB395ABCognomeRossiRossiNeriNomeMarioMarioLucaIncidentiCodice3432164521Data1/2/195/4/20StatoBNumeroBFIAA954AKEE395ABStatoANumeroAIEEE954ABBB395ABVincoli multipli su più attributi,basi dati autostatonumerofieaaakeeabbbabcognomerossirossinerinomemariomariolucaincidenticodicedatastatobnumerobfiaaakeeabstatoanumeroaieeeabbbabvincoli multipli attributi,"[0, 1, 2, 3, 4]","[(0, 0.8199581), (1, 0.020004716), (2, 0.020005334), (3, 0.020005161), (4, 0.020003505)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,40,"08/10/2020Basi di dati I ---2106Vincoli multipli su più attributi, 2•vincoli di integrità referenziale fra: •gli attributi StatoA e NumeroA di INCIDENTI e la relazione AUTO •gli attributi StatoB e NumeroB di INCIDENTI e la relazione AUTO •L'ordine degli attributi è significativo",basi dati vincoli multipli attributi •vincoli integrità referenziale fra •gli attributi statoa numeroa incidenti relazione auto •gli attributi statob numerob incidenti relazione auto •lordine attributi significativo,[0],"[(0, 0.9590752)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,41,"Esempi
08/10/2020Basi di dati I ---2107",esempi basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.77495235), (1, 0.025005616), (2, 0.025005352), (3, 0.025005905), (4, 0.025003199)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,42,"08/10/2020Basi di dati I ---2108Relazioni su singoli attributiMatricolaCognomeNomeData di nascita6554RossiMario05/12/19988765NeriPaolo03/11/19963456RossiMaria01/02/19989283VerdiLuisa12/11/1999studenti
Matricola65543456studenti lavoratori",basi dati relazioni singoli attributimatricolacognomenomedata nascitarossimarioneripaolorossimariaverdiluisastudenti matricolastudenti lavoratori,"[0, 1, 2, 3, 4]","[(0, 0.01667428), (1, 0.016673619), (2, 0.01667347), (3, 0.016673593), (4, 0.016672773)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,43,"Strutture nidificate
08/10/2020Basi di dati I ---2109",strutture nidificate basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.020008106), (1, 0.02000713), (2, 0.020007439), (3, 0.020007752), (4, 0.020007355)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,44,"08/10/2020Basi di dati I ---2110Strutture nidificateDa FilippoVia Roma 2, RomaRicevuta Fiscale1235del 12/10/20023Coperti3,002Bistecche18,003Primi12,002Antipasti6,20Totale39,20Da FilippoVia Roma 2, RomaRicevuta Fiscale1240del 13/10/20022Coperti2,002Orate20,002Primi8,002Antipasti7,002Caffè2,00Totale39,00",basi dati strutture nidificateda filippovia roma romaricevuta fiscaledel copertibisteccheprimiantipastitotaleda filippovia roma romaricevuta fiscaledel copertiorateprimiantipasticaffètotale,[9],"[(9, 0.93076044)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,45,"Esercizio•Rappresentare in una base di dati relazionale i dati di interesse delle ricevute fiscali
08/10/2020Basi di dati I ---2111",esercizio•rappresentare base dati relazionale dati interesse ricevute fiscali basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.010004388), (1, 0.010004693), (2, 0.010004469), (3, 0.010006159), (4, 0.010003272)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,46,"08/10/2020Basi di dati I ---2112Strutture nidificateDa FilippoVia Roma 2, RomaRicevuta Fiscale1235del 12/10/20193Coperti3,002Bistecche18,003Primi12,002Antipasti6,20Totale39,20Da FilippoVia Roma 2, RomaRicevuta Fiscale1240del 13/10/20192Coperti2,002Orate20,002Primi8,002Antipasti7,002Caffè2,00Totale39,00",basi dati strutture nidificateda filippovia roma romaricevuta fiscaledel copertibisteccheprimiantipastitotaleda filippovia roma romaricevuta fiscaledel copertiorateprimiantipasticaffètotale,[9],"[(9, 0.93076044)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,47,"08/10/2020Basi di dati I ---2113Strutture nidificateDa FilippoVia Roma 2, RomaRicevuta Fiscale1235del 12/10/20193Coperti3,002Bistecche18,003Primi12,002Antipasti6,20Totale39,20Da FilippoVia Roma 2, RomaRicevuta Fiscale1240del 13/10/20192Coperti2,002Orate20,002Primi8,002Antipasti7,002Caffè2,00Totale39,00",basi dati strutture nidificateda filippovia roma romaricevuta fiscaledel copertibisteccheprimiantipastitotaleda filippovia roma romaricevuta fiscaledel copertiorateprimiantipasticaffètotale,[9],"[(9, 0.9307604)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,48,"""Soluzione""•alla lavagna
08/10/2020Basi di dati I ---2114",soluzione•alla lavagna basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.774926), (1, 0.02500742), (2, 0.02500873), (3, 0.025010634), (4, 0.025005842)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,49,"08/10/2020Basi di dati I ---2117Relazioni che rappresentano  strutture nidificate12353Coperti3,002Bistecche18,003Primi12,002Antipasti6,2039,2012/10/2019NumeroTotaleData124039,0013/10/2019RicevuteDettaglioQtàDescrizioneImporto1235Numero12401235123512352Coperti2,00…………",basi dati relazioni rappresentano strutture nidificatecopertibisteccheprimiantipastinumerototaledataricevutedettaglioqtàdescrizioneimportonumerocoperti…………,"[0, 1, 2, 3, 4]","[(0, 0.016673185), (1, 0.016672539), (2, 0.016672047), (3, 0.016672073), (4, 0.016671931)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,50,"08/10/2020Basi di dati I ---2118Strutture nidificate, riflessione•Abbiamorappresentatoveramentetutti gliaspettidelle ricevute? •Dipendeda checosaci interessa! •l'ordinedelle righee' rilevante?•lineeripetute•al bar ... ""ditemile coseinsieme…""",basi dati strutture nidificate riflessione•abbiamorappresentatoveramentetutti gliaspettidelle ricevute •dipendeda checosaci interessa •lordinedelle righee rilevante•lineeripetute•al bar ditemile coseinsieme…,[4],"[(4, 0.9249282)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.2-Modello Relazionale 2.pdf,51,"""Soluzione""•alla lavagna
08/10/2020Basi di dati I ---2119",soluzione•alla lavagna basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.77492815), (1, 0.025007412), (2, 0.025008714), (3, 0.025008958), (4, 0.025005836)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,0,"ALGEBRA RELAZIONALE
12/10/2020Atzeni --Basi di dati I --3 2",algebra relazionale atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.016671477), (1, 0.01667195), (2, 0.016671844), (3, 0.01667291), (4, 0.016669475)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,1,"Linguaggi per basi di dati•operazioni sullo schema•DDL•operazioni sui dati•DML•interrogazione (""query"")•aggiornamento
12/10/2020Atzeni --Basi di dati I --3 3",linguaggi basi dati•operazioni schema•ddl•operazioni dati•dml•interrogazione query•aggiornamento atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.016671695), (1, 0.01667023), (2, 0.016670946), (3, 0.01667151), (4, 0.01666944)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,2,"Linguaggi di interrogazioneper basi di dati relazionali•Dichiarativi (""che cosa"")•specificano le proprietà del risultato•Procedurali(""come"") •costruiscono il risultato
12/10/2020Atzeni --Basi di dati I --3 4",linguaggi interrogazioneper basi dati relazionali•dichiarativi che cosa•specificano proprietà risultato•proceduralicome •costruiscono risultato atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.011115483), (1, 0.011114594), (2, 0.011113965), (3, 0.011115362), (4, 0.01111328)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,3,Linguaggi di interrogazione•Algebra relazionale: procedurale•Calcolo relazionale: dichiarativo (teorico)•SQL(Structured Query Language): parzialmente dichiarativo (reale)•QBE(Query by Example): dichiarativo (reale)12/10/2020Atzeni --Basi di dati I --3 5,linguaggi interrogazione•algebra relazionale procedurale•calcolo relazionale dichiarativo teorico•sqlstructured query language parzialmente dichiarativo reale•qbequery by example dichiarativo realeatzeni basi dati ,[1],"[(1, 0.93997526)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,4,"Algebra relazionale•Insieme di operatori•su relazioni, producono relazioni•quindi possono essere composti
12/10/2020Atzeni --Basi di dati I --3 6",algebra relazionale•insieme operatori•su relazioni producono relazioni•quindi possono essere composti atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.010004568), (1, 0.010004307), (2, 0.010003412), (3, 0.010003238), (4, 0.010003784)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,5,Un servizio online per esercitazioni in algebra relazionale•RelaX•http://dbis-uibk.github.io/relax/calc•Verrà proposto un “homework” il cui svolgimento sarà necessario per partecipare alla prova parziale•Oggi lo usiamo per vedere i risultati12/10/2020Atzeni --Basi di dati I --3 7,servizio online esercitazioni algebra relazionale•relax•httpdbis uibkgithubiorelaxcalc•verrà proposto “homework” svolgimento necessario partecipare prova parziale•oggi usiamo vedere risultatiatzeni basi dati ,[5],"[(5, 0.93996024)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,6,"Operatori dell'algebra relazionale•unione, intersezione, differenza•ridenominazione•selezione•proiezione•aggregazione•join (join naturale, prodotto cartesiano, theta-join)12/10/2020Atzeni --Basi di dati I --3 8",operatori dellalgebra relazionale•unione intersezione differenza•ridenominazione•selezione•proiezione•aggregazione•join join naturale prodotto cartesiano theta joinatzeni basi dati ,[3],"[(3, 0.92498094)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,7,"Operatori insiemistici•le relazioni sono insiemi•i risultati debbono essere relazioni•quindi:•è possibile applicare unione, intersezione, differenzasolo a relazioni definite sugli stessi attributi•esempi alla lavagna e su Relax12/10/2020Atzeni --Basi di dati I --3 9",operatori insiemistici•le relazioni insiemi•i risultati debbono essere relazioni•quindi•è possibile applicare unione intersezione differenzasolo relazioni definite attributi•esempi lavagna relaxatzeni basi dati ,[0],"[(0, 0.9470187)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,8,LaureatiMatricola74329824Età5445NomeNeriVerdi727442RossiSpecialistiMatricola743298249297Età544533NomeNeriVerdiNeriBase di dati per l'esempio•La carichiamo in Relaxhttp://dbis-uibk.github.io/relax/calc/gist/1a9dc6cd0f3478388fc177dfc9b5a31412/10/2020Atzeni --Basi di dati I --3 10,laureatimatricolaetànomeneriverdirossispecialistimatricolaetànomeneriverdineribase dati lesempio•la carichiamo relaxhttpdbis uibkgithubiorelaxcalcgistadccdffcdfcbaatzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.84995794), (1, 0.016671412), (2, 0.016671691), (3, 0.01667195), (4, 0.01667032)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,9,"Paternità PadreFiglioAdamoCainoAbramoIsaccoAdamoAbeleMaternità MadreFiglioEvaSetSaraIsaccoEvaAbelePaternità  ÈMaternità?? Un'unione sensata ma impossibile
12/10/2020Atzeni --Basi di dati I --3 14",paternità padrefiglioadamocainoabramoisaccoadamoabelematernità madrefiglioevasetsaraisaccoevaabelepaternità èmaternità ununione sensata impossibile atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.0142909745), (1, 0.014290173), (2, 0.014290887), (3, 0.014290499), (4, 0.014288781)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,10,"Ridenominazione•operatore su una relazione•""modifica lo schema"" lasciando inalterata l'istanza dell'operando•simbolo REN oppure RHO oppure ρ•sintassi ed esempio alla lavagna12/10/2020Atzeni --Basi di dati I --3 16",ridenominazione•operatore relazione•modifica schema lasciando inalterata listanza delloperando•simbolo ren oppure rho oppure ρ•sintassi esempio lavagnaatzeni basi dati ,[5],"[(5, 0.93074024)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,11,"RENSede, Retribuzione ¬Ufficio, Stipendio(Impiegati) REN Sede, Retribuzione ¬Fabbrica, Salario(Operai) ÈImpiegati CognomeNeriRossiUfficioMilanoRomaStipendio6455Operai CognomeVerdiBruniFabbricaLatinaMonzaSalario5545CognomeRetribuzioneSedeNeriRossi6455MilanoRomaVerdiBruniLatinaMonza554512/10/2020Atzeni --Basi di dati I --3 20",rensede retribuzione ¬ufficio stipendioimpiegati ren sede retribuzione ¬fabbrica salariooperai èimpiegati cognomenerirossiufficiomilanoromastipendiooperai cognomeverdibrunifabbricalatinamonzasalariocognomeretribuzionesedenerirossimilanoromaverdibrunilatinamonzaatzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.011116216), (1, 0.89995307), (2, 0.011115991), (3, 0.011116105), (4, 0.011115595)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,12,"Selezione•""seleziona"" da una relazione le ennuple che soddisfano una condizione
12/10/2020Atzeni --Basi di dati I --3 22",selezione•seleziona relazione ennuple soddisfano condizione atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.88743687), (1, 0.012505735), (2, 0.012509445), (3, 0.01250673), (4, 0.012505129)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,13,Impiegati CognomeFilialeStipendioMatricolaNeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553•impiegati che •guadagnano più di 50 •guadagnano più di 50 e lavorano a Milano•hanno lo stesso nome della filiale presso cui lavorano12/10/2020Atzeni --Basi di dati I --3 23,impiegati cognomefilialestipendiomatricolanerimilanorossiromanerinapolimilanomilano•impiegati •guadagnano •guadagnano lavorano milano•hanno stesso nome filiale presso lavoranoatzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.010002309), (1, 0.010002903), (2, 0.0100022685), (3, 0.010002907), (4, 0.010001926)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,14,"Selezione, sintassi e semantica
•
12/10/2020Atzeni --Basi di dati I --3 24",selezione sintassi semantica • atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.014289743), (1, 0.014289083), (2, 0.0142896855), (3, 0.014290892), (4, 0.014287958)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,15,"CognomeFilialeStipendioMatricolaNeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553Impiegati MilanoMilano449553•impiegati che guadagnano più di 50 
SELStipendio > 50(Impiegati) NeriNapoli645698SELStipendio > 50(Impiegati)
12/10/2020Atzeni --Basi di dati I --3 26",cognomefilialestipendiomatricolanerimilanorossiromanerinapolimilanomilanoimpiegati milanomilano•impiegati guadagnano selstipendio impiegati nerinapoliselstipendio impiegati atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.012502069), (1, 0.012501994), (2, 0.012501924), (3, 0.012501968), (4, 0.012501189)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,16,"Impiegati CognomeFilialeStipendioMatricolaNeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553•impiegati che guadagnano più di 50 e lavorano a Milano
SELStipendio > 50 AND Filiale = 'Milano'(Impiegati) RossiRoma557309NeriNapoli645698MilanoMilano449553NeriMilano645998SELStipendio > 50 AND Filiale = 'Milano'(Impiegati) 
12/10/2020Atzeni --Basi di dati I --3 27",impiegati cognomefilialestipendiomatricolanerimilanorossiromanerinapolimilanomilano•impiegati guadagnano lavorano milano selstipendio and filiale milanoimpiegati rossiromanerinapolimilanomilanonerimilanoselstipendio and filiale milanoimpiegati atzeni basi dati ,[9],"[(9, 0.93999165)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,17,"Impiegati CognomeFilialeStipendioMatricolaNeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553•impiegati che hanno lo stesso nome della filiale presso cui lavorano
SEL Cognome= Filiale(Impiegati) NeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553SEL Cognome= Filiale(Impiegati) 
12/10/2020Atzeni --Basi di dati I --3 28",impiegati cognomefilialestipendiomatricolanerimilanorossiromanerinapolimilanomilano•impiegati stesso nome filiale presso lavorano sel cognome filialeimpiegati nerimilanorossiromanerinapolimilanomilanosel cognome filialeimpiegati atzeni basi dati ,[9],"[(9, 0.93075675)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,18,"Selezione e proiezione•operatori ""ortogonali""•alla lavagna
12/10/2020Atzeni --Basi di dati I --3 29",selezione proiezione•operatori ortogonali•alla lavagna atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.016675044), (1, 0.016672866), (2, 0.016674053), (3, 0.016675245), (4, 0.01667192)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,19,"Proiezione•decompone ""verticalmente"":•""tutte"" le ennuple, alcuni attributi
12/10/2020Atzeni --Basi di dati I --3 33",proiezione•decompone verticalmente•tutte ennuple alcuni attributi atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.42699277), (1, 0.01429183), (2, 0.014290884), (3, 0.014291402), (4, 0.014290328)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,20,"Impiegati CognomeFilialeStipendioMatricolaNeriMilano645998NeriNapoli557309RossiRoma645698RossiRoma449553•per tutti gli impiegati:•matricola e cognome•cognome e filiale
12/10/2020Atzeni --Basi di dati I --3 34",impiegati cognomefilialestipendiomatricolanerimilanonerinapolirossiromarossiroma•per impiegati•matricola cognome•cognome filiale atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.016669746), (1, 0.016669337), (2, 0.016669672), (3, 0.016669452), (4, 0.016668132)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,21,"Proiezione, sintassi e semantica•alla lavagna
12/10/2020Atzeni --Basi di dati I --3 35",proiezione sintassi semantica•alla lavagna atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.0142916525), (1, 0.014290749), (2, 0.014291141), (3, 0.01429168), (4, 0.014289431)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,22,"CognomeFilialeStipendioMatricolaNeriMilano645998NeriNapoli557309RossiRoma645698RossiRoma449553•matricola e cognome  di tutti gli impiegati
PROJ Matricola, Cognome(Impiegati)12/10/2020Atzeni --Basi di dati I --3 37",cognomefilialestipendiomatricolanerimilanonerinapolirossiromarossiroma•matricola cognome impiegati proj matricola cognomeimpiegatiatzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.014288731), (1, 0.014287827), (2, 0.01428815), (3, 0.014288247), (4, 0.014287327)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,23,"CognomeFilialeStipendioMatricolaNeriMilano645998NeriNapoli557309RossiRoma645698RossiRoma449553•cognome e filiale  di tutti gli impiegati
PROJ Cognome, Filiale(Impiegati)12/10/2020Atzeni --Basi di dati I --3 38",cognomefilialestipendiomatricolanerimilanonerinapolirossiromarossiroma•cognome filiale impiegati proj cognome filialeimpiegatiatzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.014288312), (1, 0.014287834), (2, 0.014288137), (3, 0.0142880315), (4, 0.014287119)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.5-Algebra Relazionale.pdf,24,"Cardinalità delle proiezioni•Una proiezione•contiene al più tante ennuple quante l'operando•può contenerne di meno•Quando possiamo essere sicuri che non siano di meno?
12/10/2020Atzeni --Basi di dati I --3 39",cardinalità proiezioni•una proiezione•contiene tante ennuple loperando•può contenerne meno•quando possiamo essere sicuri meno atzeni basi dati ,[6],"[(6, 0.9181522)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,0,"Operatori dell'algebra relazionale•unione, intersezione, differenza•ridenominazione•selezione•proiezione•aggregazione•join (join naturale, prodotto cartesiano, theta-join)12/10/2020Atzeni --Basi di dati I --3 8",operatori dellalgebra relazionale•unione intersezione differenza•ridenominazione•selezione•proiezione•aggregazione•join join naturale prodotto cartesiano theta joinatzeni basi dati ,[3],"[(3, 0.92498094)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,1,"Operatori insiemistici•le relazioni sono insiemi•i risultati debbono essere relazioni•quindi:•è possibile applicare unione, intersezione, differenzasolo a relazioni definite sugli stessi attributi•esempi alla lavagna e su Relax12/10/2020Atzeni --Basi di dati I --3 9",operatori insiemistici•le relazioni insiemi•i risultati debbono essere relazioni•quindi•è possibile applicare unione intersezione differenzasolo relazioni definite attributi•esempi lavagna relaxatzeni basi dati ,[0],"[(0, 0.9470187)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,2,LaureatiMatricola74329824Età5445NomeNeriVerdi727442RossiSpecialistiMatricola743298249297Età544533NomeNeriVerdiNeriBase di dati per l'esempio•La carichiamo in Relaxhttp://dbis-uibk.github.io/relax/calc/gist/1a9dc6cd0f3478388fc177dfc9b5a31412/10/2020Atzeni --Basi di dati I --3 10,laureatimatricolaetànomeneriverdirossispecialistimatricolaetànomeneriverdineribase dati lesempio•la carichiamo relaxhttpdbis uibkgithubiorelaxcalcgistadccdffcdfcbaatzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.84995794), (1, 0.016671414), (2, 0.016671693), (3, 0.016671954), (4, 0.016670322)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,3,"Paternità PadreFiglioAdamoCainoAbramoIsaccoAdamoAbeleMaternità MadreFiglioEvaSetSaraIsaccoEvaAbelePaternità  ÈMaternità?? Un'unione sensata ma impossibile
12/10/2020Atzeni --Basi di dati I --3 14",paternità padrefiglioadamocainoabramoisaccoadamoabelematernità madrefiglioevasetsaraisaccoevaabelepaternità èmaternità ununione sensata impossibile atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.014290969), (1, 0.01429017), (2, 0.01429086), (3, 0.014290497), (4, 0.01428878)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,4,"Ridenominazione•operatore su una relazione•""modifica lo schema"" lasciando inalterata l'istanza dell'operando•simbolo REN oppure RHO oppure ρ•sintassi ed esempio alla lavagna12/10/2020Atzeni --Basi di dati I --3 16",ridenominazione•operatore relazione•modifica schema lasciando inalterata listanza delloperando•simbolo ren oppure rho oppure ρ•sintassi esempio lavagnaatzeni basi dati ,[5],"[(5, 0.9307402)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,5,"RENSede, Retribuzione ¬Ufficio, Stipendio(Impiegati) REN Sede, Retribuzione ¬Fabbrica, Salario(Operai) ÈImpiegati CognomeNeriRossiUfficioMilanoRomaStipendio6455Operai CognomeVerdiBruniFabbricaLatinaMonzaSalario5545CognomeRetribuzioneSedeNeriRossi6455MilanoRomaVerdiBruniLatinaMonza554512/10/2020Atzeni --Basi di dati I --3 20",rensede retribuzione ¬ufficio stipendioimpiegati ren sede retribuzione ¬fabbrica salariooperai èimpiegati cognomenerirossiufficiomilanoromastipendiooperai cognomeverdibrunifabbricalatinamonzasalariocognomeretribuzionesedenerirossimilanoromaverdibrunilatinamonzaatzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.011116214), (1, 0.8999537), (2, 0.011115988), (3, 0.011116103), (4, 0.011115592)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,6,"Selezione•""seleziona"" da una relazione le ennuple che soddisfano una condizione
12/10/2020Atzeni --Basi di dati I --3 22",selezione•seleziona relazione ennuple soddisfano condizione atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.8874389), (1, 0.012505731), (2, 0.0125075225), (3, 0.012506724), (4, 0.012505124)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,7,Impiegati CognomeFilialeStipendioMatricolaNeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553•impiegati che •guadagnano più di 50 •guadagnano più di 50 e lavorano a Milano•hanno lo stesso nome della filiale presso cui lavorano12/10/2020Atzeni --Basi di dati I --3 23,impiegati cognomefilialestipendiomatricolanerimilanorossiromanerinapolimilanomilano•impiegati •guadagnano •guadagnano lavorano milano•hanno stesso nome filiale presso lavoranoatzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.010002309), (1, 0.010003006), (2, 0.010002268), (3, 0.010002906), (4, 0.010001925)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,8,"Selezione, sintassi e semantica
•
12/10/2020Atzeni --Basi di dati I --3 24",selezione sintassi semantica • atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.014289744), (1, 0.014289084), (2, 0.014289687), (3, 0.014291208), (4, 0.01428796)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,9,"CognomeFilialeStipendioMatricolaNeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553Impiegati MilanoMilano449553•impiegati che guadagnano più di 50 
SELStipendio > 50(Impiegati) NeriNapoli645698SELStipendio > 50(Impiegati)
12/10/2020Atzeni --Basi di dati I --3 26",cognomefilialestipendiomatricolanerimilanorossiromanerinapolimilanomilanoimpiegati milanomilano•impiegati guadagnano selstipendio impiegati nerinapoliselstipendio impiegati atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.012502066), (1, 0.012501992), (2, 0.012501922), (3, 0.012501966), (4, 0.012501188)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,10,"Impiegati CognomeFilialeStipendioMatricolaNeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553•impiegati che guadagnano più di 50 e lavorano a Milano
SELStipendio > 50 AND Filiale = 'Milano'(Impiegati) RossiRoma557309NeriNapoli645698MilanoMilano449553NeriMilano645998SELStipendio > 50 AND Filiale = 'Milano'(Impiegati) 
12/10/2020Atzeni --Basi di dati I --3 27",impiegati cognomefilialestipendiomatricolanerimilanorossiromanerinapolimilanomilano•impiegati guadagnano lavorano milano selstipendio and filiale milanoimpiegati rossiromanerinapolimilanomilanonerimilanoselstipendio and filiale milanoimpiegati atzeni basi dati ,[9],"[(9, 0.93999165)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,11,"Impiegati CognomeFilialeStipendioMatricolaNeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553•impiegati che hanno lo stesso nome della filiale presso cui lavorano
SEL Cognome= Filiale(Impiegati) NeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553SEL Cognome= Filiale(Impiegati) 
12/10/2020Atzeni --Basi di dati I --3 28",impiegati cognomefilialestipendiomatricolanerimilanorossiromanerinapolimilanomilano•impiegati stesso nome filiale presso lavorano sel cognome filialeimpiegati nerimilanorossiromanerinapolimilanomilanosel cognome filialeimpiegati atzeni basi dati ,[9],"[(9, 0.9307569)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,12,"Selezione e proiezione•operatori ""ortogonali""•alla lavagna
12/10/2020Atzeni --Basi di dati I --3 29",selezione proiezione•operatori ortogonali•alla lavagna atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.016675044), (1, 0.016672866), (2, 0.016674053), (3, 0.016675511), (4, 0.016671922)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,13,"Proiezione•decompone ""verticalmente"":•""tutte"" le ennuple, alcuni attributi
12/10/2020Atzeni --Basi di dati I --3 33",proiezione•decompone verticalmente•tutte ennuple alcuni attributi atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.42724732), (1, 0.014291832), (2, 0.014290885), (3, 0.014291402), (4, 0.01429033)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,14,"Impiegati CognomeFilialeStipendioMatricolaNeriMilano645998NeriNapoli557309RossiRoma645698RossiRoma449553•per tutti gli impiegati:•matricola e cognome•cognome e filiale
12/10/2020Atzeni --Basi di dati I --3 34",impiegati cognomefilialestipendiomatricolanerimilanonerinapolirossiromarossiroma•per impiegati•matricola cognome•cognome filiale atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.016669746), (1, 0.016669335), (2, 0.01666967), (3, 0.016669452), (4, 0.01666813)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,15,"Proiezione, sintassi e semantica•alla lavagna
12/10/2020Atzeni --Basi di dati I --3 35",proiezione sintassi semantica•alla lavagna atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.014291655), (1, 0.01429075), (2, 0.014291142), (3, 0.014291681), (4, 0.014289431)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,16,"CognomeFilialeStipendioMatricolaNeriMilano645998NeriNapoli557309RossiRoma645698RossiRoma449553•matricola e cognome  di tutti gli impiegati
PROJ Matricola, Cognome(Impiegati)12/10/2020Atzeni --Basi di dati I --3 37",cognomefilialestipendiomatricolanerimilanonerinapolirossiromarossiroma•matricola cognome impiegati proj matricola cognomeimpiegatiatzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.014288729), (1, 0.014287825), (2, 0.014288148), (3, 0.014288245), (4, 0.014287326)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,17,"CognomeFilialeStipendioMatricolaNeriMilano645998NeriNapoli557309RossiRoma645698RossiRoma449553•cognome e filiale  di tutti gli impiegati
PROJ Cognome, Filiale(Impiegati)12/10/2020Atzeni --Basi di dati I --3 38",cognomefilialestipendiomatricolanerimilanonerinapolirossiromarossiroma•cognome filiale impiegati proj cognome filialeimpiegatiatzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.014288314), (1, 0.014287833), (2, 0.014288144), (3, 0.0142880315), (4, 0.014287118)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,18,"Cardinalità delle proiezioni•Una proiezione•contiene al più tante ennuple quante l'operando•può contenerne di meno•Quando possiamo essere sicuri che non siano di meno?
12/10/2020Atzeni --Basi di dati I --3 39",cardinalità proiezioni•una proiezione•contiene tante ennuple loperando•può contenerne meno•quando possiamo essere sicuri meno atzeni basi dati ,[6],"[(6, 0.9181523)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,19,Selezione con valori nulliCognomeFilialeEtàMatricolaNeriMilano455998RossiRoma327309BruniMilanoNULL9553Impiegati SELEtà > 40(Impiegati) •la condizione atomica è vera solo per valori non nulli12/10/2020Atzeni --Basi di dati I --3 41,selezione valori nullicognomefilialeetàmatricolanerimilanorossiromabrunimilanonullimpiegati seletà impiegati •la condizione atomica vera solo valori nulliatzeni basi dati ,"[3, 5]","[(3, 0.26867074), (5, 0.6646326)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,20,Un risultato non desiderabileSELEtà>40 (Persone) ÈSELEtà£40 (Persone) ¹Persone•Perché? Perché le selezioni vengono valutate separatamente!•Ma anche SELEtà>40 ÚEtà£40 (Persone) ¹Persone•Perché? Perché anche le condizioni atomiche vengono valutate separatamente!12/10/2020Atzeni --Basi di dati I --3 42,risultato desiderabileseletà persone èseletà£ persone persone•perché selezioni vengono valutate separatamente•ma seletà úetà£ persone persone•perché condizioni atomiche vengono valutate separatamenteatzeni basi dati ,[5],"[(5, 0.9356665)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,21,"Selezione con valori nulli: soluzioneSELEtà > 40(Impiegati)•la condizione atomica è  vera solo per valori non nulli•per riferirsi ai valori nulli esistono forme apposite di condizioni:IS NULLIS NOT NULL•si potrebbe usare (ma non serve) una ""logica a tre valori"" (vero, falso, sconosciuto)12/10/2020Atzeni --Basi di dati I --3 43",selezione valori nulli soluzioneseletà impiegati•la condizione atomica vera solo valori nulli•per riferirsi valori nulli esistono forme apposite condizioniis nullis not null•si potrebbe usare ma serve logica tre valori vero falso sconosciutoatzeni basi dati ,[3],"[(3, 0.9689497)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,22,"Nota bene•RelaXusa Età = null
12/10/2020Atzeni --Basi di dati I --3 44",nota bene•relaxusa età null atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.016672483), (1, 0.016672874), (2, 0.016674163), (3, 0.016671967), (4, 0.016670933)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,23,•Quindi:SELEtà>40 (Persone) ÈSELEtà£40 (Persone) ÈSELEtà IS NULL (Persone) =SELEtà>40 ÚEtà£40 ÚEtà IS NULL(Persone) = Persone12/10/2020Atzeni --Basi di dati I --3 45,•quindiseletà persone èseletà£ persone èseletà is null persone seletà úetà£ úetà is nullpersone personeatzeni basi dati ,[1],"[(1, 0.9181564)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.6-Algebra Relazionale.pdf,24,"CognomeFilialeEtàMatricolaNeriMilano455998BruniMilanoNULL9553Impiegati SEL(Età > 40) OR (Età IS NULL) (Impiegati) RossiRoma327309RossiRoma327309NeriMilano455998BruniMilanoNULL9553
12/10/2020Atzeni --Basi di dati I --3 46",cognomefilialeetàmatricolanerimilanobrunimilanonullimpiegati seletà or età is null impiegati rossiromarossiromanerimilanobrunimilanonull atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.012503919), (1, 0.0125056), (2, 0.012505464), (3, 0.0125036575), (4, 0.012505089)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,0,"Selezione e proiezione•Combinando selezione e proiezione, possiamo estrarre interessanti informazioni da una relazione
19/10/2020Atzeni --Basi di dati I --3 47",selezione proiezione•combinando selezione proiezione possiamo estrarre interessanti informazioni relazione atzeni basi dati ,[9],"[(9, 0.92497015)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,1,"CognomeFilialeStipendioMatricolaNeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553MilanoMilano449553NeriNapoli645698•matricola e cognome degli impiegati che guadagnano più di 50 
SELStipendio > 50(Impiegati) PROJMatricola,Cognome(                                          ) 19/10/2020Atzeni --Basi di dati I --3 48",cognomefilialestipendiomatricolanerimilanorossiromanerinapolimilanomilanomilanomilanonerinapoli•matricola cognome impiegati guadagnano selstipendio impiegati projmatricolacognome atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.011112849), (1, 0.011112713), (2, 0.011112712), (3, 0.011112693), (4, 0.01111209)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,2,"•Combinando selezione e proiezione, possiamo estrarreinformazioni da una relazione•Invece non possiamo•calcolare informazioni derivate•correlare informazioni presenti in relazioni diverse, né informazioni in ennuple diverse di una stessa relazione•Vediamo altri operatori che permettono queste attività19/10/2020Atzeni --Basi di dati I --3 49",•combinando selezione proiezione possiamo estrarreinformazioni relazione•invece possiamo•calcolare informazioni derivate•correlare informazioni presenti relazioni diverse né informazioni ennuple diverse stessa relazione•vediamo altri operatori permettono attivitàatzeni basi dati ,"[3, 9]","[(3, 0.37849325), (9, 0.5770288)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,3,"Aggregazione•Il contenuto delle basi di dati viene spesso aggregato:•Il voto massimo nell'esame di basi di dati•Il voto medio per ciascun esame•Il numero di CFU conseguiti da ciascuno studente
19/10/2020Atzeni --Basi di dati I --3 50",aggregazione•il contenuto basi dati viene spesso aggregato•il voto massimo nellesame basi dati•il voto medio ciascun esame•il numero cfu conseguiti ciascuno studente atzeni basi dati ,[9],"[(9, 0.95711905)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,4,"Aggregazione, sintassi e semantica
•
19/10/2020Atzeni --Basi di dati I --3 51",aggregazione sintassi semantica • atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.014290423), (1, 0.014289735), (2, 0.014290363), (3, 0.0142929265), (4, 0.014288866)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,5,"Versione semplice•Senza attributo di raggruppamento•Calcolo sull'intera relazioneAGG Funzione (Attributo) (Operando)o meglioAGG Funzione (Attributo) → Nome (Operando)
19/10/2020Atzeni --Basi di dati I --3 53",versione semplice•senza attributo raggruppamento•calcolo sullintera relazioneagg funzione attributo operandoo meglioagg funzione attributo → nome operando atzeni basi dati ,[0],"[(0, 0.9437125)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,6,19/10/2020Atzeni --Basi di dati I --3 54MatricolaVotoCodice345630043456260292832701esami6554260165542605AGGcount(*) → NumeroEsami(esami)•Il numero totale di esami NumeroEsami5,atzeni basi dati matricolavotocodiceesamiaggcount → numeroesamiesami•il numero totale esami numeroesami,"[0, 1, 2, 3, 4]","[(0, 0.5414004), (1, 0.0125049045), (2, 0.35856056), (3, 0.012504378), (4, 0.0125034945)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,7,19/10/2020Atzeni --Basi di dati I --3 55MatricolaVotoCodice345630043456260292832701esami6554260165542605AGGavg(Voto)→ MediaGenerale(esami)65542605•Il voto medio complessivoMediaGenerale27,atzeni basi dati matricolavotocodiceesamiaggavgvoto→ mediageneraleesami•il voto medio complessivomediagenerale,"[0, 1, 2, 3, 4]","[(0, 0.016671753), (1, 0.016672386), (2, 0.84995455), (3, 0.016670851), (4, 0.016669404)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,8,"19/10/2020Atzeni --Basi di dati I --3 56MatricolaVotoCodice345630043456260292832701esami6554260165542605AGGcount(*)→ NumeroEsami,avg(Voto)→ MediaGenerale(esami)65542605•Il numero di esami e il voto medio complessivoMediaGenerale27NumeroEsami5γcount(*) → NumeroEsami, avg(Voto) → Media (Esami)",atzeni basi dati matricolavotocodiceesamiaggcount→ numeroesamiavgvoto→ mediageneraleesami•il numero esami voto medio complessivomediageneralenumeroesamiγcount → numeroesami avgvoto → media esami,[2],"[(2, 0.9249735)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,9,19/10/2020Atzeni --Basi di dati I --3 57MatricolaVotoCodice345630043456260292832701esami6554260165542605•Il voto medio per ciascuno studenteAGGMatricola; avg(Voto) → Media(esami)MatricolaMedia345628928327655426,atzeni basi dati matricolavotocodiceesami•il voto medio ciascuno studenteaggmatricola avgvoto → mediaesamimatricolamedia,"[0, 1, 2, 3, 4]","[(0, 0.012503818), (1, 0.012507389), (2, 0.88746184), (3, 0.0125033455), (4, 0.012502976)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,10,"19/10/2020Atzeni --Basi di dati I --3 58MatricolaVotoCodice345630043456260292832701esami6554260165542605•Numero esami e voto medio per ciascuno studenteAGGMatricola; avg(Voto) →Media, count(*) → NumEsami(esami)MatricolaMedia345628928327655426NumEsami212",atzeni basi dati matricolavotocodiceesami•numero esami voto medio ciascuno studenteaggmatricola avgvoto →media count → numesamiesamimatricolamedianumesami,"[0, 1, 2, 3, 4]","[(0, 0.010003512), (1, 0.0100053465), (2, 0.9099658), (3, 0.010003692), (4, 0.010003336)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,11,"Valori nulli•vengono trattati correttamente (cioè ignorati nelle medie, nelle somme e nei conteggi)
19/10/2020Atzeni --Basi di dati I --3 59",valori nulli•vengono trattati correttamente cioè ignorati medie somme conteggi atzeni basi dati ,[1],"[(1, 0.9181419)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,12,"count•count(*) conta le ennuple•count(A) conta le ennuple che hanno il valore di A •non i valori distinti di A•quindi in assenza di valori il risultato è lo stesso, in presenza di valori nulli per A•count(A) è il numero di ennuple che non hanno il valore nullo19/10/2020Atzeni --Basi di dati I --3 60",count•count conta ennuple•counta conta ennuple valore •non valori distinti a•quindi assenza valori risultato stesso presenza valori nulli a•counta numero ennuple valore nulloatzeni basi dati ,[3],"[(3, 0.954969)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,13,"19/10/2020Atzeni --Basi di dati I --3 61•Numero esami e voto medio per ciascuno studenteAGGMatricola; avg(Voto) →Media, count(*) → NumEsami(esami)MatricolaMedia345630928327655426NumEsami212MatricolaVotoCodice345630043456NULL0292832701esami6554260165542605•Numero voti e voto medio per ciascuno studenteAGGMatricola; avg(Voto) →Media, count(Voto) → NumVoti(esami)MatricolaMedia345630928327655426NumVoti112",atzeni basi dati •numero esami voto medio ciascuno studenteaggmatricola avgvoto →media count → numesamiesamimatricolamedianumesamimatricolavotocodicenullesami•numero voti voto medio ciascuno studenteaggmatricola avgvoto →media countvoto → numvotiesamimatricolamedianumvoti,[1],"[(1, 0.9437257)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,14,"Join•il join è l'operatore più interessante dell'algebra relazionale•permette di correlare dati in relazioni diverse
19/10/2020Atzeni --Basi di dati I --3 62",join•il join loperatore interessante dellalgebra relazionale•permette correlare dati relazioni diverse atzeni basi dati ,"[3, 9]","[(3, 0.37857652), (9, 0.55471915)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,15,"Il solito esempio(con nomi di attributi modificati in ""esami"")
19/10/2020Atzeni --Basi di dati I --3 63MatricolaCognomeNomeData di nascita6554RossiMario05/12/19788765NeriPaolo03/11/19763456RossiMaria01/02/19789283VerdiLuisa12/11/1979studenti
CodiceTitoloDocente01AnalisiMario02ChimicaBruni04ChimicaVerdicorsiMatricolaVotoCodice345630043456240292832801esami65542601",solito esempiocon nomi attributi modificati esami atzeni basi dati matricolacognomenomedata nascitarossimarioneripaolorossimariaverdiluisastudenti codicetitolodocenteanalisimariochimicabrunichimicaverdicorsimatricolavotocodiceesami,"[0, 1, 2, 3, 4]","[(0, 0.010005854), (1, 0.0100046145), (2, 0.90995634), (3, 0.010004468), (4, 0.010004081)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,16,"Join naturale•operatore binario (generalizzabile)•produce un risultato •sull'unione degli attributi degli operandi•con ennuple costruite ciascuna a partire da una ennupla di ognuno degli operandi
19/10/2020Atzeni --Basi di dati I --3 66",join naturale•operatore binario generalizzabile•produce risultato •sullunione attributi operandi•con ennuple costruite ciascuna partire ennupla ognuno operandi atzeni basi dati ,[9],"[(9, 0.93996716)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,17,"Join, sintassi e semantica•alla lavagna
19/10/2020Atzeni --Basi di dati I --3 67",join sintassi semantica•alla lavagna atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.014291905), (1, 0.014289917), (2, 0.014291956), (3, 0.014291509), (4, 0.014289397)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,18,"Esempi•alla lavagna•join completo, non completo, vuoto, mxn 
19/10/2020Atzeni --Basi di dati I --3 69",esempi•alla lavagna•join completo completo vuoto mxn atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.012504032), (1, 0.012503343), (2, 0.012503497), (3, 0.01250348), (4, 0.012502757)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.7-ALgebra Relazionale 2.pdf,19,"Cardinalità del join•Il join di R1e R2contiene un numero di ennuple …•alla lavagna (chiavi, vincoli integrità referenziale)
19/10/2020Atzeni --Basi di dati I --3 74",cardinalità join•il join re rcontiene numero ennuple …•alla lavagna chiavi vincoli integrità referenziale atzeni basi dati ,[0],"[(0, 0.9307368)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,0,"ImpiegatoRepartoRossiANeriBBianchiBRepartoCapoBMoriCBruniNeriBMoriImpiegatoRepartoCapoBianchiBMoriACJoin, una difficoltà
•alcune ennuple non contribuiscono al risultato: vengono ""tagliate fuori""19/10/2020Atzeni --Basi di dati I --3 77",impiegatorepartorossianeribbianchibrepartocapobmoricbrunineribmoriimpiegatorepartocapobianchibmoriacjoin difficoltà •alcune ennuple contribuiscono risultato vengono tagliate fuoriatzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.01111529), (1, 0.011115111), (2, 0.011114652), (3, 0.8999664), (4, 0.011114393)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,1,"Join esterno•Il join esternoestende, con valori nulli, le ennuple che verrebbero tagliate fuori da un join (interno)•esiste in tre versioni:•sinistro, destro, completo
19/10/2020Atzeni --Basi di dati I --3 78",join esterno•il join esternoestende valori nulli ennuple verrebbero tagliate fuori join interno•esiste tre versioni•sinistro destro completo atzeni basi dati ,[8],"[(8, 0.9470346)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,2,"ImpiegatoRepartoRossiANeriBBianchiBRepartoCapoBMoriCBruniACJoin, esterno
•alla lavagna19/10/2020Atzeni --Basi di dati I --3 80",impiegatorepartorossianeribbianchibrepartocapobmoricbruniacjoin esterno •alla lavagnaatzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.8198937), (1, 0.020011147), (2, 0.020011444), (3, 0.020011766), (4, 0.020010537)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,3,"Join e proiezioniImpiegatoRepartoRossiANeriBBianchiBRepartoCapoBMoriCBruni
19/10/2020Atzeni --Basi di dati I --3 85•alla lavagna",join proiezioniimpiegatorepartorossianeribbianchibrepartocapobmoricbruni atzeni basi dati •alla lavagna,"[0, 1, 2, 3, 4]","[(0, 0.016674586), (1, 0.016672242), (2, 0.01667553), (3, 0.016674109), (4, 0.016671773)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,4,"Join e proiezioni•R1(X1),R2(X2) PROJX1 (R1JOIN R2 ) ÍR1
19/10/2020Atzeni --Basi di dati I --3 86",join proiezioni•rxrx projx rjoin r ír atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.014289436), (1, 0.0142889265), (2, 0.871395), (3, 0.014289791), (4, 0.014288149)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,5,"Proiezioni e joinNeriBMoriImpiegatoRepartoCapoBianchiBBruniVerdiABini
19/10/2020Atzeni --Basi di dati I --3 87•alla lavagna",proiezioni joinneribmoriimpiegatorepartocapobianchibbruniverdiabini atzeni basi dati •alla lavagna,"[0, 1, 2, 3, 4]","[(0, 0.016673477), (1, 0.016671915), (2, 0.8499452), (3, 0.016672367), (4, 0.016670853)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,6,Proiezioni e joinNeriBMoriImpiegatoRepartoCapoBianchiBBruniVerdiABiniNeriBImpiegatoRepartoBianchiBVerdiABMoriRepartoCapoBBruniABiniVerdiABiniNeriBMoriImpiegatoRepartoCapoNeriBBruniBianchiBMoriBianchiBBruni19/10/2020Atzeni --Basi di dati I --3 89,proiezioni joinneribmoriimpiegatorepartocapobianchibbruniverdiabinineribimpiegatorepartobianchibverdiabmorirepartocapobbruniabiniverdiabinineribmoriimpiegatorepartocaponeribbrunibianchibmoribianchibbruniatzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.025009057), (1, 0.025007106), (2, 0.77493125), (3, 0.025008403), (4, 0.025004726)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,7,"Join e proiezioni•R1(X1),R2(X2) PROJX1 (R1JOIN R2 ) ÍR1•R(X),  X = X1ÈX2(PROJX1 (R))JOIN (PROJX2 (R)) ÊR 19/10/2020Atzeni --Basi di dati I --3 90",join proiezioni•rxrx projx rjoin r ír•rx x xèxprojx rjoin projx r êr atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.011113848), (1, 0.011113555), (2, 0.89997554), (3, 0.0111140525), (4, 0.011113109)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,8,Prodotto cartesiano•un join naturale su relazioni senza attributi in comune•contiene sempre un numero di ennuple pari al prodotto delle cardinalità degli operandi (le ennuple sono tutte combinabili)19/10/2020Atzeni --Basi di dati I --3 91,prodotto cartesiano•un join naturale relazioni senza attributi comune•contiene sempre numero ennuple pari prodotto cardinalità operandi le ennuple tutte combinabiliatzeni basi dati ,[0],"[(0, 0.9499802)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,9,RossiANeriBBianchiBImpiegatoRepartoImpiegatiAMoriBBruniBBruniBBruniCodiceCapoRepartiImpiegati JOINReparti ImpiegatoRepartoCapoCodiceRossiAMoriAAARossiABBruniNeriBMoriANeriBBBruniBianchiBMoriABianchiBBBruni19/10/2020Atzeni --Basi di dati I --3 92,rossianeribbianchibimpiegatorepartoimpiegatiamoribbrunibbrunibbrunicodicecaporepartiimpiegati joinreparti impiegatorepartocapocodicerossiamoriaaarossiabbrunineribmorianeribbbrunibianchibmoriabianchibbbruniatzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.77489614), (1, 0.02501158), (2, 0.025012096), (3, 0.02501265), (4, 0.025009647)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,10,"•Il prodotto cartesiano, in pratica, ha senso (quasi) solo se seguito da selezione:SELCondizione(R1JOINR2)•L'operazione viene chiamata theta-join e indicata con R1JOINCondizioneR2
19/10/2020Atzeni --Basi di dati I --3 93",•il prodotto cartesiano pratica senso quasi solo seguito selezioneselcondizionerjoinr•loperazione viene chiamata theta join indicata rjoincondizioner atzeni basi dati ,[9],"[(9, 0.9437259)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,11,"Equi-join•Se l'operatore di confronto nel theta-join è sempre l'uguaglianza (=) allora si parla di equi-joinNota: ci interessa davvero l'equi-join, non il theta-join più generale
19/10/2020Atzeni --Basi di dati I --3 95",equi join•se loperatore confronto theta join sempre luguaglianza allora parla equi joinnota interessa davvero lequi join theta join generale atzeni basi dati ,[5],"[(5, 0.95907253)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,12,RossiANeriBBianchiBImpiegatoRepartoImpiegatiAMoriBBruniBBruniBBruniCodiceCapoRepartiImpiegati JOINReparto=CodiceReparti ImpiegatoRepartoCapoCodiceRossiAMoriAAARossiABBruniNeriBMoriANeriBBBruniBianchiBMoriABianchiBBBruniRossiAMoriAAANeriBBBruniBianchiBBBruni19/10/2020Atzeni --Basi di dati I --3 96,rossianeribbianchibimpiegatorepartoimpiegatiamoribbrunibbrunibbrunicodicecaporepartiimpiegati joinrepartocodicereparti impiegatorepartocapocodicerossiamoriaaarossiabbrunineribmorianeribbbrunibianchibmoriabianchibbbrunirossiamoriaaaneribbbrunibianchibbbruniatzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.033346716), (1, 0.033343088), (2, 0.03334423), (3, 0.033345394), (4, 0.033338703)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,13,"Join naturale ed equi-join•In pratica, ciò che ci interessa è l'equi-join•Il join naturale lo abbiamo usato solo a fini didattici, perché i concetti sono più semplici•Nelle interrogazioni ""pratiche"" useremo l'equi-join
19/10/2020Atzeni --Basi di dati I --3 100",join naturale equi join•in pratica ciò interessa lequi join•il join naturale usato solo fini didattici concetti semplici•nelle interrogazioni pratiche useremo lequi join atzeni basi dati ,[9],"[(9, 0.95905834)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,14,"Equivalenza di espressioni•Due espressioni sono equivalentise producono risultati uguali fra loro  qualunque su ogni istanza della base di dati•L'equivalenza è importante in pratica perché i DBMS cercano di eseguire espressioni equivalenti a quelle date, ma meno ""costose""19/10/2020Atzeni --Basi di dati I --3 101",equivalenza espressioni•due espressioni equivalentise producono risultati uguali fra qualunque ogni istanza base dati•lequivalenza importante pratica dbms cercano eseguire espressioni equivalenti date meno costoseatzeni basi dati ,[4],"[(4, 0.96246725)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,15,"Un'equivalenza importante•Pushselections(se A è attributo di R1 )SELA=10 (R1JOINR2) = SELA=10 (R1) JOINR2
19/10/2020Atzeni --Basi di dati I --3 103",unequivalenza importante•pushselectionsse attributo r sela rjoinr sela r joinr atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.010007411), (1, 0.010004362), (2, 0.010004512), (3, 0.010004446), (4, 0.010004046)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,16,"Nota•In questo corso, ci preoccupiamo poco dell’efficienza: •l’obiettivo è di scrivere interrogazioni corrette e leggibili•Motivazione:•I DBMS si preoccupano di scegliere le strategie realizzative efficienti19/10/2020Atzeni --Basi di dati I --3 104",nota•in corso preoccupiamo poco dell’efficienza •l’obiettivo scrivere interrogazioni corrette leggibili•motivazione•i dbms preoccupano scegliere strategie realizzative efficientiatzeni basi dati ,[5],"[(5, 0.9356756)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,17,"Viste (relazioni derivate)•Relazioni di base:contenuto autonomo, le relazioni nella base di dati•Relazioni derivate:•relazioni il cui contenuto è funzione del contenuto di altre relazioni (definito per mezzo di interrogazioni)•Le relazioni derivate possono essere definite su altre derivate, ma …19/10/2020Atzeni --Basi di dati I --3 106",viste relazioni derivate•relazioni basecontenuto autonomo relazioni base dati•relazioni derivate•relazioni contenuto funzione contenuto altre relazioni definito mezzo interrogazioni•le relazioni derivate possono essere definite altre derivate …atzeni basi dati ,"[0, 1, 9]","[(0, 0.07701292), (1, 0.39348403), (9, 0.49904713)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,18,"Viste, esempio•una vista:Supervisione = PROJImpiegato,  Capo(Afferenza JOIN Direzione)AMoriBBruniRepartoCapoRossiANeriBBianchiBImpiegatoRepartoAfferenzaDirezione
19/10/2020Atzeni --Basi di dati I --3 108",viste esempio•una vistasupervisione projimpiegato capoafferenza join direzioneamoribbrunirepartocaporossianeribbianchibimpiegatorepartoafferenzadirezione atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.012505587), (1, 0.0125076305), (2, 0.8874469), (3, 0.012505851), (4, 0.012504632)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,19,"Interrogazioni sulle viste•Sono eseguite sostituendo alla vista la sua definizione:SELCapo='Leoni'(Supervisione)viene eseguita comeSELCapo='Leoni'(PROJImpiegato,  Capo(Afferenza JOIN Direzione))19/10/2020Atzeni --Basi di dati I --3 112",interrogazioni viste•sono eseguite sostituendo vista definizioneselcapoleonisupervisioneviene eseguita comeselcapoleoniprojimpiegato capoafferenza join direzioneatzeni basi dati ,[1],"[(1, 0.9181303)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,20,"Viste, motivazioniNota bene:•L'utilizzo di viste non influisce sull'efficienza delle interrogazioniVantaggi:•Soprattutto:•Strumento di programmazione: •si può semplificare la scrittura di interrogazioni: espressioni complesse e sottoespressioniripetute•Ogni utente vede solo  •ciò che gli interessa e nel modo in cui gli interessa, senza essere distratto dal resto•ciò che e'autorizzato a vedere (autorizzazioni)•Utilizzo di programmi esistenti su schemi ristrutturati19/10/2020Atzeni --Basi di dati I --3 113",viste motivazioninota bene•lutilizzo viste influisce sullefficienza interrogazionivantaggi•soprattutto•strumento programmazione •si può semplificare scrittura interrogazioni espressioni complesse sottoespressioniripetute•ogni utente vede solo •ciò interessa modo interessa senza essere distratto resto•ciò eautorizzato vedere autorizzazioni•utilizzo programmi esistenti schemi ristrutturatiatzeni basi dati ,[1],"[(1, 0.9678441)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,21,"Viste come strumento di programmazione•Trovare gli impiegati che hanno lo stesso capo di Rossi•Senza vista:PROJ Impiegato((Afferenza JOIN Direzione) JOINREN ImpR,RepR ¬Imp,Reparto (SEL Impiegato='Rossi'(Afferenza JOIN Direzione))) •Con la vista:PROJ Impiegato(SupervisioneJOINREN ImpR¬Imp (SEL Impiegato='Rossi'(Supervisione))) 19/10/2020Atzeni --Basi di dati I --3 114",viste strumento programmazione•trovare impiegati stesso capo rossi•senza vistaproj impiegatoafferenza join direzione joinren imprrepr ¬impreparto sel impiegatorossiafferenza join direzione •con vistaproj impiegatosupervisionejoinren impr¬imp sel impiegatorossisupervisione atzeni basi dati ,"[2, 9]","[(2, 0.63334346), (9, 0.32449874)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,22,"Un servizio online per esercitazioni in algebra relazionale•RelaX•http://dbis-uibk.github.io/relax/calc•Verrà proposto un “homework” il cui svolgimento sarà necessario per partecipare alla prova parziale
19/10/2020Atzeni --Basi di dati I --3 117",servizio online esercitazioni algebra relazionale•relax•httpdbis uibkgithubiorelaxcalc•verrà proposto “homework” svolgimento necessario partecipare prova parziale atzeni basi dati ,[5],"[(5, 0.9356739)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,23,"RelaX•Utilizza una sintassi molto simile a quella vista a lezione e sul libro•L’editor aiuta nella scrittura degli operatori e dei nomi di relazione e di attributo (basta cliccare sul simbolo desiderato)•Talvolta è utile scrivere direttamente –allora attenzione a maiuscole e minuscole (è “case-sensitive”)•Le espressioni sono talvolta di lettura non semplice, perché tutto su una linea, senza “pedici”: •scriviamo σStipendio>40 (Impiegati) invecedi                   σStipendio>40 (Impiegati) •Attenzione agli spazi (talvolta il parsersi confonde) e spesso è utile qualche parentesi in più•Una differenza nella “assegnazione”; serve una “ridenominazione” esplicita della relazione; invece di Capi := Impiegatidobbiamo scrivereCapi= ρCapi(Impiegati)19/10/2020Atzeni --Basi di dati I --3 118",relax•utilizza sintassi molto simile vista lezione libro•l’editor aiuta scrittura operatori nomi relazione attributo basta cliccare simbolo desiderato•talvolta utile scrivere direttamente –allora attenzione maiuscole minuscole è “case sensitive”•le espressioni talvolta lettura semplice linea senza “pedici” •scriviamo σstipendio impiegati invecedi σstipendio impiegati •attenzione spazi talvolta parsersi confonde spesso utile qualche parentesi più•una differenza “assegnazione” serve “ridenominazione” esplicita relazione invece capi impiegatidobbiamo scriverecapi ρcapiimpiegatiatzeni basi dati ,[5],"[(5, 0.981627)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,24,"Rappresentazione grafica•RelaX fornisce anche una rappresentazione grafica delle espressioni sotto forma di albero, molto espressiva•Ogni operatore è un nodo, con uno o due nodi discendenti (a seconda che abbia uno o due operandi) e le foglie sono relazioni nella base di dati•Nei lucidi seguenti sono mostrate le interrogazioni discusse in aula e per ciascuna è mostrata la formulazione mostrata in aula, quelle in RelaX (molto simile) e l’albero generato da RelaX19/10/2020Atzeni --Basi di dati I --3 119",rappresentazione grafica•relax fornisce rappresentazione grafica espressioni sotto forma albero molto espressiva•ogni operatore nodo due nodi discendenti a seconda due operandi foglie relazioni base dati•nei lucidi seguenti mostrate interrogazioni discusse aula ciascuna mostrata formulazione mostrata aula relax molto simile l’albero generato relaxatzeni basi dati ,"[0, 4]","[(0, 0.2677079), (4, 0.7106462)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,25,"Dati •Accedendo al servizio si possono specificare interrogazioni su una base di dati•fra quelle disponibili sul servizio, oppure•su una “caricata” dall’utente•Per i primi esempi (in questa presentazione), le basi di dati sono state predisposte e possono essere caricatrselezionando il bottone “Loada data-set” e inserendo nel campo “Loaddatasetstoredin a gist” il relativo link 1a9dc6cd0f3478388fc177dfc9b5a314(prima bd) b7a8eac38317e0d6a7f0b904a9a10bd3(seconda bd)•oppure, più semplicemente richiamando RelaXcon l’url:http://dbis-uibk.github.io/relax/calc/gist/1a9dc6cd0f3478388fc177dfc9b5a314http://dbis-uibk.github.io/relax/calc/gist/b7a8eac38317e0d6a7f0b904a9a10bd3•Ulteriori basi di dati (data-set nella terminologia di RelaX) possono essere predisposti con una sintassi molto semplice e caricati su github(vedere l’help)19/10/2020Atzeni --Basi di dati I --3 120",dati •accedendo servizio possono specificare interrogazioni base dati•fra disponibili servizio oppure•su “caricata” dall’utente•per primi esempi in presentazione basi dati state predisposte possono essere caricatrselezionando bottone “loada data set” inserendo campo “loaddatasetstoredin gist” relativo link adccdffcdfcbaprima bd baeacedafbaabdseconda bd•oppure semplicemente richiamando relaxcon l’urlhttpdbis uibkgithubiorelaxcalcgistadccdffcdfcbahttpdbis uibkgithubiorelaxcalcgistbaeacedafbaabd•ulteriori basi dati data set terminologia relax possono essere predisposti sintassi molto semplice caricati githubvedere l’helpatzeni basi dati ,[0],"[(0, 0.97998494)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,26,"Impiegati = {Matricola, Nome, Eta:number, Stipendio:number7309, Rossi, 34, 455998, Bianchi, 37, 389553, Neri, 42, 355698, Bruni, 43, 424076, Mori, 45, 508123, Lupi, 46, 60}Supervisione = {Impiegato, Capo7309, 56985998, 56989553, 40765698, 40764076, 8123}19/10/2020Atzeni --Basi di dati I --3 121",impiegati matricola nome etanumber stipendionumber rossi bianchi neri bruni mori lupi supervisione impiegato capo atzeni basi dati ,[7],"[(7, 0.9499605)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,27,EsempiImpiegati NomeEtàStipendioMatricolaBianchi37385998Rossi34457309Bruni43425698Neri42359553Mori45504076Lupi46608123Supervisione ImpiegatoCapo599873095698955340765698569840764076812319/10/2020Atzeni --Basi di dati I --3 123,esempiimpiegati nomeetàstipendiomatricolabianchirossibruninerimorilupisupervisione impiegatocapoatzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.77489614), (1, 0.02501158), (2, 0.025012095), (3, 0.025012648), (4, 0.025009647)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,28,"•Trovare matricola, nome, età e stipendio degli impiegati che guadagnano più di 40SELStipendio>40(Impiegati)σStipendio>40 (Impiegati))
19/10/2020Atzeni --Basi di dati I --3 124
",•trovare matricola nome età stipendio impiegati guadagnano selstipendioimpiegatiσstipendio impiegati atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.010001767), (1, 0.010001613), (2, 0.010001609), (3, 0.010001841), (4, 0.01000108)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,29,"•Trovare matricola, nome ed età degli impiegati che guadagnano più di 40PROJMatricola, Nome, Età (SELStipendio>40(Impiegati))π Matricola, Nome, Eta (σStipendio>40 (Impiegati))
19/10/2020Atzeni --Basi di dati I --3 125
",•trovare matricola nome età impiegati guadagnano projmatricola nome età selstipendioimpiegatiπ matricola nome eta σstipendio impiegati atzeni basi dati ,[5],"[(5, 0.93998355)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,30,"•Trovare le matricole dei capi degli impiegati che guadagnano più di 40PROJCapo(SupervisioneJOINImpiegato=Matricola(SELStipendio>40(Impiegati)))π Capo  ((Supervisione) ⨝Impiegato=Matricola(σStipendio>40 (Impiegati)))
19/10/2020Atzeni --Basi di dati I --3 126
",•trovare matricole capi impiegati guadagnano projcaposupervisionejoinimpiegatomatricolaselstipendioimpiegatiπ capo supervisione ⨝impiegatomatricolaσstipendio impiegati atzeni basi dati ,[9],"[(9, 0.91813093)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,31,"•Trovare nome e stipendio dei capi degli impiegati che guadagnano più di 40PROJNome,Stipendio(ImpiegatiJOINMatricola=Capo PROJCapo(SupervisioneJOINImpiegato=Matricola(SELStipendio>40(Impiegati))))π Nome,Stipendio(Impiegati⨝Matricola= Capo (π Capo  ((Supervisione) ⨝Impiegato=Matricola(σStipendio>40 (Impiegati)))))19/10/2020Atzeni --Basi di dati I --3 127
",•trovare nome stipendio capi impiegati guadagnano projnomestipendioimpiegatijoinmatricolacapo projcaposupervisionejoinimpiegatomatricolaselstipendioimpiegatiπ nomestipendioimpiegati⨝matricola capo π capo supervisione ⨝impiegatomatricolaσstipendio impiegatiatzeni basi dati ,"[5, 7]","[(5, 0.21543142), (7, 0.71788174)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,32,"•Trovare matricola, nome e stipendio dei capi degli impiegati che guadagnano più di 40; per ciascuno, mostrare, matricola, nome e stipendio anche dell'impiegato
19/10/2020Atzeni --Basi di dati I --3 128",•trovare matricola nome stipendio capi impiegati guadagnano ciascuno mostrare matricola nome stipendio dellimpiegato atzeni basi dati ,[5],"[(5, 0.94373673)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,33,"•Trovare matricola, nome e stipendio dei capi degli impiegati che guadagnano più di 40; per ciascuno, mostrare, matricola, nome e stipendio anche dell'impiegatoPROJMatr,Nome,Stip,MatrC,NomeC,StipC(RENMatrC,NomeC,StipC,EtàC¬Matr,Nome,Stip,Età(Impiegati)JOIN MatrC=Capo (SupervisioneJOIN Impiegato=MatricolaSELStipendio>40(Impiegati)))
19/10/2020Atzeni --Basi di dati I --3 129
π Matricola, Nome, Stipendio, MatrC, NomeC, StipC(ρMatrC←Matricola, NomeC←Nome, StipC←Stipendio, EtaC←Eta(Impiegati)⨝MatrC= Capo(((Supervisione) ⨝Impiegato=Matricola(σStipendio>40 (Impiegati)))))",•trovare matricola nome stipendio capi impiegati guadagnano ciascuno mostrare matricola nome stipendio dellimpiegatoprojmatrnomestipmatrcnomecstipcrenmatrcnomecstipcetàc¬matrnomestipetàimpiegatijoin matrccapo supervisionejoin impiegatomatricolaselstipendioimpiegati atzeni basi dati π matricola nome stipendio matrc nomec stipcρmatrc←matricola nomec←nome stipc←stipendio etac←etaimpiegati⨝matrc caposupervisione ⨝impiegatomatricolaσstipendio impiegati,[5],"[(5, 0.95908344)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,34,"•La notazione con le ridenominazioni, pur corretta, è un po’ troppo “verbosa""•Ne vediamo un’altra, basata sulle viste
19/10/2020Atzeni --Basi di dati I --3 130",•la notazione ridenominazioni pur corretta po’ troppo “verbosa•ne vediamo un’altra basata viste atzeni basi dati ,[7],"[(7, 0.9249647)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,35,"Una convenzione e notazione alternativa per i join•Nota: è sostanzialmente l'approccio usato in SQL•Ignoriamo il join naturale (cioè non consideriamo implicitamente condizioni su attributi con nomi uguali)•Per ""riconoscere"" attributi con lo stesso nome gli premettiamo il nome della relazione•Usiamo viste (o ""assegnazioni”) per ridenominare le relazioni •(ridenominiamo gli attributi solo quando serve per l'unione o per dare nomi significativi nel riusltato)19/10/2020Atzeni --Basi di dati I --3 131",convenzione notazione alternativa join•nota sostanzialmente lapproccio usato sql•ignoriamo join naturale cioè consideriamo implicitamente condizioni attributi nomi uguali•per riconoscere attributi stesso nome premettiamo nome relazione•usiamo viste o assegnazioni” ridenominare relazioni •ridenominiamo attributi solo quando serve lunione dare nomi significativi riusltatoatzeni basi dati ,"[2, 5]","[(2, 0.84609854), (5, 0.13034438)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,36,"19/10/2020Atzeni --Basi di dati I --3 132•Trovare matricola, nome e stipendio dei capi degli impiegati che guadagnano più di 40; per ciascuno, mostrare, matricola, nome e stipendio anche dell'impiegatoPROJMatr,Nome,Stip,MatrC,NomeC,StipC (RENMatrC,NomeC,StipC,EtàC¬Matr,Nome,Stip,Età(Impiegati)JOIN MatrC=Capo (Supervisione JOIN Impiegato=Matricola SELStipendio>40(Impiegati)))",atzeni basi dati •trovare matricola nome stipendio capi impiegati guadagnano ciascuno mostrare matricola nome stipendio dellimpiegatoprojmatrnomestipmatrcnomecstipc renmatrcnomecstipcetàc¬matrnomestipetàimpiegatijoin matrccapo supervisione join impiegatomatricola selstipendioimpiegati,"[5, 7]","[(5, 0.7983967), (7, 0.15714869)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,37,"RelaX•Utilizza una sintassi molto simile a quella vista a lezione e sul libro•L’editor aiuta nella scrittura degli operatori e dei nomi di relazione e di attributo (basta cliccare sul simbolo desiderato)•Talvolta è utile scrivere direttamente –allora attenzione a maiuscole e minuscole (è “case-sensitive”)•Le espressioni sono talvolta di lettura non semplice, perché tutto su una linea, senza “pedici”: •scriviamo σStipendio>40 (Impiegati) invecedi                   σStipendio>40 (Impiegati) •Attenzione agli spazi (talvolta il parsersi confonde) e spesso è utile qualche parentesi in più•Una differenza nella “assegnazione”; serve una “ridenominazione” esplicita della relazione; invece di Capi := Impiegatidobbiamo scrivereCapi= ρCapi(Impiegati)19/10/2020Atzeni --Basi di dati I --3 134",relax•utilizza sintassi molto simile vista lezione libro•l’editor aiuta scrittura operatori nomi relazione attributo basta cliccare simbolo desiderato•talvolta utile scrivere direttamente –allora attenzione maiuscole minuscole è “case sensitive”•le espressioni talvolta lettura semplice linea senza “pedici” •scriviamo σstipendio impiegati invecedi σstipendio impiegati •attenzione spazi talvolta parsersi confonde spesso utile qualche parentesi più•una differenza “assegnazione” serve “ridenominazione” esplicita relazione invece capi impiegatidobbiamo scriverecapi ρcapiimpiegatiatzeni basi dati ,[5],"[(5, 0.9816271)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,38,"PROJImp.Matr, Imp.Nome, Imp.Stip,Capi.Matr,Capi.Nome, Capi.Stip(CapiJOIN Capi.Matr=Capo(Sup JOIN Imp=Imp.MatrSELStipendio>40(Imp)))Capi := Imp
19/10/2020Atzeni --Basi di dati I --3 135
Capi= ρCapi(Impiegati)π Impiegati.Matricola, Impiegati.Nome, Impiegati.Stipendio, Capi.Matricola, Capi.Nome, Capi.Stipendio(Capi⨝Capi.Matricola= Capo(((Supervisione) ⨝Impiegato=Matricola(σStipendio>40 (Impiegati)))))",projimpmatr impnome impstipcapimatrcapinome capistipcapijoin capimatrcaposup join impimpmatrselstipendioimpcapi imp atzeni basi dati capi ρcapiimpiegatiπ impiegatimatricola impiegatinome impiegatistipendio capimatricola capinome capistipendiocapi⨝capimatricola caposupervisione ⨝impiegatomatricolaσstipendio impiegati,[5],"[(5, 0.9399683)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,39,"•Trovare gli impiegati che guadagnano più del proprio capo, mostrando matricola, nome e stipendio dell'impiegato e del capo
19/10/2020Atzeni --Basi di dati I --3 136",•trovare impiegati guadagnano proprio capo mostrando matricola nome stipendio dellimpiegato capo atzeni basi dati ,[7],"[(7, 0.9356924)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,40,"PROJMatr,Nome,Stip,MatrC,NomeC,StipC(SELStipendio>StipC(RENMatrC,NomeC,StipC,EtàC¬Matr,Nome,Stip,Età(Impiegati)JOIN MatrC=Capo (SupervisioneJOIN Impiegato=MatricolaImpiegati)))π Matricola, Nome, Stipendio, MatrC, NomeC, StipC(σStipendio>StipC(ρMatrC←Matricola, NomeC←Nome, StipC←Stipendio, EtaC←Eta(Impiegati)⨝MatrC= Capo((Supervisione) ⨝Impiegato=Matricola(Impiegati))))
19/10/2020Atzeni --Basi di dati I --3 137
",projmatrnomestipmatrcnomecstipcselstipendiostipcrenmatrcnomecstipcetàc¬matrnomestipetàimpiegatijoin matrccapo supervisionejoin impiegatomatricolaimpiegatiπ matricola nome stipendio matrc nomec stipcσstipendiostipcρmatrc←matricola nomec←nome stipc←stipendio etac←etaimpiegati⨝matrc caposupervisione ⨝impiegatomatricolaimpiegati atzeni basi dati ,"[0, 1, 2, 3, 4]","[(0, 0.010002129), (1, 0.010001802), (2, 0.010002154), (3, 0.010002152), (4, 0.010001583)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,41,"•Trovare gli impiegati che guadagnano più del proprio capo, mostrando matricola, nome e stipendio dell'impiegato e del capoPROJMatr,Nome,Stip,MatrC,NomeC,StipC (SELStipendio>StipC(RENMatrC,NomeC,StipC,EtàC¬Matr,Nome,Stip,Età(Impiegati)JOIN MatrC=Capo (Supervisione JOIN Impiegato=Matricola Impiegati)))19/10/2020Atzeni --Basi di dati I --3 138",•trovare impiegati guadagnano proprio capo mostrando matricola nome stipendio dellimpiegato capoprojmatrnomestipmatrcnomecstipc selstipendiostipcrenmatrcnomecstipcetàc¬matrnomestipetàimpiegatijoin matrccapo supervisione join impiegatomatricola impiegatiatzeni basi dati ,[7],"[(7, 0.9437285)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,42,"PROJMatr,Nome,Stip,MatrC,NomeC,StipC(SELStip>StipC(RENMatrC,NomeC,StipC,EtàC¬Matr,Nome,Stip,Età(Imp)JOIN MatrC=Capo (Sup JOIN Imp=MatrImp)))PROJImp.Matr, Imp.Nome, Imp.Stip,Capi.Matr,Capi.Nome, Capi.Stip(SELImp.Stip>Capi.Stip( CapiJOIN Capi.Matr=Capo (Sup JOIN Imp=Imp.MatrImp)))Capi:= Imp
19/10/2020Atzeni --Basi di dati I --3 139
",projmatrnomestipmatrcnomecstipcselstipstipcrenmatrcnomecstipcetàc¬matrnomestipetàimpjoin matrccapo sup join impmatrimpprojimpmatr impnome impstipcapimatrcapinome capistipselimpstipcapistip capijoin capimatrcapo sup join impimpmatrimpcapi imp atzeni basi dati ,[2],"[(2, 0.93073356)]"
dataExtraction\data_test\rootfolder\universita\basiDiDati\0.8-Algebra Relazionale 2.pdf,43,"•Trovare le matricole dei capi i cui impiegati guadagnano tuttipiù di 40PROJCapo (Supervisione) -PROJCapo (Supervisione JOINImpiegato=Matricola (SELStipendio £40(Impiegati)))π Capo (Supervisione) –π Capo (Supervisione ⨝Impiegato=Matricola ( σ Stipendio ≤ 40 (Impiegati)))
19/10/2020Atzeni --Basi di dati I --3 140
",•trovare matricole capi impiegati guadagnano tuttipiù projcapo supervisione projcapo supervisione joinimpiegatomatricola selstipendio £impiegatiπ capo supervisione –π capo supervisione ⨝impiegatomatricola σ stipendio ≤ impiegati atzeni basi dati ,"[7, 9]","[(7, 0.7495239), (9, 0.20835274)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\00-introduzione-corso-01.pdf,0,"9/29/2021
100-introduzione -corso -01
1Next Generation Computing Models
Introduzione
2obiettivi formativi
•introduzione al modello di calcolo del 
quantum computing con un approccio 
informatico
•introduzione ai modelli di calcolo 
centrati sui dati, di interesse per le 
tecnologie big data1
2", introduzione corso next generation computing models introduzione obiettivi formativi •introduzione modello calcolo quantum computing approccio informatico •introduzione modelli calcolo centrati dati interesse tecnologie big data ,[8],"[(8, 0.96249056)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\00-introduzione-corso-01.pdf,1,"9/29/2021
200-introduzione -corso -01
3modelli di calcolo e informatica
•macchina di Turing
•lambda calcolo
•modelli per il calcolo parallelo e 
distribuito
•modelli per gerarchie di memorie
•molti altrimodell i
4programma
•quantum computing
–qubit
–coppie di qubit
–registri
–porte con uno o piu'qubit
–no cloning theorem
–l'operatore di Hadamard
–computazioni reversibili
–l'algoritmo di Bernstein Vazirani
–l'algoritmo di Shor
–teoria della complessità e quantum computing3
4", introduzione corso modelli calcolo informatica •macchina turing •lambda calcolo •modelli calcolo parallelo distribuito •modelli gerarchie memorie •molti altrimodell programma •quantum computing –qubit –coppie qubit –registri –porte piuqubit –no cloning theorem –loperatore hadamard –computazioni reversibili –lalgoritmo bernstein vazirani –lalgoritmo shor –teoria complessità quantum computing ,[3],"[(3, 0.9666543)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\00-introduzione-corso-01.pdf,2,"9/29/2021
300-introduzione -corso -01
5programma
•teoria della complessità e big data
–la classe Pspazio
–Pspazio -completezza
–teorema di Savitch
–le classi L e NL
–NL-completezza
–NL e co -NL
–algoritmi randomizzati e la classe BPP
6testi consigliati (consultazione )
•E. G. Rieffel , W. H. Polak
Quantum Computing: a Gentle Introduction
MIT Press 
•N. S. Yanofsky , M. A. Mannucci
Quantum Computing for Computer Scientists
Cambridge 
•Michael Sipser
Introduction to the Theory of Computation
Thompson
•lezioni suYoutube di Umesh Vazirani (notevoli!)5
6", introduzione corso programma •teoria complessità big data –la classe pspazio –pspazio completezza –teorema savitch –le classi nl –nl completezza –nl co nl –algoritmi randomizzati classe bpp testi consigliati consultazione •e g rieffel w h polak quantum computing gentle introduction mit press •n s yanofsky m a mannucci quantum computing for computer scientists cambridge •michael sipser introduction to the theory of computation thompson •lezioni suyoutube umesh vazirani notevoli ,[8],"[(8, 0.9816248)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\05-quantum-introduzione-03.pdf,0,"9/29/2021
105-quantum -introduzione -03
1Next Generation Computing Models
Quantum Computing
Introduzione
quantum computing
•un nuovo modello di calcolo che
–potrebbe essere fisicamente realizzabile
–potrebbe avere un vantaggio esponenziale, in alcuni 
casi, rispetto ai computer tradizionali 
•il modello pone una seria sfida alla strong 
Church -Turing Thesis
–che dice che qualunque modello di calcolo può essere 
simulato da una Macchina di Turing con al più uno 
svantaggio polinomiale in termini di tempo
21
2", quantum introduzione next generation computing models quantum computing introduzione quantum computing •un nuovo modello calcolo –potrebbe essere fisicamente realizzabile –potrebbe avere vantaggio esponenziale alcuni casi rispetto computer tradizionali •il modello pone seria sfida strong church turing thesis –che dice qualunque modello calcolo può essere simulato macchina turing svantaggio polinomiale termini tempo ,[5],"[(5, 0.9804271)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\05-quantum-introduzione-03.pdf,1,"9/29/2021
205-quantum -introduzione -03
quantum e non -quantum
•anche se il quantum computing dovesse 
affermarsi è ipotizzabile che i computer 
tradizionali continuino ad essere usati per 
risolvere la maggior parte dei problemi
3
un po’ di fisica
•per capire le basi del quantum computing occorre 
un pizzico di fisica
–i parametri fisici (energia, momento, spin, ….) di una 
particella elementare (es. elettrone) sono quantizzati e 
possono assumere valori solo in un insieme discreto
–gli stessi parametri ad un certo istante non hanno un 
valore che è un singolo numero; un parametro è 
invece associato a un’onda di probabilità 
(superposition )
–un parametro assume un singolo valore (collassa a un 
singolo numero) quando viene osservato 
43
4", quantum introduzione quantum quantum •anche quantum computing dovesse affermarsi ipotizzabile computer tradizionali continuino essere usati risolvere maggior parte problemi po’ fisica •per capire basi quantum computing occorre pizzico fisica –i parametri fisici energia momento spin … particella elementare es elettrone quantizzati possono assumere valori solo insieme discreto –gli parametri certo istante valore singolo numero parametro invece associato un’onda probabilità superposition –un parametro assume singolo valore collassa singolo numero quando viene osservato ,[5],"[(5, 0.98570955)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\05-quantum-introduzione-03.pdf,2,"9/29/2021
305-quantum -introduzione -03
qubit
•i computer tradizionali usano i bit, i cui valori 
possono essere 0 o 1
•i quantum computer usano i qubit
–normalmente particelle subatomiche come elettroni o 
fotoni in superposition
•generare e manipolare qubit è difficile
–IBM, Google, Rigetti Computing usano circuiti 
superconduttori raffreddati a temperature più fredde 
dello spazio profondo
–IonQ imprigiona atomi in campi elettromagnetici in 
camere ultra -high vacuum 5
due principali direzioni di lavoro
•sperimentale
–costruzione di computer che sfruttano i fenomeni 
della meccanica quantistica
•teorica
–quantum algorithms
•progetto di algoritmi che sfruttano il modello di calcolo 
della meccanica quantistica
–quantum protocols
•progetto di protocolli per trasmettere e ricevere 
informazioni sfruttando il modello di calcolo della 
meccanica quantistica
65
6", quantum introduzione qubit •i computer tradizionali usano bit valori possono essere •i quantum computer usano qubit –normalmente particelle subatomiche elettroni fotoni superposition •generare manipolare qubit difficile –ibm google rigetti computing usano circuiti superconduttori raffreddati temperature fredde spazio profondo –ionq imprigiona atomi campi elettromagnetici camere ultra high vacuum due principali direzioni lavoro •sperimentale –costruzione computer sfruttano fenomeni meccanica quantistica •teorica –quantum algorithms •progetto algoritmi sfruttano modello calcolo meccanica quantistica –quantum protocols •progetto protocolli trasmettere ricevere informazioni sfruttando modello calcolo meccanica quantistica ,[1],"[(1, 0.9865614)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\05-quantum-introduzione-03.pdf,3,"9/29/2021
405-quantum -introduzione -03
assiomi
studiamo un modello di calcolo che consente di 
astrarre rispetto alla meccanica quantistica, basato 
su tre assiomi
1.superposition
2.misura
3.evoluzione unitaria
7
ostacoli
•vettori e matrici
•numeri complessi
•un po’ di trigonometria
•pochissimo calcolo delle probabilità
87
8", quantum introduzione assiomi studiamo modello calcolo consente astrarre rispetto meccanica quantistica basato tre assiomi superposition misura evoluzione unitaria ostacoli •vettori matrici •numeri complessi •un po’ trigonometria •pochissimo calcolo probabilità ,[5],"[(5, 0.96249145)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\10-quantum-un-qubit-04.pdf,0,"9/29/2021
110-quantum -un-qubit -04
1Next Generation Computing Models
Quantum Computing
Un qubit
qubit
•nel calcolo tradizionale un bit può essere in 
alternativa nello stato 0o nello stato 1
•nel quantum computing si usano i qubit
•un qubit può essere simultaneamente nello stato 
0e nello stato 1(una superposition dei due stati)
21
2", quantum qubit next generation computing models quantum computing qubit qubit •nel calcolo tradizionale bit può essere alternativa stato o stato •nel quantum computing usano qubit •un qubit può essere simultaneamente stato e stato una superposition due stati ,"[1, 4, 5]","[(1, 0.29654115), (4, 0.2292528), (5, 0.45161217)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\10-quantum-un-qubit-04.pdf,1,"9/29/2021
210-quantum -un-qubit -04
qubit –ampiezze
•i due stati di base di un qubit si indicano di solito 
con |0e |1
•un qubit si trova in generale in uno stato descritto 
da 𝛼0|0+𝛼1|1, dove 𝛼0e 𝛼1sono numeri 
complessi ( 𝛼0,𝛼1∈𝕔) chiamati ampiezze
–con il vincolo |𝛼0|2+|𝛼1|2=1
–si ricorda che il modulo di un numero complesso z=
𝑥+𝑦𝑖è definito come 𝑧=𝑥2+𝑦2
–quindi 𝑧2=𝑥2+𝑦2
3
qubit –esempi 
•ad esempio un qubit può trovarsi nello 
stato(Τ12+Τ12𝑖)|ۧ0+ൗ1
2|ۧ1
–si noti come |(Τ12+Τ12𝑖)|2+|ൗ1
2|2=(
)Τ14+
Τ14+Τ12=1
•oppure un qubit può trovarsi nello stato 
ൗ1
2|0+ൗ1
2|1
43
4", quantum qubit qubit –ampiezze •i due stati base qubit indicano solito e  •un qubit trova generale stato descritto 𝛼𝛼 𝛼e 𝛼sono numeri complessi 𝛼𝛼∈𝕔 chiamati ampiezze –con vincolo 𝛼𝛼 –si ricorda modulo numero complesso z 𝑥𝑦𝑖è definito 𝑧𝑥𝑦 –quindi 𝑧𝑥𝑦 qubit –esempi •ad esempio qubit può trovarsi statoττ𝑖ۧൗ ۧ –si noti ττ𝑖ൗ τ ττ •oppure qubit può trovarsi stato ൗ ൗ  ,[5],"[(5, 0.97691804)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\10-quantum-un-qubit-04.pdf,2,"9/29/2021
310-quantum -un-qubit -04
qubit –misura
•quando un qubit è isolato si trova in una 
superposition
•quando viene misurato (osservato) collassa con 
probabilità |𝛼0|2a |0e con probabilità |𝛼1|2a 
|1
•dopo l’osservazione i valori di ampiezza sono 
irrimediabilmente perduti
–la misura disturba lo stato del sistema
5
qualche esempio sui numeri complessi
ricorda che 𝑖=−1e che 𝑖2=−1
•semplifica 𝑧=2+3𝑖−5𝑖+6
–𝑧=8−2𝑖
•semplifica 𝑧=(2+𝑖)2
–𝑧=4+4𝑖+𝑖2=4+4𝑖−1=3+4𝑖
•semplifica 𝑧=𝑖3(7+5𝑖)
–𝑧=−i7+5i=−7i−5𝑖2=−7𝑖+5=5−7i
65
6", quantum qubit qubit –misura •quando qubit isolato trova superposition •quando viene misurato osservato collassa probabilità 𝛼a e probabilità 𝛼a  •dopo l’osservazione valori ampiezza irrimediabilmente perduti –la misura disturba stato sistema qualche esempio numeri complessi ricorda 𝑖−e 𝑖− •semplifica 𝑧𝑖−𝑖 –𝑧−𝑖 •semplifica 𝑧𝑖 –𝑧𝑖𝑖𝑖−𝑖 •semplifica 𝑧𝑖𝑖 –𝑧−ii−i−𝑖−𝑖−i ,"[2, 5]","[(2, 0.58322805), (5, 0.38818893)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\10-quantum-un-qubit-04.pdf,3,"9/29/2021
410-quantum -un-qubit -04
qualche esempio sui numeri complessi
ricorda che il complesso coniugato di un numero 
complesso z=𝑥+𝑦𝑖è definito come തz=𝑥−𝑦𝑖
•calcola il complesso coniugato di 𝑧=2+3𝑖
–ҧ𝑧=2−3𝑖
•calcola il complesso coniugato di 𝑧=−𝑖
–ҧ𝑧=𝑖
7
qualche esempio sui qubit
•considera il qubit|ۧ𝜓=3
2|ۧ0−1
2|ۧ1
•quello mostrato è uno stato nel quale il qubit può 
effettivamente trovarsi?
–sì perché 3
22
+−1
22
=3
4+1
4=1
•se verrà misurato, con che probabilità il risultato 
della misura sarà |ۧ0?
–3
22
=3
4
87
8", quantum qubit qualche esempio numeri complessi ricorda complesso coniugato numero complesso z𝑥𝑦𝑖è definito തz𝑥−𝑦𝑖 •calcola complesso coniugato 𝑧𝑖 –ҧ𝑧−𝑖 •calcola complesso coniugato 𝑧−𝑖 –ҧ𝑧𝑖 qualche esempio qubit •considera qubitۧ𝜓 ۧ− ۧ •quello mostrato stato qubit può effettivamente trovarsi –sì − •se verrà misurato probabilità risultato misura ۧ – ,"[2, 5]","[(2, 0.21468116), (5, 0.75772077)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\10-quantum-un-qubit-04.pdf,4,"9/29/2021
510-quantum -un-qubit -04
qualche esempio sui qubit
•considera il qubit|ۧ𝜓=1
2|ۧ0−𝑖1
2|ۧ1
•quello mostrato è uno stato nel quale il qubit può 
effettivamente trovarsi?
–sì perché 1
22
+−𝑖1
22
=1
2+1
2=1
•se viene misurato, con che probabilità il risultato 
della misura sarà |ۧ0?
–1
2
9
qubit –rappresentazione vettoriale
•possiamo rappresentare lo stato descritto da 
𝛼0|0+𝛼1|1, in modo sintetico con  il vettore 
di numeri complessi 𝛼0
𝛼1
•quindi lo spazio degli stati di un qubit è uno 
spazio bidimensionale complesso
–detto spazio di Hilbert
•il vincolo di normalizzazione ci dice che il 
vettore di un qubit è anche unitario
–un vettore è unitario quando ha modulo (lunghezza) 
uguale a 1; si chiama anche versore 109
10", quantum qubit qualche esempio qubit •considera qubitۧ𝜓 ۧ−𝑖 ۧ •quello mostrato stato qubit può effettivamente trovarsi –sì −𝑖 •se viene misurato probabilità risultato misura ۧ – qubit –rappresentazione vettoriale •possiamo rappresentare stato descritto 𝛼𝛼 modo sintetico vettore numeri complessi 𝛼 𝛼 •quindi spazio stati qubit spazio bidimensionale complesso –detto spazio hilbert •il vincolo normalizzazione dice vettore qubit unitario –un vettore unitario quando modulo lunghezza uguale chiama versore ,"[1, 3]","[(1, 0.9414157), (3, 0.041557245)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\10-quantum-un-qubit-04.pdf,5,"9/29/2021
610-quantum -un-qubit -04
qubit –stati di base
•possiamo rappresentare lo stato descritto da 𝛼0=
1, e 𝛼1=0con il vettore 1
0
–quindi scrivere |0è equivalente a scrivere 1
0
•inoltre possiamo rappresentare lo stato descritto 
da 𝛼0=0, e 𝛼1=1con il vettore 0
1
–quindi scrivere |1è equivalente a scrivere 0
1
11
qubit –rappresentazione vettoriale
•quindi possiamo scrivere 𝛼0|0+𝛼1|1in forma 
vettoriale come  𝛼01
0+𝛼10
1=𝛼0
𝛼1
–i vettori 1
0e 0
1sono le basi della 
rappresentazione
•la notazione con le parentesi |𝑥non è che una 
forma sintetica per la rappresentazione vettoriale
–si chiama ket-notation ed è stata concepita da Dirac
–la forma |𝑥denota con il nome 𝑥un vettore colonna
1211
12", quantum qubit qubit –stati base •possiamo rappresentare stato descritto 𝛼 𝛼con vettore –quindi scrivere è equivalente scrivere •inoltre possiamo rappresentare stato descritto 𝛼 𝛼con vettore –quindi scrivere è equivalente scrivere qubit –rappresentazione vettoriale •quindi possiamo scrivere 𝛼𝛼in forma vettoriale 𝛼 𝛼 𝛼 𝛼 –i vettori e sono basi rappresentazione •la notazione parentesi 𝑥non forma sintetica rappresentazione vettoriale –si chiama ket notation stata concepita dirac –la forma 𝑥denota nome 𝑥un vettore colonna ,[3],"[(3, 0.98084813)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\10-quantum-un-qubit-04.pdf,6,"9/29/2021
710-quantum -un-qubit -04
qubit –rappresentazione vettoriale
•quindi
–un qubit è quindi un vettore unitario in uno spazio 
vettoriale bidimensionale complesso
–la notazione usata per descrivere qubit è una 
notazione per descrivere vettori
13
es. sulla rappresentazione vettoriale
•considera il qubit|ۧ𝜓=3
2|ۧ0−1
2|ۧ1
•mostrane la reppresentazione vettoriale
–|ۧ𝜓=3
21
0−1
20
1=3
2
−1
2
1413
14", quantum qubit qubit –rappresentazione vettoriale •quindi –un qubit quindi vettore unitario spazio vettoriale bidimensionale complesso –la notazione usata descrivere qubit notazione descrivere vettori es rappresentazione vettoriale •considera qubitۧ𝜓 ۧ− ۧ •mostrane reppresentazione vettoriale –ۧ𝜓 − − ,"[1, 3, 6]","[(1, 0.29148892), (3, 0.44773945), (6, 0.23031943)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\10-quantum-un-qubit-04.pdf,7,"9/29/2021
810-quantum -un-qubit -04
qubit –interpretazione geometrica
•se assumiamo, per semplicità, che 𝛼0e 𝛼1siano 
numeri reali , possiamo rappresentare 𝛼01
0+
𝛼10
1con il disegno:
150
1= |1
1
0=|0circonferenza unitaria
𝛼0𝛼1tutti i qubit con ampiezze reali
sono un punto su questa
circonferenza
qubit –interpretazione geometrica
•ad esempio se 𝛼0=ൗ1
2e 𝛼1=ൗ1
2abbiamo
160
1= |1
1
0=|0ൗ𝜋4ൗ1
2|0+ൗ1
2|1
𝛼0=cos𝜋
4=ൗ1
2𝛼1=sin𝜋
4=ൗ1
215
16", quantum qubit qubit –interpretazione geometrica •se assumiamo semplicità 𝛼e 𝛼siano numeri reali possiamo rappresentare 𝛼 𝛼 con disegno  circonferenza unitaria 𝛼𝛼tutti qubit ampiezze reali punto circonferenza qubit –interpretazione geometrica •ad esempio 𝛼ൗ e 𝛼ൗ abbiamo  ൗ𝜋ൗ ൗ  𝛼cos𝜋 ൗ 𝛼sin𝜋 ൗ ,[5],"[(5, 0.96666014)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\10-quantum-un-qubit-04.pdf,8,"9/29/2021
910-quantum -un-qubit -04
qubit –interpretazione geometrica
•consideriamo ora un generico stato |𝜓con 
ampiezze (per semplicità) reali ed osserviamo gli 
angoli della sua rappresentazione geometrica
170
1= |1
1
0=|0𝜃|𝜓
qubit –interpretazione geometrica
•possiamo esprimere le componenti di |𝜓usando 
gli angoli che forma con gli assi
•abbiamo che |𝜓=cos𝜃|0+sin𝜃|1=cos𝜃
sin𝜃
180
1= |1
1
0=|0𝜃|𝜓17
18", quantum qubit qubit –interpretazione geometrica •consideriamo ora generico stato 𝜓con ampiezze per semplicità reali osserviamo angoli rappresentazione geometrica  𝜃𝜓 qubit –interpretazione geometrica •possiamo esprimere componenti 𝜓usando angoli forma assi •abbiamo 𝜓cos𝜃sin𝜃cos𝜃 sin𝜃  𝜃𝜓 ,[5],"[(5, 0.95907116)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\10-quantum-un-qubit-04.pdf,9,"9/29/2021
1010-quantum -un-qubit -04
qubit –interpretazione geometrica
•se misuriamo |𝜓=cos𝜃|0+sin𝜃|1
otteniamo |0con probabilità cos𝜃2e |1con 
probabilità sin𝜃2
190
1= |1
1
0=|0𝜃|𝜓
qubit –interpretazione geometrica
•possiamo riscrivere sin𝜃2=cosΤ𝜋2−𝜃2
•quindi la probabilità di misurare uno |0o un  |1
è data dal coseno al quadrato dell’angolo che lo 
stato ha con ciascuno di essi 
200
1= |1
1
0=|0𝜃|𝜓
ൗ𝜋2−𝜃19
20", quantum qubit qubit –interpretazione geometrica •se misuriamo 𝜓cos𝜃sin𝜃 otteniamo con probabilità cos𝜃e con probabilità sin𝜃  𝜃𝜓 qubit –interpretazione geometrica •possiamo riscrivere sin𝜃cosτ𝜋−𝜃 •quindi probabilità misurare o  data coseno quadrato dell’angolo stato ciascuno essi  𝜃𝜓 ൗ𝜋−𝜃 ,[5],"[(5, 0.9526194)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\10-quantum-un-qubit-04.pdf,10,"9/29/2021
1110-quantum -un-qubit -04
qubit –interpretazione geometrica
•negli esempi ci siamo riferiti finora a valori reali, 
ma la proporzionalità con il coseno al quadrato 
rimane anche se i numeri sono complessi
210
1= |1
1
0=|0𝜃|𝜓
ൗ𝜋2−𝜃
qubit –basi diverse
•lo stato |𝜓di un qubit esiste indipendentemente 
dalla base nella quale lo esprimiamo
•possiamo quindi scegliere due versori 
(perpendicolari) |𝑢e |𝑢⊥diversi da  |0e|1
ed esprimere |𝜓in funzione di |𝑢e |𝑢⊥
220
1= |1
1
0=|0𝜃|𝜓
ൗ𝜋2−𝜃
|𝑢|𝑢⊥21
22", quantum qubit qubit –interpretazione geometrica •negli esempi riferiti finora valori reali proporzionalità coseno quadrato rimane numeri complessi  𝜃𝜓 ൗ𝜋−𝜃 qubit –basi diverse •lo stato 𝜓di qubit esiste indipendentemente base esprimiamo •possiamo quindi scegliere due versori perpendicolari 𝑢e 𝑢⊥diversi e esprimere 𝜓in funzione 𝑢e 𝑢⊥  𝜃𝜓 ൗ𝜋−𝜃 𝑢𝑢⊥ ,[5],"[(5, 0.9689552)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\10-quantum-un-qubit-04.pdf,11,"9/29/2021
1210-quantum -un-qubit -04
qubit –basi diverse
•la regola che lega la probabilità di misurare uno 
stato di base o un altro in funzione del coseno 
dell’angolo che lo stato ha con ciascuno di essi 
vale anche per versori diversi da  |0e|1
230
1= |1
1
0=|0𝜃|𝜓
ൗ𝜋2−𝜃
|𝑢|𝑢⊥
qubit –basi diverse
•nota: la misura può essere effettuata 
relativamente a qualunque base
24𝜃|𝜓
ൗ𝜋2−𝜃
|𝑢|𝑢⊥23
24", quantum qubit qubit –basi diverse •la regola lega probabilità misurare stato base altro funzione coseno dell’angolo stato ciascuno essi vale versori diversi e  𝜃𝜓 ൗ𝜋−𝜃 𝑢𝑢⊥ qubit –basi diverse •nota misura può essere effettuata relativamente qualunque base 𝜃𝜓 ൗ𝜋−𝜃 𝑢𝑢⊥ ,"[2, 5, 8]","[(2, 0.40788248), (5, 0.52864337), (8, 0.037532512)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\10-quantum-un-qubit-04.pdf,12,"9/29/2021
1310-quantum -un-qubit -04
qubit –basi diverse
•quindi la misura di un qubit necessita della 
specifica della base rispetto alla quale è effettuata
•consideriamo ora il caso generale dei numeri 
complessi
25𝜃|𝜓
ൗ𝜋2−𝜃
|𝑢|𝑢⊥
richiamo –prodotto scalare
•il prodotto scalare tra due vettori (il primo riga e 
il secondo colonna ) si calcola in questo modo
•𝑎1𝑎2⋯𝑎𝑛𝑏1
𝑏2
⋮
𝑏𝑛=
=𝑎1𝑏1+𝑎2𝑏2+⋯+𝑎𝑛𝑏𝑛=෍
𝑖=1𝑛
𝑎𝑖𝑏𝑖
2625
26", quantum qubit qubit –basi diverse •quindi misura qubit necessita specifica base rispetto effettuata •consideriamo ora caso generale numeri complessi 𝜃𝜓 ൗ𝜋−𝜃 𝑢𝑢⊥ richiamo –prodotto scalare •il prodotto scalare due vettori il primo riga secondo colonna calcola modo •𝑎𝑎⋯𝑎𝑛𝑏 𝑏 ⋮ 𝑏𝑛 𝑎𝑏𝑎𝑏⋯𝑎𝑛𝑏𝑛෍ 𝑖𝑛 𝑎𝑖𝑏𝑖 ,"[5, 9]","[(5, 0.39391357), (9, 0.5818295)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\10-quantum-un-qubit-04.pdf,13,"9/29/2021
1410-quantum -un-qubit -04
richiamo –complesso coniugato
•si ricorda che il complesso coniugato di un 
numero complesso z=𝑥+𝑦𝑖è definito come 
തz=𝑥−𝑦𝑖
27
prodotto scalare tra vettori complessi
•il prodotto scalare tra due vettori complessi |𝜑e 
|𝜓si calcola facendo il trasposto coniugato di 
|𝜑e calcolando il prodotto scalare con il 
secondo
•se |𝜑=𝑎1
𝑎2
⋮
𝑎𝑛il suo trasposto coniugato è 
ത𝑎1ത𝑎2⋯ത𝑎𝑛
2827
28", quantum qubit richiamo –complesso coniugato •si ricorda complesso coniugato numero complesso z𝑥𝑦𝑖è definito തz𝑥−𝑦𝑖 prodotto scalare vettori complessi •il prodotto scalare due vettori complessi 𝜑e 𝜓si calcola trasposto coniugato 𝜑e calcolando prodotto scalare secondo •se 𝜑𝑎 𝑎 ⋮ 𝑎𝑛il trasposto coniugato ത𝑎ത𝑎⋯ത𝑎𝑛 ,[2],"[(2, 0.9699912)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\10-quantum-un-qubit-04.pdf,14,"9/29/2021
1510-quantum -un-qubit -04
un po’ di notazione
•mentre |𝑥denota un vettore colonna
•abbiamo che ۦ|𝑥denota un vettore riga
29
qubit –basi diverse
•in generale, la probabilità che la misura di un 
qubit|𝜓dia un certo versore |𝑢la possiamo 
calcolare come il quadrato del prodotto scalare 
tra il versore e il qubit
–si calcola usando il complesso coniugato del versore
30𝜃|𝜓
ൗ𝜋2−𝜃
|𝑢|𝑢⊥29
30", quantum qubit po’ notazione •mentre 𝑥denota vettore colonna •abbiamo ۦ𝑥denota vettore riga qubit –basi diverse •in generale probabilità misura qubit𝜓dia certo versore 𝑢la possiamo calcolare quadrato prodotto scalare versore qubit –si calcola usando complesso coniugato versore 𝜃𝜓 ൗ𝜋−𝜃 𝑢𝑢⊥ ,"[1, 5]","[(1, 0.29172787), (5, 0.67863446)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\10-quantum-un-qubit-04.pdf,15,"9/29/2021
1610-quantum -un-qubit -04
qubit –basi diverse
•il prodotto scalare tra |𝑢=𝛽0|0+𝛽1|1e |𝜓
=𝛼0|0+𝛼1|1si calcola come
–𝛽0𝛽1𝛼0
𝛼1=𝛽0𝛼0+𝛽1𝛼1
–si ricorda che il complesso coniugato di un numero 
complesso z=𝑥+𝑦𝑖è definito come തz=𝑥−𝑦𝑖
31𝜃|𝜓
ൗ𝜋2−𝜃
|𝑢|𝑢⊥
qubit –basi diverse
•il prodotto scalare tra |𝑢e |𝜓si denota anche 
con 𝑢𝜓dove la prima parentesi angolata si 
chiama brae le seconda ket(bra-ketnotation , 
dovuta a Dirac)
32𝜃|𝜓
ൗ𝜋2−𝜃
|𝑢|𝑢⊥31
32", quantum qubit qubit –basi diverse •il prodotto scalare 𝑢𝛽𝛽e 𝜓 𝛼𝛼si calcola –𝛽𝛽𝛼 𝛼𝛽𝛼𝛽𝛼 –si ricorda complesso coniugato numero complesso z𝑥𝑦𝑖è definito തz𝑥−𝑦𝑖 𝜃𝜓 ൗ𝜋−𝜃 𝑢𝑢⊥ qubit –basi diverse •il prodotto scalare 𝑢e 𝜓si denota 𝑢𝜓dove prima parentesi angolata chiama brae seconda ketbra ketnotation dovuta dirac 𝜃𝜓 ൗ𝜋−𝜃 𝑢𝑢⊥ ,"[0, 5]","[(0, 0.680817), (5, 0.29336312)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\10-quantum-un-qubit-04.pdf,16,"9/29/2021
1710-quantum -un-qubit -04
qubit –basi diverse
•quindi la probabilità che la misura di un qubit|𝜓
dia un certo versore |𝑢la possiamo denotare 
come 𝑢𝜓2
33𝜃|𝜓
ൗ𝜋2−𝜃
|𝑢|𝑢⊥
esempio sulla misura
•calcola la probabilità che |0assuma il valore del 
versore |ۧ+=ൗ1
2|0+ൗ1
2|1
•abbiamo che |0=1
0
•quindi 0+=10ൗ1
2
ൗ1
2=ൗ1
2
•e 0+2=1
2
3433
34", quantum qubit qubit –basi diverse •quindi probabilità misura qubit𝜓 dia certo versore 𝑢la possiamo denotare 𝑢𝜓 𝜃𝜓 ൗ𝜋−𝜃 𝑢𝑢⊥ esempio misura •calcola probabilità assuma valore versore ۧൗ ൗ  •abbiamo  •quindi ൗ ൗ ൗ •e ,[3],"[(3, 0.9437393)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\10-quantum-un-qubit-04.pdf,17,"9/29/2021
1810-quantum -un-qubit -04
esempio sulla misura
•calcola la probabilità che |0assuma il valore del 
versore |ۧ1
•abbiamo che |0=1
0e |1=0
1
•quindi 01=100
1=0
•e 012=0
35
35", quantum qubit esempio misura •calcola probabilità assuma valore versore ۧ •abbiamo  e  •quindi •e ,"[0, 1, 2, 3, 4]","[(0, 0.014287935), (1, 0.014290439), (2, 0.014288154), (3, 0.014291363), (4, 0.014287168)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\15-quantum-un-qubit-heisenberg-02.pdf,0,"10/6/2021
115-quantum -un-qubit -Heisenberg -02
1Next Generation Computing Models
Quantum Computing
Il principio di indeterminazione di Heisenberg 
e un qubit
principio di indeterminazione  di 
Heisenberg
•nella meccanica quantistica il principio stabilisce 
l'impossibilità di determinare con precisione a 
priori illimitata i valori di due variabili 
incompatibili, che specificano lo stato di una 
particella
–es. posizione e velocità
•indaghiamo il principio usando il quantum 
computing
21
2", quantum qubit heisenberg next generation computing models quantum computing principio indeterminazione heisenberg qubit principio indeterminazione heisenberg •nella meccanica quantistica principio stabilisce limpossibilità determinare precisione priori illimitata valori due variabili incompatibili specificano stato particella –es posizione velocità •indaghiamo principio usando quantum computing ,[1],"[(1, 0.9742818)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\15-quantum-un-qubit-heisenberg-02.pdf,1,"10/6/2021
215-quantum -un-qubit -Heisenberg -02
due basi
•usiamo due basi per descrivere lo stesso qubit
–la base costituita dai vettori |0e|1
–e la base costituita da |ۧ+=ൗ1
2|0+ൗ1
2|1e 
|ۧ−=ൗ1
2|0−ൗ1
2|1
30
1= |1
1
0=|0|+
ൗ𝜋4
|−
|ۧ+e |ۧ−è una base
•in primo luogo |ۧ+=ൗ1
2|0+ൗ1
2|1è 
effettivamente uno stato
–infatti ൗ1
22
+ൗ1
22
=Τ12+Τ12=1
•e anche |ۧ−=ൗ1
2|0−ൗ1
2|1è 
effettivamente uno stato
–infatti ൗ1
22
+−ൗ1
22
=Τ12+Τ12=1
43
4", quantum qubit heisenberg due basi •usiamo due basi descrivere stesso qubit –la base costituita vettori e –e base costituita ۧൗ ൗ e ۧ−ൗ −ൗ    ൗ𝜋 − ۧe ۧ−è base •in primo luogo ۧൗ ൗ è effettivamente stato –infatti ൗ ൗ ττ •e ۧ−ൗ −ൗ è effettivamente stato –infatti ൗ −ൗ ττ ,[8],"[(8, 0.9639933)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\15-quantum-un-qubit-heisenberg-02.pdf,2,"10/6/2021
315-quantum -un-qubit -Heisenberg -02
|ۧ+e |ۧ−è una base
•inoltre |ۧ+e |ۧ−sono perpendicolari tra loro
•per dimostrarlo basta calcolare il loro prodotto 
scalare +−=ൗ1
2ൗ1
2ൗ1
2
−ൗ1
2e osservare 
che ha valore nullo
5
due misure
•dato un qubit|𝜓, possiamo misurarlo sia usando 
la base |0e|1sia usando la base |ۧ+e |ۧ−
•la prima misura la chiamiamo bit-value e la 
seconda sign -value
6|1
|0|+
ൗ𝜋4
|−|𝜓5
6", quantum qubit heisenberg ۧe ۧ−è base •inoltre ۧe ۧ−sono perpendicolari •per dimostrarlo basta calcolare prodotto scalare −ൗ ൗ ൗ −ൗ e osservare valore nullo due misure •dato qubit𝜓 possiamo misurarlo usando base esia usando base ۧe ۧ− •la prima misura chiamiamo bit value seconda sign value   ൗ𝜋 −𝜓 ,[1],"[(1, 0.9699938)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\15-quantum-un-qubit-heisenberg-02.pdf,3,"10/6/2021
415-quantum -un-qubit -Heisenberg -02
posizione e velocità
•immaginiamo ora che il bit -value corrisponda 
alla posizione e che il sign-value corrisponda alla 
velocità
7|1
|0|+
ൗ𝜋4
|−|𝜓
posizione e velocità
•è possibile in un certo istante conoscere 
posizione e velocità di un qubit ?
8|1
|0|+
ൗ𝜋4
|−|𝜓7
8", quantum qubit heisenberg posizione velocità •immaginiamo ora bit value corrisponda posizione sign value corrisponda velocità   ൗ𝜋 −𝜓 posizione velocità •è possibile certo istante conoscere posizione velocità qubit   ൗ𝜋 −𝜓 ,[5],"[(5, 0.9549889)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\15-quantum-un-qubit-heisenberg-02.pdf,4,"10/6/2021
515-quantum -un-qubit -Heisenberg -02
conoscenza perfetta del bit -value
•perchè si possa conoscere perfettamente il bit -
value di |𝜓occorre che esso sia |0oppure |1
9|1
|0|+
ൗ𝜋4
|−|𝜓
conoscenza perfetta del sign-value
•perchè si possa conoscere perfettamente il sign-
value di |𝜓occorre che esso sia |ۧ+oppure |ۧ−
10|1
|0|+
ൗ𝜋4
|−|𝜓9
10", quantum qubit heisenberg conoscenza perfetta bit value •perchè possa conoscere perfettamente bit value 𝜓occorre esso oppure    ൗ𝜋 −𝜓 conoscenza perfetta sign value •perchè possa conoscere perfettamente sign value 𝜓occorre esso ۧoppure ۧ−   ൗ𝜋 −𝜓 ,[3],"[(3, 0.9624946)]"
dataExtraction\data_test\rootfolder\universita\quantum computing\15-quantum-un-qubit-heisenberg-02.pdf,5,"10/6/2021
615-quantum -un-qubit -Heisenberg -02
conoscenza perfetta di entrambi
•se possiamo conoscere perfettamente il sign-
value di |𝜓, es. perchè esso è molto vicino a |0, 
allora abbiamo molta incertezza sul sign-value
–è |ۧ+con probabilità Τ12e |ۧ−con probabilità Τ12
11|1
|0|+
ൗ𝜋4
|−|𝜓
11", quantum qubit heisenberg conoscenza perfetta entrambi •se possiamo conoscere perfettamente sign value 𝜓 es perchè esso molto vicino  allora molta incertezza sign value –è ۧcon probabilità τe ۧ−con probabilità τ   ൗ𝜋 −𝜓 ,[2],"[(2, 0.9590788)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\020-instradamento-01.pdf,0,"020-instradamento-01         copyright ©2021 g. di battista, m. patrignanialgoritmi di instradamento
per l’infrastruttura di rete fissa
g. di battista, m. patrignaniinternet and data centers
", instradamento copyright © g battista m patrignanialgoritmi instradamento l’infrastruttura rete fissa g battista m patrignaniinternet and data centers,"[1, 2]","[(1, 0.16686669), (2, 0.7603782)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\020-instradamento-01.pdf,1,"020-instradamento-01         copyright ©2021 g. di battista, m. patrignanicopyright notice
all the pages/slides in this presentation, including but not 
limited to, images, photos, animations, videos, sounds, music, and text (hereby referred to as “material”) are protected by copyright
this material, with the exception of some multimedia 
elements licensed by other organizations, is property of the authors and/or organizations appearing in the first slide
this material, or its parts, can be reproduced and used 
for didactical purposes within universities and schools, 
provided that this happens for non-profit purposes
any other use is prohibited, unless explicitly authorized 
by the authors on the basis of an explicit agreement
this copyright notice must always be redistributed 
together with the material, or its portions", instradamento copyright © g battista m patrignanicopyright notice all the pagesslides this presentation including but not limited to images photos animations videos sounds music and text hereby referred to as “material” are protected by copyright this material with the exception of some multimedia elements licensed by other organizations is property of the authors andor organizations appearing the first slide this material or its parts can be reproduced and used for didactical purposes within universities and schools provided that this happens for profit purposes any other use is prohibited unless explicitly authorized by the authors on the basis of an explicit agreement this copyright notice must always be redistributed together with the material or its portions,[4],"[(4, 0.9915071)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\020-instradamento-01.pdf,2,"020-instradamento-01         copyright ©2021 g. di battista, m. patrignanipanoramica
generalità
qualità degli algoritmi di instradamento
tipi di algoritmi
algoritmi di instradamento basati su 
distance vector
algoritmi di instradamento basati su 
link state packet", instradamento copyright © g battista m patrignanipanoramica generalità qualità algoritmi instradamento tipi algoritmi algoritmi instradamento basati distance vector algoritmi instradamento basati link state packet,"[1, 2]","[(1, 0.5112059), (2, 0.4387818)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\020-instradamento-01.pdf,3,"020-instradamento-01         copyright ©2021 g. di battista, m. patrignaniqualità degli algoritmi di instradamento
efficienza
per evitare che il calcolo dei cammini verso le 
destinazioni abbia un peso eccessivo rispetto all’istradamento dei pacchetti
• le cpu e le memorie attualmente dis ponibili sui router sono talvolta 
insufficienti se confrontati con la complessità delle reti
ottimalità nella scelta dei cammini
rispetto a qualche criterio che deve essere misurabile
normalmente si usa il numero di hop o il costo delle 
linee, talvolta assunto inversamente proporzionale alla velocità
criteri che tengano in considerazione il carico corrente 
della rete sono difficili da considerare", instradamento copyright © g battista m patrignaniqualità algoritmi instradamento efficienza per evitare calcolo cammini verso destinazioni peso eccessivo rispetto all’istradamento pacchetti • cpu memorie attualmente dis ponibili router talvolta insufficienti confrontati complessità reti ottimalità scelta cammini rispetto qualche criterio deve essere misurabile normalmente usa numero hop costo linee talvolta assunto inversamente proporzionale velocità criteri tengano considerazione carico corrente rete difficili considerare,[1],"[(1, 0.9812385)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\020-instradamento-01.pdf,4,"020-instradamento-01         copyright ©2021 g. di battista, m. patrignaniqualità degli algoritmi di instradamento
robustezza e adattabilità
rispetto alle variazioni di topologia
• in una rete di grandi dimensioni possono esserci 
frequentemente guasti alle  linee e/o ai router
stabilità
se non cambia la topologia non devono cambiare i 
cammini
a fronte di una variazione di topologia occorre 
convergere rapidamente ad  un nuovo instradamento 
stabile
equità
nessun nodo deve essere privilegiato o danneggiato
economicità
costi ridotti di configurazione e manutenzione dei 
protocolli di routing", instradamento copyright © g battista m patrignaniqualità algoritmi instradamento robustezza adattabilità rispetto variazioni topologia • rete grandi dimensioni possono esserci frequentemente guasti linee eo router stabilità se cambia topologia devono cambiare cammini a fronte variazione topologia occorre convergere rapidamente nuovo instradamento stabile equità nessun nodo deve essere privilegiato danneggiato economicità costi ridotti configurazione manutenzione protocolli routing,[0],"[(0, 0.97855663)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\020-instradamento-01.pdf,5,"020-instradamento-01         copyright ©2021 g. di battista, m. patrignanialgoritmi di instradamento
difficoltà nella scelta di un algoritmo
i criteri sono talvolta contrastanti
• esempio: minimizzare il ritardo di pacchetti  e 
massimizzare l’utilizzo delle linee
gli algoritmi complessi possono comportare 
configurazioni difficili
• le spese per il personale di gestione aumentano", instradamento copyright © g battista m patrignanialgoritmi instradamento difficoltà scelta algoritmo i criteri talvolta contrastanti • esempio minimizzare ritardo pacchetti massimizzare l’utilizzo linee gli algoritmi complessi possono comportare configurazioni difficili • spese personale gestione aumentano,[0],"[(0, 0.96536356)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\020-instradamento-01.pdf,6,"020-instradamento-01         copyright ©2021 g. di battista, m. patrignanitipi di algoritmi di instradamento
algoritmi statici
criteri fissi di instradamento, indipendenti dallo 
stato della topologia
algoritmi dinamici
instradamento in funzione dello stato della 
topologia e/o del carico
algoritmi di instradamento
algoritmi statici algoritmi dinamici", instradamento copyright © g battista m patrignanitipi algoritmi instradamento algoritmi statici criteri fissi instradamento indipendenti stato topologia algoritmi dinamici instradamento funzione stato topologia eo carico algoritmi instradamento algoritmi statici algoritmi dinamici,[2],"[(2, 0.9639858)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\020-instradamento-01.pdf,7,"020-instradamento-01         copyright ©2021 g. di battista, m. patrignanirapporto tra routing statico e dinamico
parte periferica
topologia ad alberorouting staticoparte centrale
topologia fortemente magliata
routing dinamico
", instradamento copyright © g battista m patrignanirapporto routing statico dinamico parte periferica topologia alberorouting staticoparte centrale topologia fortemente magliata routing dinamico,[0],"[(0, 0.9499733)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\020-instradamento-01.pdf,8,"020-instradamento-01         copyright ©2021 g. di battista, m. patrignanitassonomia degli algoritmi 
di instradamento
algoritmi di instradamento
algoritmi statici algoritmi dinamici
static 
routingflooding
distance
vectorlink state
packetrouting
isolatorouting
distribuitorouting
centralizzato
hot
potatobackward
learning", instradamento copyright © g battista m patrignanitassonomia algoritmi instradamento algoritmi instradamento algoritmi statici algoritmi dinamici static routingflooding distance vectorlink state packetrouting isolatorouting distribuitorouting centralizzato hot potatobackward learning,[2],"[(2, 0.9608505)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\020-instradamento-01.pdf,9,"020-instradamento-01         copyright ©2021 g. di battista, m. patrignanialgoritmi statici di instradamento
static routing
su ogni nodo c’è una tabella che contiene, per 
ogni nodo da raggiungere, la linea da usare e 
la tabella è compilata dall’amministratore di 
sistema
• che è chiamato ad intervenire in presenza di guasti
variante quasi-statica 
l’amministratore di sistema fornisce più
alternative in ordine di priorità, che vengono 
scelte in funzione dello stato della rete
• es: ibm sna", instradamento copyright © g battista m patrignanialgoritmi statici instradamento static routing su ogni nodo c’è tabella contiene ogni nodo raggiungere linea usare tabella compilata dall’amministratore sistema • chiamato intervenire presenza guasti variante quasi statica l’amministratore sistema fornisce alternative ordine priorità vengono scelte funzione stato rete • es ibm sna,[0],"[(0, 0.9756604)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\020-instradamento-01.pdf,10,"020-instradamento-01         copyright ©2021 g. di battista, m. patrignanistatic routing
L1L2
L3
L4L5L6L7L8
indirizzo prima scelta seconda scelta
156.128.16.0/24 L1 L2
128.201.0.0/16 L3
145.200.0.0/16 L5 L3
12. 0.0.0/8 L1
0.0.0.0/0 L7 L8", instradamento copyright © g battista m patrignanistatic routing ll l lllll indirizzo prima scelta seconda scelta l l l l l l l l,[0],"[(0, 0.9249741)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\020-instradamento-01.pdf,11,"020-instradamento-01         copyright ©2021 g. di battista, m. patrignanialgoritmi statici di instradamento
flooding
ogni pacchetto viene ritrasmesso su tutte le linee, 
salvo quella da cui è arrivato
varianti del flooding
selective flooding: si ritrasmette solo su un insieme di 
linee selezionato
• is-is (iso 10598)
scarto dei pacchetti troppo vecchi
• pacchetti con “age counter” a bordo
scarto di un pacchetto al suo secondo passaggio su 
un nodo
le varianti necessitano di memorie estese e di 
identificatori di pacchetto", instradamento copyright © g battista m patrignanialgoritmi statici instradamento flooding ogni pacchetto viene ritrasmesso tutte linee salvo arrivato varianti flooding selective flooding ritrasmette solo insieme linee selezionato • is is iso scarto pacchetti troppo vecchi • pacchetti “age counter” bordo scarto pacchetto secondo passaggio nodo le varianti necessitano memorie estese identificatori pacchetto,[1],"[(1, 0.976307)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\020-instradamento-01.pdf,12,"020-instradamento-01         copyright ©2021 g. di battista, m. patrignanialgoritmi dinamici di instradamento
routing isolato
ogni intermediate system (is) calcola in modo 
indipendente le proprie tabelle, senza consultare gli altri is
hot potato routing
• il pacchetto viene inviato sulla linea con coda più breve
• interesse solo teoricoalgoritmi dinamici
distance vector link state packetrouting isolato routing distribuito routing centralizzato
hot potato backward learning", instradamento copyright © g battista m patrignanialgoritmi dinamici instradamento routing isolato ogni intermediate system is calcola modo indipendente proprie tabelle senza consultare altri is hot potato routing • pacchetto viene inviato linea coda breve • interesse solo teoricoalgoritmi dinamici distance vector link state packetrouting isolato routing distribuito routing centralizzato hot potato backward learning,[1],"[(1, 0.97953874)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\020-instradamento-01.pdf,13,"020-instradamento-01         copyright ©2021 g. di battista, m. patrignanialgoritmi dinamici di instradamento
backward learning
la linea di uscita del pacche tto viene inferita in base 
agli indirizzi mittente dei pacchetti in ingresso
• esempio: il filtering dei bridge ieee 802.1D al livello 2
raffinamento
• aggiunta di un campo nei pacchetti che specifica il costo, 
incrementato ad ogni attraversamento di is
– in questo modo si possono mantenere in ogni is più alternative 
ordinate per costo
– svantaggio: si imparano solo le  migliorie e non i peggioramenti 
(perche? tempo di scadenza delle entry!)
quando la destinazione è ignota si fa flooding
può generare cicli
• si accoppia usualmente con il calcolo di uno spanning tree", instradamento copyright © g battista m patrignanialgoritmi dinamici instradamento backward learning la linea uscita pacche tto viene inferita base indirizzi mittente pacchetti ingresso • esempio filtering bridge ieee d livello raffinamento • aggiunta campo pacchetti specifica costo incrementato ogni attraversamento is – modo possono mantenere ogni is alternative ordinate costo – svantaggio imparano solo migliorie peggioramenti perche tempo scadenza entry quando destinazione ignota fa flooding può generare cicli • accoppia usualmente calcolo spanning tree,"[1, 9]","[(1, 0.24262947), (9, 0.7440109)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\020-instradamento-01.pdf,14,"020-instradamento-01         copyright ©2021 g. di battista, m. patrignanialgoritmi dinamici di instradamento
routing centralizzato
presuppone l’esistenza di un routing control 
center (rcc) che conosce la topologia della 
rete
• ipotesi spesso non realistica
il routing control center 
• riceve da tutti i nodi informazioni sulla topologia
• calcola le tabelle di instradamento• le distribuisce
problemi
• traffico intenso intorno al rcc
• affidabilità", instradamento copyright © g battista m patrignanialgoritmi dinamici instradamento routing centralizzato presuppone l’esistenza routing control center rcc conosce topologia rete • ipotesi spesso realistica il routing control center • riceve nodi informazioni topologia • calcola tabelle instradamento• distribuisce problemi • traffico intenso intorno rcc • affidabilità,[1],"[(1, 0.9709568)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\020-instradamento-01.pdf,15,"020-instradamento-01         copyright ©2021 g. di battista, m. patrignanialgoritmi dinamici di instradamento
routing distribuito
non esiste un rcc, ma le sue funzionalità sono 
svolte da tutti gli is 
due principali paradigmi
• distance vector
– dico ai miei vicini tutto ciò che so del mondo
• link state packet
– dico a tutto il mondo ciò che so dei miei vicinidistance vector link state packetrouting distribuito", instradamento copyright © g battista m patrignanialgoritmi dinamici instradamento routing distribuito non esiste rcc funzionalità svolte is due principali paradigmi • distance vector – dico vicini ciò so mondo • link state packet – dico mondo ciò so vicinidistance vector link state packetrouting distribuito,"[0, 1]","[(0, 0.39429402), (1, 0.5798823)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,0,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanialgoritmi link state packet
g. di battista, m. patrignaniinternet and data centers
", algoritmi link state packet copyright © g battista m patrignanialgoritmi link state packet g battista m patrignaniinternet and data centers,"[1, 2]","[(1, 0.6774681), (2, 0.2653629)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,1,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanicopyright notice
all the pages/slides in this presentation, including but not 
limited to, images, photos, animations, videos, sounds, music, and text (hereby referred to as “material”) are protected by copyright
this material, with the exception of some multimedia 
elements licensed by other organizations, is property of the authors and/or organizations appearing in the first slide
this material, or its parts, can be reproduced and used 
for didactical purposes within universities and schools, 
provided that this happens for non-profit purposes
any other use is prohibited, unless explicitly authorized 
by the authors on the basis of an explicit agreement
this copyright notice must always be redistributed 
together with the material, or its portions", algoritmi link state packet copyright © g battista m patrignanicopyright notice all the pagesslides this presentation including but not limited to images photos animations videos sounds music and text hereby referred to as “material” are protected by copyright this material with the exception of some multimedia elements licensed by other organizations is property of the authors andor organizations appearing the first slide this material or its parts can be reproduced and used for didactical purposes within universities and schools provided that this happens for profit purposes any other use is prohibited unless explicitly authorized by the authors on the basis of an explicit agreement this copyright notice must always be redistributed together with the material or its portions,[4],"[(4, 0.9917407)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,2,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanialgoritmi link state packet
ogni intermediate system (is) ha una mappa 
completa della rete
ogni is calcola sulla mappa l'instradamento 
ottimale
cammini di costo minimo verso tutte le destinazioni
algoritmo di Dijkstra
la tabella di instradamento si ottiene 
considerando il primo hop dei cammini minimi
la mappa della rete viene costruita a partire dai 
link state packet (lsp)
un lsp contiene informazioni sui nodi e sui link 
adiacenti ad uno specifico is
i lsp sono trasmessi in selective flooding da ogni is a 
tutti gli altri is della rete", algoritmi link state packet copyright © g battista m patrignanialgoritmi link state packet ogni intermediate system is mappa completa rete ogni is calcola mappa linstradamento ottimale cammini costo minimo verso tutte destinazioni algoritmo dijkstra la tabella instradamento ottiene considerando primo hop cammini minimi la mappa rete viene costruita partire link state packet lsp un lsp contiene informazioni nodi link adiacenti specifico is i lsp trasmessi selective flooding ogni is altri is rete,[1],"[(1, 0.98524135)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,3,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignaniesempio
ogni is trasmette un lsp (che arriva a tutti)
65
282
122lsp di R1
sono adiacente 
ad R2 (costo 6) e 
ad R6 (costo 2)
ogni is conserva in un database il lsp più
recente di ogni altro is della rete", algoritmi link state packet copyright © g battista m patrignaniesempio ogni is trasmette lsp che arriva tutti lsp r adiacente r costo r costo ogni is conserva database lsp recente ogni altro is rete,[1],"[(1, 0.96537596)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,4,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignaniesempio
è importante che il database 
dei lsp sia identico su tutti gli is
lsp database (su ogni is)
R1: sono adiacente a R2/ 6R6/2
R2: sono adiacente a R1/ 6R3/5R4/8 R6/2
R3: sono adiacente a R2/ 5R4/2
R4: sono adiacente a R2/ 8R3/2 R5/2
R5: sono adiacente a R4/ 2R6/1
R6: sono adiacente a R1/ 2R2/2 R5/1
65
282
122", algoritmi link state packet copyright © g battista m patrignaniesempio è importante database lsp identico is lsp database su ogni is r adiacente r r r adiacente r rr r r adiacente r r r adiacente r r r r adiacente r r r adiacente r r r ,[1],"[(1, 0.9608609)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,5,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanialgoritmi link state packet
differenza con distance vector
negli algoritmi distance vector la collaborazione tra is 
è tesa a calcolare direttamente le tabelle di instradamento
negli algoritmi link state packet la collaborazione tra is 
è tesa a mantenere aggiornata la mappa della rete
possono gestire reti anche con 10.000 nodi
convergono rapidamente", algoritmi link state packet copyright © g battista m patrignanialgoritmi link state packet differenza distance vector negli algoritmi distance vector collaborazione is tesa calcolare direttamente tabelle instradamento negli algoritmi link state packet collaborazione is tesa mantenere aggiornata mappa rete possono gestire reti nodi convergono rapidamente,"[0, 1]","[(0, 0.3031684), (1, 0.6751898)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,6,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanialgoritmo di Dijkstra
V =insieme di vertici numerati 1, …, n 
il vertice 1è la sorgente del traffico
gli archi sono orientati
A(i) = adiacenti di i
insieme dei vertici jper cui c’è un arco orientato (i,j)
aij(≥0) =metrica dell’arco (i,j)
aij= ∞se l’arco (i,j)èa s s e n t e
la lunghezza di un cammino è somma delle metriche 
degli archi attraversati 
d[i] = distanza corrente dal vertice 1al vertice i
m(i) = distanza minima dal vertice 1al vertice i
S=insieme dei vertici i cui d[i] = m(i)", algoritmi link state packet copyright © g battista m patrignanialgoritmo dijkstra v insieme vertici numerati … n il vertice è sorgente traffico gli archi orientati ai adiacenti insieme vertici jper c’è arco orientato ij aij≥ metrica dell’arco ij aij ∞se l’arco ijèa s s n t la lunghezza cammino somma metriche archi attraversati di distanza corrente vertice al vertice mi distanza minima vertice al vertice sinsieme vertici di mi,"[1, 5]","[(1, 0.07737631), (5, 0.9040058)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,7,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanialgoritmo di Dijkstra
calcola il cammino di costo minimo tra il nodo 1
ed ogni altro nodo della rete
i nodi sono inseriti in Sper valori crescenti della 
distanza da 1
a) S=  { 1 }
b) per ogni itra 2ed nponi d[i] = a1i
c) finché V-Snon è vuoto
scegli un nodo iin V-Stale che d[i]sia minimo
aggiungi iad S
per ogni j in A(i)poni d[j] = min(d[j],d[i] + aij)", algoritmi link state packet copyright © g battista m patrignanialgoritmo dijkstra calcola cammino costo minimo nodo ogni altro nodo rete i nodi inseriti sper valori crescenti distanza a s b ogni itra ed nponi di ai c finché v snon vuoto scegli nodo iin v stale disia minimo aggiungi iad s ogni j aiponi dj mindjdi aij,[1],"[(1, 0.9790413)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,8,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignaniesempio
65
282
12206∞∞∞2S = d =V-S = 
04∞∞32 d =123456
04∞532 d =
049532 d =
047532 d =
047532 d =", algoritmi link state packet copyright © g battista m patrignaniesempio ∞∞∞s d v s ∞∞ d ∞ d d d d ,"[0, 1, 2, 3, 4]","[(0, 0.0142888455), (1, 0.8714072), (2, 0.014289443), (3, 0.014287911), (4, 0.014287101)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,9,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanilemma dell’invariante
se d[v] = m(v) per ogni nodo vdi S, allora 
quando iviene aggiunto ad S, anche per i
si ha d[i] = m(i)
dimostrazione per assurdo
supponiamo per assurdo che d[i] > m(i)
sia pil cammino minimo da 1ad i
• necessariamente |p| = m(i) < d[i]", algoritmi link state packet copyright © g battista m patrignanilemma dell’invariante se dv mv ogni nodo vdi s allora quando iviene aggiunto s di mi dimostrazione assurdo supponiamo assurdo di mi sia pil cammino minimo ad • necessariamente p mi di,[2],"[(2, 0.96998066)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,10,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanidimostrazione per assurdo
sia jl’ultimo nodo di pappartenente ad S e 
kil nodo seguente
k ≠ialtrimenti l’algoritmo avrebbe computato 
d[i] = |p| = m(i)
S
j 1 k i
p= cammino più cortocammino scelto", algoritmi link state packet copyright © g battista m patrignanidimostrazione assurdo sia jl’ultimo nodo pappartenente s kil nodo seguente k ≠ialtrimenti l’algoritmo computato di p mi s j k p cammino cortocammino scelto,[6],"[(6, 0.95259655)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,11,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanidimostrazione del lemma dell’invariante
1.d[k] = m(k) , cioè d[k]è ottimo
infatti d[k]è calcolato da d[j] 
• per ipotesi d[j] = m(j)
•l ’ a r c o  (j,k)è utilizzato da p
2.m(k) ≤m(i) perché kè un nodo intermedio di p
concatenando 1., 2. e l’ipotesi assurda si ottiene
d[k] = m(k) ≤m(i) < d[i]
cioè d[k] < d[i]
ma questo è assurdo perché l’algoritmo avrebbe 
scelto ke non i", algoritmi link state packet copyright © g battista m patrignanidimostrazione lemma dell’invariante dk mk cioè dkè ottimo infatti dkè calcolato dj • ipotesi dj mj •l ’ r jkè utilizzato p mk ≤mi kè nodo intermedio p concatenando l’ipotesi assurda ottiene dk mk ≤mi di cioè dk di ma assurdo l’algoritmo scelto ke,"[0, 8]","[(0, 0.4792992), (8, 0.493086)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,12,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanicorrettezza dell’algoritmo di Dijkstra
l’algoritmo di Dijkstra trova un cammino di 
costo minimo tra 1ed ogni altro nodo della 
rete
inizializzazione 
• è vero quando S = {1}
conservazione
• per il lemma dell’invariante, rimane vero quando 
aggiungo ogni nodo ad S
conclusione 
• è vero quando S = V", algoritmi link state packet copyright © g battista m patrignanicorrettezza dell’algoritmo dijkstra l’algoritmo dijkstra trova cammino costo minimo ed ogni altro nodo rete inizializzazione • vero quando s conservazione • lemma dell’invariante rimane vero quando aggiungo ogni nodo s conclusione • vero quando s v,[6],"[(6, 0.9689535)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,13,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignaniDijkstra – efficienza (lavoro svolto dai router)
supponiamo che in una rete ci siano n
nodi e mlink
un’implementazione semplice richiede 
tempo O(n2 + m) = O( n2)
un’implementazione più sofisticata ha 
complessità O(nlog n+ m)
complessità ammortizzata
richiede l’implementazione di una coda di 
priorità con un heap", algoritmi link state packet copyright © g battista m patrignanidijkstra – efficienza lavoro svolto router supponiamo rete n nodi mlink un’implementazione semplice richiede tempo on m o n un’implementazione sofisticata complessità onlog n m complessità ammortizzata richiede l’implementazione coda priorità heap,[6],"[(6, 0.9608487)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,14,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanishortest-path spanning tree
le distanze minime calcolate 
corrispondono ad uno shortest-path spanning tree della rete
in generale gli spanning tree sono diversi
65
282
1 22
65
282
1 22
65
282
1 22", algoritmi link state packet copyright © g battista m patrignanishortest path spanning tree le distanze minime calcolate corrispondono shortest path spanning tree rete in generale spanning tree diversi ,[1],"[(1, 0.9608585)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,15,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanishortest-path spanning tree
il viaggio di un pacchetto da 3 a 6
ogni router instrada in base al proprio 
spanning-tree
65
282
1 22
65
282
1 22
65
282
1 22", algoritmi link state packet copyright © g battista m patrignanishortest path spanning tree il viaggio pacchetto ogni router instrada base proprio spanning tree ,"[0, 1]","[(0, 0.28835857), (1, 0.6671691)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,16,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignaniarchitettura di un router lsp
quando il receive process riceve un pacchetto 
se è in transito verso altre destinazioni lo passa al 
forwarding process, che lo trasmette sfruttando le informazioni del forwarding database
se il pacchetto è di gestione viene passato ai 
protocolli superiorireceive
processforwarding
processforwarding
database
update
processlsp
databasedecision 
process
(Dijkstra)livello di rete", algoritmi link state packet copyright © g battista m patrignaniarchitettura router lsp quando receive process riceve pacchetto se transito verso altre destinazioni passa forwarding process trasmette sfruttando informazioni forwarding database se pacchetto gestione viene passato protocolli superiorireceive processforwarding processforwarding database update processlsp databasedecision process dijkstralivello rete,"[0, 1]","[(0, 0.56336164), (1, 0.41439375)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,17,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanipacchetti di gestione – neighbor greetings
pacchetto di neighbor greetings
utilizzato per tenere aggiornate le adiacenze 
dirette
inviato periodicamente su tutte le interfacce
quando un is rileva una modifica di topologia
• invia un lsp per far conoscere la modifica a tutti gli 
is della rete", algoritmi link state packet copyright © g battista m patrignanipacchetti gestione – neighbor greetings pacchetto neighbor greetings utilizzato tenere aggiornate adiacenze dirette inviato periodicamente tutte interfacce quando is rileva modifica topologia • invia lsp far conoscere modifica is rete,[6],"[(6, 0.9699858)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,18,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanipacchetti di gestione – lsp
pacchetto link-state-packet
contiene un numero di versione
quando un is riceve un lsp 
se della stessa versione di quello posseduto 
• non compie alcuna azione
se di versione più recente
• aggiorna il suo database
• ritrasmette il pacchetto in flooding su tutte le linee 
(eccetto quella di ricezione)
se di versione precedente
• trasmette quello posseduto al mittente (per un 
rapido allineamento dei database)", algoritmi link state packet copyright © g battista m patrignanipacchetti gestione – lsp pacchetto link state packet contiene numero versione quando is riceve lsp se stessa versione posseduto • compie alcuna azione se versione recente • aggiorna database • ritrasmette pacchetto flooding tutte linee eccetto ricezione se versione precedente • trasmette posseduto mittente per rapido allineamento database,"[1, 3]","[(1, 0.13539858), (3, 0.84598976)]"
dataExtraction\data_test\rootfolder\universita\retiDiCalcolatori\040-algoritmi-link-state-packet-01.pdf,19,"040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanirouter lsp e lan
una lan su cui si affacciano 
diversi router si presta molto male ad essere modellata come un grafo
i router costruiscono un grafo 
completo con un numero 
quadratico di archi
modellazione tramite uno 
pseudo nodo
uno dei router sulla lan 
(designated router) si prende 
l’onere di rappresentare lo pseudo nodo
tutti gli altri router vedranno la 
lan come una stella", algoritmi link state packet copyright © g battista m patrignanirouter lsp lan una lan affacciano diversi router presta molto male essere modellata grafo i router costruiscono grafo completo numero quadratico archi modellazione tramite pseudo nodo uno router lan designated router prende l’onere rappresentare pseudo nodo tutti altri router vedranno lan stella,[9],"[(9, 0.9785535)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,0,"9/28/2021
102-linguaggio -e-grammatiche -24
1Linguaggi e Grammatiche
2Linguaggi e informatica
•ubiquitari nelle applicazioni
–linguaggi di programmazione
•compilatori ed interpreti
–linguaggi di comunicazione
•protocolli per il dialogo traentità omologhe
–linguaggi per intefacce
•specifica di sequenze di operazioni
•paradigmatici nella teoria
–molti importanti problemi teorici sono riconducibili a 
quello dell’appartenenza di una stringa ad un 
linguaggio1
2", linguaggio grammatiche linguaggi grammatiche linguaggi informatica •ubiquitari applicazioni –linguaggi programmazione •compilatori interpreti –linguaggi comunicazione •protocolli dialogo traentità omologhe –linguaggi intefacce •specifica sequenze operazioni •paradigmatici teoria –molti importanti problemi teorici riconducibili dell’appartenenza stringa linguaggio ,[5],"[(5, 0.9608515)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,1,"9/28/2021
202-linguaggio -e-grammatiche -24
3Tre approcci diversi
•approccio insiemistico
–utile per determinare le 
proprietà elementari dei
linguaggi
•approccio generativo
–grammatiche formali
•approccio riconoscitivo
–automi riconoscitori
4Concetti matematici di base
•Insiemi
•Relazioni
•Funzioni3
4", linguaggio grammatiche tre approcci diversi •approccio insiemistico –utile determinare proprietà elementari linguaggi •approccio generativo –grammatiche formali •approccio riconoscitivo –automi riconoscitori concetti matematici base •insiemi •relazioni •funzioni ,[4],"[(4, 0.9470383)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,2,"9/28/2021
302-linguaggio -e-grammatiche -24
5Insiemi
•consideriamo insiemi finiti e insiemi infiniti
•|A| = cardinalità dell’insieme (finito ) A
•alcuni insiemi infiniti di numeri:
N naturali (contiene zero)
N+ naturali positivi
Z interi relativi
Z+interi positivi
Z- interi negativiQ razionali relativi
Q+ razionali positivi
Q-razionali negativi
R reali
R+ reali positivi
R-reali negativi
6Sottoinsiemi e insiemi uguali
•datidue insiemi A e B, se
x B x A
allora B è sottoinsieme di A, e siscrive B A
•ogni insieme è sottoinsieme di se stesso
•l’insieme vuotoè sottoinsieme di ogni insieme
•se A e B sono finiti , allora B A |B| |A|
•A e B insiemi uguali
A=B (x A x B)
sipuòscrivere anche
A=B (A B B A)
•A è sottoinsieme proprio di B (A B) se 
(A B) (A B)5
6", linguaggio grammatiche insiemi •consideriamo insiemi finiti insiemi infiniti •a cardinalità dell’insieme finito •alcuni insiemi infiniti numeri n naturali contiene zero n naturali positivi z interi relativi zinteri positivi z interi negativiq razionali relativi q razionali positivi q razionali negativi r reali r reali positivi r reali negativi sottoinsiemi insiemi uguali •datidue insiemi b x b x a allora b sottoinsieme a siscrive b a •ogni insieme sottoinsieme stesso •l’insieme vuotoè sottoinsieme ogni insieme •se b finiti allora b a b a •a b insiemi uguali ab x a x b sipuòscrivere ab a b b a •a sottoinsieme proprio b a b a b a b ,[9],"[(9, 0.9836331)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,3,"9/28/2021
402-linguaggio -e-grammatiche -24
7Insieme delle parti
A
P(A)l’insieme dei sottoinsiemi di A è detto l’ insieme delle parti di A e si 
indica con P(A) o 2A
se A è finito e |A| = n allora |P(A)| = 2n
8Operazioni tra insiemi
•unione C = A B
–se A e B sono finiti |C| |A|+|B|
–commutativa e associativa
•intersezione C=A B
–se A e B sono finiti |C| min{|A|, |B|}
–commutativa e associativa
–l’intersezione è distributiva rispetto all’unione
•partizione di A
–insieme di n sottoinsiemi di A tali che 
A1A2… An= A
i j AiAj= A B
A B
A7
8", linguaggio grammatiche insieme parti pal’insieme sottoinsiemi detto l’ insieme parti indica pa a finito a n allora pa n operazioni insiemi •unione b –se b finiti c ab –commutativa associativa •intersezione ca b –se b finiti c mina b –commutativa associativa –l’intersezione distributiva rispetto all’unione •partizione –insieme n sottoinsiemi tali aa… an j aiaj a b b a ,[9],"[(9, 0.9639882)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,4,"9/28/2021
502-linguaggio -e-grammatiche -24
9Operazioni tra insiemi
•complemento di B rispetto ad A
C = A -B = {x| xA xB}
•differenza simmetrica o somma disgiunta
A+B=AB-(A B)
•prodotto cartesiano C=A B
C= {x,y| xA yB}
–insieme di tutte le possibili coppie ordinate
–il prodotto cartesiano è associativo ma non commutativoA BA B
10Relazioni
•siano A1, A2, …, Ann insiemi 
(non necessariamente distinti)
•una relazione n -aria è un sottoinsieme di 
esempio :
–la relazione “ minore di ” definita sui naturali è l’insieme 
R NN = N2, dove R= {x,y| xy}A1A2…An
R A1A2…An9
10", linguaggio grammatiche operazioni insiemi •complemento b rispetto b x xa xb •differenza simmetrica somma disgiunta abab a b •prodotto cartesiano ca b c xy xa yb –insieme tutte possibili coppie ordinate –il prodotto cartesiano associativo commutativoa ba b relazioni •siano a a … ann insiemi non necessariamente distinti •una relazione n aria sottoinsieme esempio –la relazione “ minore ” definita naturali l’insieme r nn n r xy xyaa…an r aa…an ,"[0, 9]","[(0, 0.37503728), (9, 0.6014252)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,5,"9/28/2021
602-linguaggio -e-grammatiche -24
11Relazione d’ordine
•RA2=A A è una relazione d’ordine se valgono le 
seguenti proprietà:
1.riflessività
x,xR
2.antisimmetria
x,yRy,xRx=y
3.transitività
x,yRy,zRx,zR
un insieme su cui è definita una relazione d’ordine si dice 
parzialmente ordinato o poset (“partially ordered set”)
esempio : la relazione “ ” è una relazione d’ordine su N
12Relazione d’ordine totale
•una relazione d’ordine R A2è detta totale se
x,yA2 x,yR y,xR
esempio :
la relazione “ ” è una relazione d’ordine totale su N
1 2 3 4 5 6 7 8 …11
12", linguaggio grammatiche relazione d’ordine •raa a relazione d’ordine valgono seguenti proprietà riflessività xxr antisimmetria xyryxrxy transitività xyryzrxzr insieme definita relazione d’ordine dice parzialmente ordinato poset “partially ordered set” esempio relazione “ ” relazione d’ordine n relazione d’ordine totale •una relazione d’ordine r aè detta totale xya xyr yxr esempio relazione “ ” relazione d’ordine totale n        … ,[7],"[(7, 0.9678526)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,6,"9/28/2021
702-linguaggio -e-grammatiche -24
13Relazione di equivalenza
•RA2= AA è una relazione di equivalenza se valgono 
le seguenti proprietà:
1.riflessività
x,xR
2.simmetria
x,yRy,xR
3.transitività
x,yRy,zRx,zR 
esempio : la relazione “= ”è una relazione di equivalenza su R
14Relazione di equivalenza
•un insieme A su cui è definita una relazione di 
equivalenza si può partizionare in sottoinsiemi 
massimali di equivalenza , detti classi di 
equivalenza
•l’insieme delle classi di equivalenza di A è 
detto insieme quoziente e si denota A/R 
•un elemento di A/R si denota con [a]
•il numero di classi di A/R si chiama indice di R13
14", linguaggio grammatiche relazione equivalenza •ra aa relazione equivalenza valgono seguenti proprietà riflessività xxr simmetria xyryxr transitività xyryzrxzr esempio relazione “ ”è relazione equivalenza r relazione equivalenza •un insieme definita relazione equivalenza può partizionare sottoinsiemi massimali equivalenza detti classi equivalenza •l’insieme classi equivalenza detto insieme quoziente denota ar •un elemento ar denota a •il numero classi ar chiama indice r ,[6],"[(6, 0.97856736)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,7,"9/28/2021
802-linguaggio -e-grammatiche -24
15Esempio di relazione di equivalenza
•consideriamo la relazione Eksu N
n k m
se esistono q, q ′, r (con r<k) tali che
n=qk+r    e    m=q′k+r
•Ekè una relazione di equivalenza
•le sue classi sono le classi resto rispetto alla 
divisione per k
16Operazioni su relazioni
•unione
R1R2={x,y|x,yR1x,yR2}
•complementazione
R={x,y|x,yR}
•chiusura transitiva
R+  ={x,y|
y1, …,ynA, n2, y1=x, yn=y
tali che
yi,yi+1R, i=1, …,n -1} 
•chiusura transitiva e riflessiva
R*=R+{x,x|xA}15
16", linguaggio grammatiche esempio relazione equivalenza •consideriamo relazione eksu n n k m esistono q q ′ r con rk tali nqkr mq′kr •ekè relazione equivalenza •le classi classi resto rispetto divisione k operazioni relazioni •unione rrxyxyrxyr •complementazione rxyxyr •chiusura transitiva r xy y …yna n yx yny tali yiyir i …n •chiusura transitiva riflessiva rrxxxa ,"[6, 8]","[(6, 0.2324713), (8, 0.73894745)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,8,"9/28/2021
902-linguaggio -e-grammatiche -24
17Chiusure di relazioni
2
31
54
2
31
542
31
54chiusura transitivachiusura transitiva
e riflessiva
18Funzioni
R X1 … Xn
è una relazione funzionale se
x1, …, xn-1X1 … Xn-1
esiste al più un elemento xn Xntale che
x1, …, xn-1, xnR
si chiama funzione la legge che associa x1, …, xn-1ad xn
f(x1, …, xn-1) = xn
f: X1 … Xn-1→Xn
X1 … Xn-1è il tipodella funzione17
18", linguaggio grammatiche chiusure relazioni chiusura transitivachiusura transitiva riflessiva funzioni r x … xn relazione funzionale x … xn x … xn esiste elemento xn xntale x … xn xnr chiama funzione legge associa x … xn ad xn fx … xn xn f x … xn →xn x … xn è tipodella funzione ,[6],"[(6, 0.9666608)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,9,"9/28/2021
1002-linguaggio -e-grammatiche -24
19Funzioni: dominio codominio
dom(f) = dominio di f
sottoinsieme di X1 … Xn-1
dom(f) = { x1, …, xn-1X1 … Xn-1|
xn Xnf(x1, …, xn-1) = xn}
cod(f) = codominio di f
sottoinsieme di Xn
cod(f) = { xn Xn|
x1, …, xn-1X1 … Xn-1
f(x1, …, xn-1) = xn}
20Funzioni: fibra
dato un xn
f-1(xn) = controimmagine o fibra di xn
sottoinsieme di X1 … Xn-1
f-1(xn) = {x1, …, xn-1X1 … Xn-1|
x1, …, xn-1dom(f)

f(x1, …, xn-1) = xn}19
20", linguaggio grammatiche funzioni dominio codominio domf dominio f sottoinsieme x … xn domf x … xn x … xn xn xnfx … xn xn codf codominio f sottoinsieme xn codf xn xn x … xn x … xn fx … xn xn funzioni fibra dato xn f xn controimmagine fibra xn sottoinsieme x … xn f xn x … xn x … xn x … xn domf  fx … xn xn ,[6],"[(6, 0.97631425)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,10,"9/28/2021
1102-linguaggio -e-grammatiche -24
21Funzione
dominiocodominioX1 … Xn-1 Xn
22Funzione totale
dominiocodominioX1 … Xn-1 Xn•una funzione f è totale se dom(f) = X1, …, Xn-121
22", linguaggio grammatiche funzione dominiocodominiox … xn xn funzione totale dominiocodominiox … xn xn•una funzione f totale domf x … xn ,"[0, 6]","[(0, 0.7323187), (6, 0.19494705)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,11,"9/28/2021
1202-linguaggio -e-grammatiche -24
23Funzione suriettiva
dominiocodominioX1 … Xn-1 Xn•una funzione f è suriettiva se cod(f) = Xn
24Funzione iniettiva
dominiocodominioX1 … Xn-1 Xn•una funzione f è iniettiva se |f-1(xn)|=123
24", linguaggio grammatiche funzione suriettiva dominiocodominiox … xn xn•una funzione f suriettiva codf xn funzione iniettiva dominiocodominiox … xn xn•una funzione f iniettiva f xn ,[0],"[(0, 0.93570423)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,12,"9/28/2021
1302-linguaggio -e-grammatiche -24
25Funzione biiettiva
dominiocodominioX1 … Xn-1 Xn•una funzione f è biiettiva (biiezione) se è 
iniettiva, suriettiva e totale
26Alfabeto
•un alfabeto è un insieme finito non vuoto di 
simboli (caratteri)
•esempi:
{‘M’, ‘C’, ‘L’, ‘X’, ‘I’, ‘V’}
{‘0’, ‘1’}
{‘0’, ‘1’, ‘2’, ‘3’, ‘4’, ‘5’, ‘6’, ‘7’, ‘8’, ‘9’}
{‘a’, ‘b’, ‘c’, ‘d’, ‘e’, ‘f’, ‘g’, ‘h’, ‘i’, ‘l’, ‘m’, 
‘n’, ‘o’, ‘p’, ‘q’, ‘r’, ‘s’, ‘t’, ‘u’, ‘v’, ‘z’}25
26", linguaggio grammatiche funzione biiettiva dominiocodominiox … xn xn•una funzione f biiettiva biiezione iniettiva suriettiva totale alfabeto •un alfabeto insieme finito vuoto simboli caratteri •esempi ‘m’ ‘c’ ‘l’ ‘x’ ‘i’ ‘v’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘’ ‘a’ ‘b’ ‘c’ ‘d’ ‘e’ ‘f’ ‘g’ ‘h’ ‘i’ ‘l’ ‘m’ ‘n’ ‘o’ ‘p’ ‘q’ ‘r’ ‘s’ ‘t’ ‘u’ ‘v’ ‘z’ ,[0],"[(0, 0.9499922)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,13,"9/28/2021
1402-linguaggio -e-grammatiche -24
27Concatenazione
•dato un alfabeto , definiamo l’operazione binaria 
concatenazione (denotata con “ ◦”)
a◦b= abcon a, b
•indichiamo con anla concatenazione di acon se stessa n 
volte
esempio: a4 = a◦a◦a◦a= aaaa
•l’operazione “ ◦” è associativa ma non commutativa
•dati e “◦” definiamo +come l’insieme delle stringhe 
(parole) di lunghezza finita
•se a +aggiungiamo la stringa vuota = “” otteniamo *
28Linguaggio
•un linguaggio è un sottoinsieme di *
•*è detto linguaggio universale
•il linguaggio vuoto non contiene stringhe 
(nota che coincide con l’insieme vuoto )
–attenzione:

{}27
28", linguaggio grammatiche concatenazione •dato alfabeto  definiamo l’operazione binaria concatenazione denotata “ ◦” a◦b abcon a b •indichiamo anla concatenazione acon stessa n volte esempio a a◦a◦a◦a aaaa •l’operazione “ ◦” associativa commutativa •dati e “◦” definiamo come l’insieme stringhe parole lunghezza finita •se aggiungiamo stringa vuota  “” otteniamo  linguaggio •un linguaggio sottoinsieme  •è detto linguaggio universale •il linguaggio vuoto non contiene stringhe nota coincide l’insieme vuoto  –attenzione   ,[0],"[(0, 0.976915)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,14,"9/28/2021
1502-linguaggio -e-grammatiche -24
29Operazioni sui linguaggi
L1e L2linguaggi
•unione
L1L2= {x*| xL1x L2}
L1= L1
•intersezione
L1L2= {x*| xL1x L2}
L1= 
•complementazione
L1={x*| xL1}
30Operazioni sui linguaggi
L1e L2linguaggi
•concatenazione o prodotto
L1◦L2= {x*|
x1L1x2L2tali che x = x1◦x2}
L ◦{} = {} ◦L = L
esempio :
L1= {an | n1};  L2= {bm | m1};   L1◦L2= {an bm | n,m1}
•potenza Lhdi un linguaggio L
L0= {}
Lh= L ◦Lh-1, per h 129
30", linguaggio grammatiche operazioni linguaggi le llinguaggi •unione ll x xlx l l l •intersezione ll x xlx l l  •complementazione lx xl operazioni linguaggi le llinguaggi •concatenazione prodotto l◦l x xlxltali x x◦x ◦  ◦l esempio l an n l bm m l◦l an bm nm •potenza lhdi linguaggio l  lh ◦lh h  ,[9],"[(9, 0.95499)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,15,"9/28/2021
1602-linguaggio -e-grammatiche -24
31Operatore di Kleene
•chiusura riflessiva e transitiva di un linguaggio
L*= Lh
L* *={}
esempio : L={aa} L*={a2n|n0}
•chiusura transitiva (non riflessiva) di un 
linguaggio
L+= Lh
esempio : L={aa} L+={a2n|n1}
L*=L+ {}
h=0

h=1
32Espressioni regolari
•è uno strumento per descrivere linguaggi (vedremo nel seguito quali)
•dato un alfabeto , si definisce espressione regolare ogni stringa r
r({+, *, (, ), ◦, })+
•tale che:
1.r=oppure
2.roppure
3.r=(s+t) oppure r=(s◦t) oppure r=s*, con se tespressioni regolari
espressione linguaggio
 
a {a}
(s+t) L(s)L(t)
(s◦t) L(s)◦L(t)
s*L(s)*semantica31
32", linguaggio grammatiche operatore kleene •chiusura riflessiva transitiva linguaggio l lh l  esempio laa lann •chiusura transitiva non riflessiva linguaggio l lh esempio laa lann ll  h  h espressioni regolari •è strumento descrivere linguaggi vedremo seguito quali •dato alfabeto  definisce espressione regolare ogni stringa r r ◦  •tale che roppure roppure rst oppure rs◦t oppure rs tespressioni regolari espressione linguaggio   a a st lslt s◦t ls◦lt slssemantica ,[0],"[(0, 0.97953963)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,16,"9/28/2021
1702-linguaggio -e-grammatiche -24
33Espressioni regolari
i linguaggi rappresentabili con espressioni regolari sono una 
interessante sottoclasse stè forma sintetica di s◦tforma sintetica
espressioni sintetiche si ottengno definendo delle 
precedenze tra gli operatori: *> ◦> +
esempio : 
(a+(b(cd))) = a+bcdforma sinteticaesempio : 
(a+b)*rappresenta L=({ a}{b})*
esempio : 
(a+b)*arappresenta L={x|x {a,b}*“x termina con a”}
34Esercizio
data una mappa stradale, scrivere un’espressione regolare che 
definisca tutti i percorsi possibili tra A e B
adec +adg+fec+fg= 
= ad(ec+g) + f(ec+g) = 
= (ad+f)(ec+g)A Ba d c e
f g
33
34", linguaggio grammatiche espressioni regolari linguaggi rappresentabili espressioni regolari interessante sottoclasse stè forma sintetica s◦tforma sintetica espressioni sintetiche ottengno definendo precedenze operatori ◦ esempio abcd abcdforma sinteticaesempio abrappresenta l ab esempio abarappresenta lxx ab“x termina a” esercizio data mappa stradale scrivere un’espressione regolare definisca percorsi possibili b adec adgfecfg adecg fecg adfecga ba d f g ,"[1, 2]","[(1, 0.12150711), (2, 0.8598801)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,17,"9/28/2021
1802-linguaggio -e-grammatiche -24
35Esercizio
data una mappa stradale, scrivere un’espressione regolare che 
definisca tutti i percorsi possibili tra A e B
f(ebd)*gA Bd e
f gb
36Esercizio
data una mappa stradale, scrivere un’espressione regolare che 
definisca tutti i percorsi possibili tra A e B
a(deb)*decA Ba d c eb
35
36", linguaggio grammatiche esercizio data mappa stradale scrivere un’espressione regolare definisca percorsi possibili b febdga bd f gb esercizio data mappa stradale scrivere un’espressione regolare definisca percorsi possibili b adebdeca ba d eb ,[2],"[(2, 0.96666217)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,18,"9/28/2021
1902-linguaggio -e-grammatiche -24
37Esercizio
data una mappa stradale, scrivere un’espressione regolare che 
definisca tutti i percorsi possibili tra A e B
a(deb)*dgA Ba d e
gb
38Esercizio
data una mappa stradale, scrivere un’espressione regolare che 
definisca tutti i percorsi possibili tra A e B
f(edb)*ecA Bd c e
fb
37
38", linguaggio grammatiche esercizio data mappa stradale scrivere un’espressione regolare definisca percorsi possibili b adebdga ba d gb esercizio data mappa stradale scrivere un’espressione regolare definisca percorsi possibili b fedbeca bd fb ,[2],"[(2, 0.966662)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,19,"9/28/2021
2002-linguaggio -e-grammatiche -24
39Esercizio
data una mappa stradale, scrivere un’espressione regolare che 
definisca tutti i percorsi possibili tra A e B
f(ebd)*g+ f(ebd)*ec+ a(deb)*dec+ a(deb)*dg=
= f(ebd)*(g+ec) + a(deb)*d(g+ec) =
= (f(ebd)*+a(deb)*d) (g+ec) =
= (f+ad)(ebd)*(g+ec)A Ba d c e
f gb
40Le grammatiche formali
1940 Post e Markof, riscrittura e derivazione di 
stringhe
1950 Chomsky, classificazione delle grammatiche 
nell’ambito degli studi sul linguaggio 
naturale
1960 Backus Naur Form per descrivere Algol•approccio generativo alla descrizione dei 
linguaggi
•metodo di costruzione delle stringhe basato sulla 
riscrittura39
40", linguaggio grammatiche esercizio data mappa stradale scrivere un’espressione regolare definisca percorsi possibili b febdg febdec adebdec adebdg febdgec adebdgec febdadebd gec fadebdgeca ba d f gb le grammatiche formali post markof riscrittura derivazione stringhe chomsky classificazione grammatiche nell’ambito studi linguaggio naturale backus naur form descrivere algol•approccio generativo descrizione linguaggi •metodo costruzione stringhe basato riscrittura ,"[0, 2, 5]","[(0, 0.3691902), (2, 0.23185135), (5, 0.3843675)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,20,"9/28/2021
2102-linguaggio -e-grammatiche -24
41Grammatiche formali
•grammatiche di Chomsky
•-produzioni
•riconoscimento di linguaggi
42Grammatiche di Chomsky
unagrammatica è una quadrupla 
G=<VT, VN, P, S>
•VT è l’alfabeto (finito) di simboli terminali
•VNè un insieme (finito) di simboli non terminali , o 
categorie sintattiche , tale che VN= 
•P, detto insieme delle produzioni , è una relazione 
binaria finita su
(VTVN)*◦VN◦(VTVN)*(VTVN)*
•SVNè l’assioma<,>P si indica generalmente con →forma sintetica41
42", linguaggio grammatiche grammatiche formali •grammatiche chomsky • produzioni •riconoscimento linguaggi grammatiche chomsky unagrammatica quadrupla gvt vn p s •vt è l’alfabeto finito simboli terminali •vnè insieme finito simboli terminali categorie sintattiche tale vn  •p detto insieme produzioni relazione binaria finita vtvn◦vn◦vtvnvtvn •svnè l’assiomap indica generalmente →forma sintetica ,[3],"[(3, 0.9727195)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,21,"9/28/2021
2202-linguaggio -e-grammatiche -24
43Esempio
una grammatica definisce implicitamente tutte le stringhe 
di terminali generabili a partire dall’assioma tramite una 
sequenza di riscritture
esempio:
G=<{a, b, c}, {S, B, C}, P, S>, con P composto da:
S → aSS → B B → bB
B → bCC → cCC → c
genera L(G) = { anbmch| n0, m, h1}
→ 1→ 2 …→ n
viene anche indicato con
→ 1| 2|…|nforma sintetica
44Linguaggio generato
•derivazione diretta : relazione su
(V*◦VN◦V*) V*
<,> appartiene alla relazione (si scrive  ) se
 V*◦VN◦V*ed ,,V*t.c. ==e →P
e sono dette forme di frase
•derivazione : chiusura riflessiva e transitiva della 
derivazione diretta, si rappresenta con *
•il linguaggio generato da G è L(G) = {x|x VT*S*x}
•due grammatiche G1e G2sono equivalenti se 
L(G1)=L(G2)
talvolta al posto di *forma sinteticaVTVNviene talvolta indicato con Vforma sintetica43
44", linguaggio grammatiche esempio grammatica definisce implicitamente tutte stringhe terminali generabili partire dall’assioma tramite sequenza riscritture esempio ga b c s b c p s p composto da s → ass → b b → bb b → bcc → ccc → genera lg anbmch n m h → →  …→ n viene indicato →  …nforma sintetica linguaggio generato •derivazione diretta relazione v◦vn◦v v  appartiene relazione si scrive   v◦vn◦ved vtc e →p e sono dette forme frase •derivazione chiusura riflessiva transitiva derivazione diretta rappresenta  •il linguaggio generato g lg xx vtsx •due grammatiche ge gsono equivalenti lglg talvolta al posto forma sinteticavtvnviene talvolta indicato vforma sintetica ,[0],"[(0, 0.9844782)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,22,"9/28/2021
2302-linguaggio -e-grammatiche -24
45Grammatiche formali
esempio : generazione di { anbncn|n1}
grammatica G=<{ a, b, c},{S,B,C,F,G},P,S>
con P composto da
S → aSBC CB → BC
SB → bFFB → bF
FC → cGGC → cG
G → 
per generare aabbcc
SaSBC aaSBCBC aaSBBCC
aabFBCC aabb FCC aabbc GC
aabbcc G aabbcc
46Grammatiche formali
osservazione : non è detto che una sequenza di derivazioni 
porti ad una stringa del linguaggio
esempio : 
la grammatica G=<{ a, b, c}, {S, A}, P, S> con
S → aSc| A
A → bAc| 
genera {anbmcn+m|n,m0}
esempio : 
la grammatica G=<{a, b, c}, {S, A}, P, S> con
S → Ab
A → Sa
genera 45
46", linguaggio grammatiche grammatiche formali esempio generazione anbncnn grammatica g a b csbcfgps p composto s → asbc cb → bc sb → bffb → bf fc → cggc → cg g →  generare aabbcc sasbc aasbcbc aasbbcc aabfbcc aabb fcc aabbc gc aabbcc g aabbcc grammatiche formali osservazione detto sequenza derivazioni porti stringa linguaggio esempio grammatica g a b c s a p s s → asc → bac  genera anbmcnmnm esempio grammatica ga b c s a p s s → ab → sa genera  ,"[0, 6]","[(0, 0.051983066), (6, 0.92695606)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,23,"9/28/2021
2402-linguaggio -e-grammatiche -24
47Grammatiche di Chomsky
•di tipo 0, non limitate
•di tipo 1, context sensitive, contestuali
•di tipo 2, context free (CF), non contestuali
•di tipo 3, lineari destre (RL), regolari
48Grammatiche di Chomsky
di tipo 0, non limitate
•sono le meno restrittive
•produzioni del tipo
→, V*◦VN◦V*, V*
ammettono anche derivazioni che accorciano stringhe
linguaggi di tipo 0
esempio :
il linguaggio { anbn|n1} è di tipo 0 in quanto generato da
S → aAB B → b
aA → aaAbaAb→ ab
aAA → aA 47
48", linguaggio grammatiche grammatiche chomsky •di tipo limitate •di tipo context sensitive contestuali •di tipo context free cf contestuali •di tipo lineari destre rl regolari grammatiche chomsky tipo limitate •sono meno restrittive •produzioni tipo → v◦vn◦v v ammettono derivazioni accorciano stringhe linguaggi tipo esempio linguaggio anbnn tipo generato s → aab b → b aa → aaabaab→ ab aaa → aa ,[8],"[(8, 0.979066)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,24,"9/28/2021
2502-linguaggio -e-grammatiche -24
49Grammatiche di Chomsky
di tipo 1, context sensitive, contestuali
•produzioni che non riducano la lunghezza delle forme di frase
→, ||≤||, V*◦VN◦V*, V*
linguaggi di tipo 1
esempio :
il linguaggio { anbncn|n1} è di tipo 0 in quanto generato da
S → aSBC CB → BC 
SB → bF FB → bF
FC → cG GC → cG
cG → c
ma è anche di tipo 1, infatti è generato anche da
S → aSBc| aBc
cB → Bc
bB → bb
aB → ab
50Generazione di stringhe di anbncn
(1)S → aSBc | aBc    (2)cB → Bc 
(3)bB → bb (4)aB → ab
SaSBc
aaSBcBc
aaaSBcBcBc
aaaaBcBcB cBc
aaaaBcB cBBcc 
aaaaBcBB cBcc 
aaaaB cBBBccc 
aaaaBB cBBccc 
aaaaBBB cBccc aaaaBBBBcccc
aaaabBBBcccc
aaaab bBBcccc
aaaabb bBcccc
aaaabbbbcccc49
50", linguaggio grammatiche grammatiche chomsky tipo context sensitive contestuali •produzioni riducano lunghezza forme frase → ≤ v◦vn◦v v linguaggi tipo esempio linguaggio anbncnn tipo generato s → asbc cb → bc sb → bf fb → bf fc → cg gc → cg cg → tipo infatti generato s → asbc abc cb → bc bb → bb ab → ab generazione stringhe anbncn s → asbc abc cb → bc bb → bb ab → ab sasbc aasbcbc aaasbcbcbc aaaabcbcb cbc aaaabcb cbbcc aaaabcbb cbcc aaaab cbbbccc aaaabb cbbccc aaaabbb cbccc aaaabbbbcccc aaaabbbbcccc aaaab bbbcccc aaaabb bbcccc aaaabbbbcccc ,[8],"[(8, 0.985242)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,25,"9/28/2021
2602-linguaggio -e-grammatiche -24
51Grammatiche di Chomsky
di tipo 2, context free (CF), non contestuali
•produzioni del tipo
A→, AVN, V+
linguaggi di tipo 2
esempio :
il linguaggio { anbn|n1} è di tipo 0 in quanto generato da
S → aAb
aA → aaAb
A → 
ma è anche di tipo 2, infatti è generato anche da
S → aSb| ab
52Esempi di linguaggi di tipo 2
linguaggio delle espressioni aritmetiche con la variabile i (come per 
esempio “i*i+(i*i+(i))*i*i ”, oppure “((i+i)*i) ”). 
L’assioma è E. 
E → E+T | T
T → T*F | F
F → i| (E)
grammatica delle parentesi ben bilanciate (esempio “ (((())))() ”)
S → ()| SS | (S)
da quale sequenza di produzioni è generata “ ()((()())) ” ?
grammatica delle stringhe palindrome (esempio “elle”, “ereggere”)51
52", linguaggio grammatiche grammatiche chomsky tipo context free cf contestuali •produzioni tipo a→ avn v linguaggi tipo esempio linguaggio anbnn tipo generato s → aab aa → aaab →  tipo infatti generato s → asb ab esempi linguaggi tipo linguaggio espressioni aritmetiche variabile come esempio “iiiiiii ” oppure “iii ” l’assioma e → et t t → tf f f → i e grammatica parentesi ben bilanciate esempio “ ” s → ss s sequenza produzioni generata “ ” grammatica stringhe palindrome esempio “elle” “ereggere” ,"[0, 8, 9]","[(0, 0.20944212), (8, 0.25053677), (9, 0.526017)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,26,"9/28/2021
2702-linguaggio -e-grammatiche -24
53Grammatiche di Chomsky
di tipo 3, lineari destre (RL), regolari
•produzioni del tipo
A→, AVN, (VT◦VN)VT
•linguaggi di tipo 3
esempio :
il linguaggio {anb|n0} è di tipo 3 in quanto generato da
S → aS
S → b
si possono anche definire grammatiche lineari sinistre (LL) con 
A→, AVN, (VN◦VT)VT
esempio : il linguaggio { anb|n0} è anche generato da
S → Tb| b
T → a| Ta
teorema : i linguaggi generati da grammatiche LL e RL coincidono
54Grammatiche di Chomsky
un linguaggio è strettamente di tipo n se esiste una 
grammatica di tipo n che lo genera e non esiste una 
grammatica di tipo m>n che lo genera
esempio : il linguaggio { anbn|n1} è generato da 
una grammatica di tipo 2 e non è generato da 
nessuna grammatica di tipo 353
54", linguaggio grammatiche grammatiche chomsky tipo lineari destre rl regolari •produzioni tipo a→ avn vt◦vnvt •linguaggi tipo esempio linguaggio anbn tipo generato s → as s → b possono definire grammatiche lineari sinistre ll a→ avn vn◦vtvt esempio linguaggio anbn generato s → tb b t → a ta teorema linguaggi generati grammatiche ll rl coincidono grammatiche chomsky linguaggio strettamente tipo n esiste grammatica tipo n genera esiste grammatica tipo mn genera esempio linguaggio anbnn generato grammatica tipo generato nessuna grammatica tipo ,"[0, 8]","[(0, 0.93654853), (8, 0.049654614)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,27,"9/28/2021
2802-linguaggio -e-grammatiche -24
55Grammatiche di Chomsky
contenimento tra i linguaggitipo 0
tipo 1
tipo 2
tipo 3
56Grammatiche di Chomsky
quadro riassuntivo della classificazione delle 
grammatiche secondo Chomskytipo produzioni vincoli
tipo 0
non limitate→ V*◦VN◦V*, V*
tipo 1
contestuali→||≤||
V*◦VN◦V*, V*
tipo 2
non contestualiA→ AVN, V+
tipo 3
regolariA→ AVN, (VT◦VN)VT55
56", linguaggio grammatiche grammatiche chomsky contenimento linguaggitipo tipo tipo tipo grammatiche chomsky quadro riassuntivo classificazione grammatiche secondo chomskytipo produzioni vincoli tipo limitate→ v◦vn◦v v tipo contestuali→≤ v◦vn◦v v tipo contestualia→ avn v tipo regolaria→ avn vt◦vnvt ,[7],"[(7, 0.9624935)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,28,"9/28/2021
2902-linguaggio -e-grammatiche -24
57-produzioni
•con grammatiche di tipo1, 2, 3 non è possibile
generare la stringa vuota
–per generare occorre una produzione →che
viene detta-produzione
–per Chomsky tutti ilinguaggi checontengono -
produzioni sono linguaggi di tipo0
•qual è l’impatto sui corrispondenti linguaggi
delle-produzioni nelle grammatiche ?
–se ammettiamo -produzioni dobbiamo fare 
attenzione , altrimenti rischiamo di snaturare la 
gerarchia di Chomsky
58-produzioni : variazione della gerarchia
con le seguenti modifiche , ilinguaggi generati dale 
diverse tipologie di grammatiche rimangono inalterati , 
salvo per la possibilità di generare la stringa vuota
tipo-produzioni ammesse
0 tutte (per definizione)
1 solo sull’assioma quando quest’ultimo non 
compare mai a destra di una produzione
2 tutte
3 tutte57
58", linguaggio grammatiche  produzioni •con grammatiche tipo possibile generare stringa vuota –per generare occorre produzione →che viene detta produzione –per chomsky ilinguaggi checontengono  produzioni linguaggi tipo •qual l’impatto corrispondenti linguaggi delle produzioni grammatiche –se ammettiamo  produzioni dobbiamo fare attenzione altrimenti rischiamo snaturare gerarchia chomsky  produzioni variazione gerarchia seguenti modifiche ilinguaggi generati dale diverse tipologie grammatiche rimangono inalterati salvo possibilità generare stringa vuota tipo produzioni ammesse tutte per definizione solo sull’assioma quando quest’ultimo compare mai destra produzione tutte tutte ,[3],"[(3, 0.98571205)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,29,"9/28/2021
3002-linguaggio -e-grammatiche -24
59Esempi di grammatiche
•il linguaggio {w ◦w| w (a+b)*}
•è generato dalla grammatica contestuale
S → T | 
T → aAT | bBT | A0a| B0bAa→ aA
Ab→ bA
Ba→ aB
Bb→ bBAA0→ A0a
BA0→ A0b
AB0→ B0a
BB0→ B0b(1) (2) (3)
A0→ a
B0→ b(4)
•le (1) generano insieme caratteri della prima e della seconda 
stringa; A0(B0) è l’ultimo carattere della prima stringa
•le (2) e le (3) separano la prima stringa dalla seconda
•le (4) chiudono la generazione, se sono applicate troppo presto 
il processo diverge
60Esempi di grammatiche
•il linguaggio {(x #)*| x = permutazione di (a,b,c)} (che contiene 
per esempio le stringhe , abc# , acb# , bac#cab# , ecc)
•ma è generato anche dalla grammatica CF:
S → E#S |  E → abc | acb | cba | cab | bac | bca
•ed anche dalla grammatica regolare:
S → aX | bY | cZ | 
X → bX| cX
X→ cR
X→ bRR → #S
Y → aY| cY
Y→ cR
Y→ aRZ → aZ| bZ
Z→ bR
Z→ aRS → S’ |  A → a
B → b
C → cAB → BA
AC → CA
BC → CBS’ → ABC#
S’ → ABC#S’è generato dalla grammatica contestuale:59
60", linguaggio grammatiche esempi grammatiche •il linguaggio w ◦w w ab •è generato grammatica contestuale s → t  t → aat bbt aa bbaa→ aa ab→ ba ba→ ab bb→ bbaa→ aa ba→ ab ab→ ba bb→ bb a→ b→ b •le generano insieme caratteri prima seconda stringa ab l’ultimo carattere prima stringa •le separano prima stringa seconda •le chiudono generazione applicate troppo presto processo diverge esempi grammatiche •il linguaggio x x permutazione abc che contiene esempio stringhe  abc acb baccab ecc •ma generato grammatica cf s → es  → abc acb cba cab bac bca •ed grammatica regolare s → ax by cz  x → bx cx x→ cr x→ brr → s y → ay cy y→ cr y→ arz → az bz z→ br z→ ars → s’  → b → b → cab → ba ac → ca bc → cbs’ → abc s’ → abcs’è generato grammatica contestuale ,[0],"[(0, 0.9891528)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,30,"9/28/2021
3102-linguaggio -e-grammatiche -24
61Forma normale di Backus
•la BNF è una notazione CF con alcuni accorgimenti 
sintattici che ne aumentano la leggibilità
<sequenza istruzioni> ::= <istruzione>; 
{<istruzione>;}
<istruzione if> ::= if ( <condizione> ) 
<istruzione> [else <istruzione>]esempio
può essere riscritto:
Q → I;| I;Q
può essere riscritto:
F → if( C )I else I | if( C )I
62Riconoscimento dei linguaggi
•esistono linguaggi a cui non corrisponde alcun algoritmo 
di decisione
•i linguaggi di tipo 3 sono riconosciuti da dispositivi con 
memoria costante in tempo lineare (automi a stati finiti)
•i linguaggi strettamente di tipo 2 sono riconosciuti da 
dispositivi non deterministici con pila in tempo lineare 
(automi a pila non deterministici)problema : 
stabilire se una stringa appartiene ad un dato linguaggio61
62", linguaggio grammatiche forma normale backus •la bnf notazione cf alcuni accorgimenti sintattici aumentano leggibilità sequenza istruzioni istruzione istruzione istruzione if if condizione istruzione else istruzioneesempio può essere riscritto q → i iq può essere riscritto f → if i else if i riconoscimento linguaggi •esistono linguaggi corrisponde alcun algoritmo decisione •i linguaggi tipo riconosciuti dispositivi memoria costante tempo lineare automi stati finiti •i linguaggi strettamente tipo riconosciuti dispositivi deterministici pila tempo lineare automi pila deterministiciproblema stabilire stringa appartiene dato linguaggio ,"[4, 8]","[(4, 0.6684778), (8, 0.31920758)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\020-linguaggi-e-grammatiche-24.pdf,31,"9/28/2021
3202-linguaggio -e-grammatiche -24
63Riconoscimento dei linguaggi
•i linguaggi strettamente di tipo 1 sono riconosciuti da 
dispositivi non deterministici con memoria che cresce 
linearmente con la lunghezza della stringa da esaminare 
(automi non deterministici “linear bounded”)
•i linguaggi strettamente di tipo 0 sono riconosciuti da 
macchine di Turing con memoria e tempo illimitati
–è possibile che non esista un algoritmo di decisione ma un 
processo semidecisionale, in cui, se la stringa non fa parte del 
linguaggio non è detto che la computazione termini
63", linguaggio grammatiche riconoscimento linguaggi •i linguaggi strettamente tipo riconosciuti dispositivi deterministici memoria cresce linearmente lunghezza stringa esaminare automi deterministici “linear bounded” •i linguaggi strettamente tipo riconosciuti macchine turing memoria tempo illimitati –è possibile esista algoritmo decisione processo semidecisionale cui stringa fa parte linguaggio detto computazione termini ,[8],"[(8, 0.97856706)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\022-espressioni-regolari-07.pdf,0,"1Esercizi di Informatica Teorica
Espressioni regolari
queste esercitazioni sono il frutto del lavoro di molte persone, tra le quali 
Luca Cabibbo, Walter Didi mo e Giuseppe Di Battista",esercizi informatica teorica espressioni regolari esercitazioni frutto lavoro molte persone quali luca cabibbo walter didi mo giuseppe battista,"[3, 5]","[(3, 0.6012895), (5, 0.35658705)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\022-espressioni-regolari-07.pdf,1,"2
Notazione sulla difficoltà degli esercizi
facile
non difficile
difficile
molto difficile
", notazione difficoltà esercizi facile difficile difficile molto difficile,"[0, 1, 2, 3, 4]","[(0, 0.012502092), (1, 0.012501979), (2, 0.0125021245), (3, 0.012502366), (4, 0.012501989)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\022-espressioni-regolari-07.pdf,2,"3Espressioni regolari
esercizio 1
dire se le seguenti affermazioni sono vere o false:
1.a L(∅*) = ∅
1.b baa ∈L(a*b*a*b*)
1.c abcd ∈L( (a (cd)*b)*)
1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)
1.e L((ab)*)∩L((cd)*)=  ∅
1.f L((abb + a)*a) = L(a(bba + a)*)
1.g L((a+b)*) = L((a*b*)*)
",espressioni regolari esercizio dire seguenti affermazioni vere false a l∅ ∅ b baa ∈labab c abcd ∈l a cdb d lab∩lba ab e lab∩lcd ∅ f labb aa labba a g lab lab,[5],"[(5, 0.94999725)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\022-espressioni-regolari-07.pdf,3,"4Espressioni regolari
esercizio 1
dire se le seguenti affermazioni sono vere o false:
1.a L(∅*) = ∅
1.b baa ∈L(a*b*a*b*)
1.c abcd ∈L( (a (cd)*b)*)
1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)
1.e L((ab)*)∩L((cd)*)=  ∅
1.f L((abb + a)*a) = L(a(bba + a)*)
1.g L((a+b)*) = L((a*b*)*)
",espressioni regolari esercizio dire seguenti affermazioni vere false a l∅ ∅ b baa ∈labab c abcd ∈l a cdb d lab∩lba ab e lab∩lcd ∅ f labb aa labba a g lab lab,[5],"[(5, 0.94999737)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\022-espressioni-regolari-07.pdf,4,"5Espressioni regolari
esercizio 1
dire se le seguenti affermazioni sono vere o false:
1.a L(∅*) = ∅
1.b baa ∈L(a*b*a*b*)
1.c abcd ∈L( (a (cd)*b)*)
1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)
1.e L((ab)*)∩L((cd)*)=  ∅
1.f L((abb + a)*a) = L(a(bba + a)*)
1.g L((a+b)*) = L((a*b*)*)
",espressioni regolari esercizio dire seguenti affermazioni vere false a l∅ ∅ b baa ∈labab c abcd ∈l a cdb d lab∩lba ab e lab∩lcd ∅ f labb aa labba a g lab lab,[5],"[(5, 0.94999737)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\022-espressioni-regolari-07.pdf,5,"6Espressioni regolari
esercizio 1
dire se le seguenti affermazioni sono vere o false:
1.a L(∅*) = ∅
1.b baa ∈L(a*b*a*b*)
1.c abcd ∈L( (a (cd)*b)*)
1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)
1.e L((ab)*)∩L((cd)*)=  ∅
1.f L((abb + a)*a) = L(a(bba + a)*)
1.g L((a+b)*) = L((a*b*)*)
",espressioni regolari esercizio dire seguenti affermazioni vere false a l∅ ∅ b baa ∈labab c abcd ∈l a cdb d lab∩lba ab e lab∩lcd ∅ f labb aa labba a g lab lab,[5],"[(5, 0.94999725)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\022-espressioni-regolari-07.pdf,6,"7Espressioni regolari
esercizio 1
dire se le seguenti affermazioni sono vere o false:
1.a L(∅*) = ∅
1.b baa ∈L(a*b*a*b*)
1.c abcd ∈L( (a (cd)*b)*)
1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)
1.e L((ab)*)∩L((cd)*)=  ∅
1.f L((abb + a)*a) = L(a(bba + a)*)
1.g L((a+b)*) = L((a*b*)*)
",espressioni regolari esercizio dire seguenti affermazioni vere false a l∅ ∅ b baa ∈labab c abcd ∈l a cdb d lab∩lba ab e lab∩lcd ∅ f labb aa labba a g lab lab,[5],"[(5, 0.94999737)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\022-espressioni-regolari-07.pdf,7,"8Espressioni regolari
esercizio 1
dire se le seguenti affermazioni sono vere o false:
1.a L(∅*) = ∅
1.b baa ∈L(a*b*a*b*)
1.c abcd ∈L( (a (cd)*b)*)
1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)
1.e L((ab)*)∩L((cd)*)=  ∅
1.f L((abb + a)*a) = L(a(bba + a)*)
1.g L((a+b)*) = L((a*b*)*)
",espressioni regolari esercizio dire seguenti affermazioni vere false a l∅ ∅ b baa ∈labab c abcd ∈l a cdb d lab∩lba ab e lab∩lcd ∅ f labb aa labba a g lab lab,[5],"[(5, 0.94999737)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\022-espressioni-regolari-07.pdf,8,"9Espressioni regolari
esercizio 1
dire se le seguenti affermazioni sono vere o false:
1.a L(∅*) = ∅
1.b baa ∈L(a*b*a*b*)
1.c abcd ∈L( (a (cd)*b)*)
1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)
1.e L((ab)*)∩L((cd)*)=  ∅
1.f L((abb + a)*a) = L(a(bba + a)*)
1.g L((a+b)*) = L((a*b*)*)
",espressioni regolari esercizio dire seguenti affermazioni vere false a l∅ ∅ b baa ∈labab c abcd ∈l a cdb d lab∩lba ab e lab∩lcd ∅ f labb aa labba a g lab lab,[5],"[(5, 0.94999725)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\022-espressioni-regolari-07.pdf,9,"10Espressioni regolari
esercizio 1
dire se le seguenti affermazioni sono vere o false:
1.a L(∅*) = ∅
1.b baa ∈L(a*b*a*b*)
1.c abcd ∈L( (a (cd)*b)*)
1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)
1.e L((ab)*)∩L((cd)*)=  ∅
1.f L((abb + a)*a) = L(a(bba + a)*)
1.g L((a+b)*) = L((a*b*)*)
",espressioni regolari esercizio dire seguenti affermazioni vere false a l∅ ∅ b baa ∈labab c abcd ∈l a cdb d lab∩lba ab e lab∩lcd ∅ f labb aa labba a g lab lab,[5],"[(5, 0.94999737)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\022-espressioni-regolari-07.pdf,10,"11Espressioni regolari
esercizio 2
quali linguaggi sono descritti dalle seguenti espressioni regolari? 
2.a 1(0+1)*
2.b (0+1)*1(0+1)*
",espressioni regolari esercizio quali linguaggi descritti seguenti espressioni regolari a b ,"[0, 1, 2, 3, 4]","[(0, 0.010006852), (1, 0.010008362), (2, 0.17508595), (3, 0.010006598), (4, 0.010005636)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\022-espressioni-regolari-07.pdf,11,"12Espressioni regolari
esercizio 3
scrivere le espressioni regolari corrispondenti ai seguenti linguaggi 
su Σ=  { 0, 1}
3.a tutte le sequenze alternate (cioè che non contengono né 00
né11) di 0e 1che iniziano e finiscono per 1o che iniziano 
e finiscono per 0
3.b tutte le sequenze con un numero pari di 0",espressioni regolari esercizio scrivere espressioni regolari corrispondenti seguenti linguaggi σ a tutte sequenze alternate cioè contengono né né e che iniziano finiscono o iniziano finiscono b tutte sequenze numero pari ,"[0, 5]","[(0, 0.7211994), (5, 0.24400721)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\022-espressioni-regolari-07.pdf,12,"13Espressioni regolari
esercizio 4
scrivere l’espressione regolare che descrive il complemento dei 
seguenti linguaggi su Σ=  { 0, 1}
4.a 1(0+1)*
4.b 0*+1*
",espressioni regolari esercizio scrivere l’espressione regolare descrive complemento seguenti linguaggi σ a b ,"[0, 1, 2, 3, 4]","[(0, 0.010006958), (1, 0.010005069), (2, 0.61821413), (3, 0.010005055), (4, 0.010003923)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\022-espressioni-regolari-07.pdf,13,"14Espressioni regolari
esercizio 5
semplificare le seguenti espressioni regolari su Σ={a, b, c}
5.a (a*b+b*cb)*
5.b ((a*b*)*(b*a*)*)*
",espressioni regolari esercizio semplificare seguenti espressioni regolari σa b c a abbcb b abba,[1],"[(1, 0.9181638)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\022-espressioni-regolari-07.pdf,14,"15Espressioni regolari
esercizio 6
determinare le espressioni re golari per i seguenti linguaggi
6.a i numeri naturali in notazione binaria 
6.b i numeri binari su 4 bit 
6.c i numeri naturali in base 10
6.d i numeri naturali pari 
6.e i numeri pari in base 3
",espressioni regolari esercizio determinare espressioni re golari seguenti linguaggi a numeri naturali notazione binaria b numeri binari bit c numeri naturali base d numeri naturali pari e numeri pari base ,"[5, 8]","[(5, 0.7762729), (8, 0.19295081)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\022-espressioni-regolari-07.pdf,15,"16Soluzioni
soluzione esercizio 3
3.a (10)*1+(01)*0
3.b 1*(01*01*)*
soluzione esercizio 4
4.a (0(0+1)*)*
4.b ((1+0)*0(1+0)*1(1+0)*)+((1+0)*1(1+0)*0(1+0)*) 
oppure 
(0+1)*(01+10)(0+1)*",soluzioni soluzione esercizio a b soluzione esercizio a b oppure ,"[0, 1, 2, 3, 4]","[(0, 0.014290259), (1, 0.0142903235), (2, 0.014293048), (3, 0.014288833), (4, 0.014287868)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\022-espressioni-regolari-07.pdf,16,"17Soluzioni
soluzione esercizio 6
6.a i numeri naturali in notazione binaria 
0+1(0+1)*
6.b i numeri binari su 4 bit 
(0+1) (0+1) (0+1) (0+1)
6.c i numeri naturali in base 10
0+(1+2+3+4+5+6+7+8+9)(0+1+2+3+4+
5+6+7+8+9)*",soluzioni soluzione esercizio a numeri naturali notazione binaria b numeri binari bit c numeri naturali base ,[8],"[(8, 0.93570095)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\022-espressioni-regolari-07.pdf,17,"18Soluzioni
6.d i numeri naturali pari 
(0+2+4+6+8)+(1+2+..+9)(0+1+..+9)*(0+2+4+6
+8)
6.e i numeri pari in base 3
si noti che i numeri pari in base tre sono tutte e 
sole quelle sequenze di cifre in { 0,1,2} con un 
numero pari di 1
Sia α= (2(0+2)*) e β= (1(0+2)*1(0+2)*)
Il linguaggio è rappresentabile da:
αα*β*+  α*ββ*+  0",soluzioni d numeri naturali pari e numeri pari base noti numeri pari base tre tutte sole sequenze cifre numero pari α β linguaggio rappresentabile da ααβ αββ ,[5],"[(5, 0.96249163)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,0,"1Informatica Teorica
Cardinalità transfinite",informatica teorica cardinalità transfinite,"[0, 1, 2, 3, 4]","[(0, 0.025009803), (1, 0.02501232), (2, 0.025010364), (3, 0.025014283), (4, 0.025010403)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,1,"2Pidgeonhole principle
teorema : 
dati due insiemi A e B tali che
0 < |B| < |A| < ∞
non esiste una funzione f: A →B che sia totale e 
iniettiva
dimostrazione : 
basata sulla cardinalità di B e per induzione",pidgeonhole principle teorema dati due insiemi b tali b a ∞ esiste funzione f →b totale iniettiva dimostrazione basata cardinalità b induzione,[0],"[(0, 0.93998617)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,2,"3Pidgeonhole principle
ma questa 
assegnazione 
non è totale!",pidgeonhole principle assegnazione totale,"[0, 1, 2, 3, 4]","[(0, 0.81993437), (1, 0.020006845), (2, 0.020005478), (3, 0.020005997), (4, 0.020007277)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,3,"4Pidgeonhole principle
… e questa non 
è iniettiva!
a/1
",pidgeonhole principle … iniettiva a,"[0, 1, 2, 3, 4]","[(0, 0.77496576), (1, 0.025005074), (2, 0.025002073), (3, 0.025003051), (4, 0.025002623)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,4,"5Dimostrazione (pidgeonhole principle)
• dimostrazione per induzione
– passo base: |B|=1
– passo induttivo: |B|>1
• passo base (|B|=1)
B={b}, |A|>1, es. A={a1,a2}
se f è totale, allora f(a1)=b e f(a2)=b
allora f non è iniettiva perché |f -1(b)|>1",dimostrazione pidgeonhole principle • dimostrazione induzione – passo base b – passo induttivo b • passo base b bb a es aaa f totale allora fab fab allora f iniettiva f b,[7],"[(7, 0.9571314)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,5,"6Dimostrazione (pidgeonhole principle)
• passo induttivo: |B|>1
supponiamo sia vero per |B| = n ed |A| ≥n+1
dimostriamo che è vero per |B| = n+1 e |A| ≥n+2
ipotizziamo per assurdo che esista una funzione totale 
iniettiva f e scegliamo un qualunque elemento b di B
se |f -1(b)|≥2 ⇒contraddizione ⇒teorema dimostrato
se |f -1(b)|≤1 consideriamo
A′=A-{f -1(b)}   e    B ′=B-{b} 
|A′| ≥n+1 > |B′| = n
applichiamo l’ipotesi induttiva ⇒contraddizione ",dimostrazione pidgeonhole principle • passo induttivo b supponiamo vero b n a ≥n dimostriamo vero b n a ≥n ipotizziamo assurdo esista funzione totale iniettiva f scegliamo qualunque elemento b b f b≥ ⇒contraddizione ⇒teorema dimostrato f b≤ consideriamo a′a f b b ′b b a′ ≥n b′ n applichiamo l’ipotesi induttiva ⇒contraddizione,[0],"[(0, 0.9608492)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,6,"Considerazioni sul pidgeonhole principle 
• il pidgeonhole principle mette in relazione la 
numerosità degli insiemi con le proprietà delle funzioni che hanno gli insiemi come domini o codomini
• in particolare se esiste una funzione biettiva 
f: A→B
– esiste una funzione totale ed iniettiva f: A →B 
– esiste una funzione totale ed iniettiva f-1: B→A 
– per il pidgeonhole principle non può essere |B| > |A| 
né |A| > |B|
7",considerazioni pidgeonhole principle • pidgeonhole principle mette relazione numerosità insiemi proprietà funzioni insiemi domini codomini • particolare esiste funzione biettiva f a→b – esiste funzione totale iniettiva f →b – esiste funzione totale iniettiva f b→a – pidgeonhole principle può essere b a né a b ,"[0, 8]","[(0, 0.41138396), (8, 0.56003666)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,7,"8Cardinalità di insiemi infiniti
• due insiemi sono equinumerosi se esiste una 
biiezione tra essi
• la relazione di equinumerosità è una relazione 
di equivalenza
• possiamo ora dare una definizione rigorosa di 
cardinalità di un insieme finito A:
|A|=0 se A= ∅
|A|=n se A è equinumeroso a {0, 1, …, n-1}",cardinalità insiemi infiniti • due insiemi equinumerosi esiste biiezione essi • relazione equinumerosità relazione equivalenza • possiamo ora dare definizione rigorosa cardinalità insieme finito a a a ∅ an equinumeroso … n ,"[1, 7]","[(1, 0.20818396), (7, 0.753694)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,8,"9Numerabilità
• insiemi numerabili
– un insieme è numerabile se è equinumeroso a N
– un insieme ha cardinalità aleph zero (א0) se è
equinumeroso a N, cioè se è numerabile
• insiemi contabili
– un insieme è contabile se è finito o numerabile
– sottoinsiemi di insiemi contabili sono contabili",numerabilità • insiemi numerabili – insieme numerabile equinumeroso n – insieme cardinalità aleph zero א equinumeroso n cioè numerabile • insiemi contabili – insieme contabile finito numerabile – sottoinsiemi insiemi contabili contabili,[1],"[(1, 0.9571356)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,9,"10Numerabilità: א0+ k = א0
teorema : 
per ogni intero k, l’insieme Nkdegli interi 
maggiori o uguali a k è numerabile
dimostrazione : 
biiezione con N
N : 01234…
Nk:k+0 k+1 k+2 k+3 k+4 …",numerabilità א k א teorema ogni intero k l’insieme nkdegli interi maggiori uguali k numerabile dimostrazione biiezione n n … nkk k k k k …,[7],"[(7, 0.92497915)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,10,"11Numerabilità degli interi relativi
teorema : 
l’insieme Z degli interi relativi è numerabile
dimostrazione : 
biiezione con N
Z:01-12-23-34-4…
N : 012345678…",numerabilità interi relativi teorema l’insieme z interi relativi numerabile dimostrazione biiezione n z … n …,"[0, 1, 2, 3, 4]","[(0, 0.011112766), (1, 0.011114271), (2, 0.0111122215), (3, 0.011112106), (4, 0.011112294)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,11,"12Numerabilità dei numeri pari ( א0 + א0= א0)
teorema : 
l’insieme P dei numeri pari è numerabile
dimostrazione : 
biiezione con N
P:024681 0 1 2 1 4 1 6 …
N : 012345678…",numerabilità numeri pari א א א teorema l’insieme p numeri pari numerabile dimostrazione biiezione n p … n …,"[0, 1, 2, 3, 4]","[(0, 0.01111311), (1, 0.011114066), (2, 0.011112151), (3, 0.011112109), (4, 0.011112273)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,12,"13Numerabilità: א0×א0 = א0
teorema : 
l’insieme N2delle coppie di naturali è numerabile
dimostrazione : 
tecnica usata da Cantor per mostrare la 
numerabilità di Q
0    1    2    3    4
00    1    3    6    10
12    4    7    11
25    8    12 
39   13
414osservazione : 
per ogni n ∈N, se A è numerabile, 
anche Anè numerabile",numerabilità א×א א teorema l’insieme ndelle coppie naturali numerabile dimostrazione tecnica usata cantor mostrare numerabilità q osservazione ogni n ∈n numerabile anè numerabile,[7],"[(7, 0.93999124)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,13,"14Insiemi non numerabili
per dimostrare la non numerabilità di un insieme si 
usa la tecnica di diagonalizzazione di Cantor
teorema :  R non è numerabile
dimostrazione : 
1. dimostriamo che R è equinumeroso a (0,1)
2. dimostriamo che (0,1) non è numerabile",insiemi numerabili dimostrare numerabilità insieme usa tecnica diagonalizzazione cantor teorema r numerabile dimostrazione dimostriamo r equinumeroso dimostriamo numerabile,[7],"[(7, 0.939984)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,14,"15Insiemi non numerabili
(0,1) e R sono equinumerosi:  una biiezione è data, per
esempio, dalla funzione y =
00.10.20.30.40.50.60.70.80.91
- 1 0 - 9- 8- 7- 6- 5- 4- 3- 2- 1 0 1 2 3 4 5 6 7 8 9 1 0(2x+1)1
y
x",insiemi numerabili r equinumerosi biiezione data esempio funzione y x y x,"[0, 1, 2, 3, 4]","[(0, 0.8874534), (1, 0.012506265), (2, 0.012505839), (3, 0.012503775), (4, 0.012504387)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,15,"16Insiemi non numerabili
• Supponiamo per assurdo che una enumerazione 
di (0,1) esista, denotiamo con Φil’iesimo 
elemento di (0,1)
• consideriamo r ∈(0,1) che ha come i-esima cifra 
della mantissa (i=1, 2, …) un valore diverso da 0, 
da 9, e dal valore della i-esima cifra di Φi",insiemi numerabili • supponiamo assurdo enumerazione esista denotiamo φil’iesimo elemento • consideriamo r ∈ esima cifra mantissa i … valore diverso valore esima cifra φi,[1],"[(1, 0.9526084)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,16,"17Insiemi non numerabili
r, detto elemento diagonale , non fa parte della 
enumerazione, in quanto differisce da ogni elemento della enumerazione in almeno una cifra, e ciò è
assurdocifre delle mantisse di Φ
i:
1234567…
Φ15104396…
Φ22410000…
Φ37985377…
Φ40046031…
r 6517 …………",insiemi numerabili r detto elemento diagonale fa parte enumerazione differisce ogni elemento enumerazione almeno cifra ciò assurdocifre mantisse φ i … φ… φ… φ… φ… r …………,[6],"[(6, 0.947038)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,17,"Nota sulla scelta delle cifre di r
• le cifre dell’elemento diagonale rsono scelte in 
modo da essere diverse da 0 e da 9
– non si può generare la mantissa 0000… che non 
appartiene all’insieme
– non si possono generare numeri terminanti con 9 
periodico che corrispondono ad una seconda 
rappresentazione di un numero non-periodico
• 0.999… coincide con 1
• 0.123999… coincide con 0.124
18",nota scelta cifre r • cifre dell’elemento diagonale rsono scelte modo essere diverse – può generare mantissa … appartiene all’insieme – possono generare numeri terminanti periodico corrispondono seconda rappresentazione numero periodico • … coincide • … coincide ,"[5, 7]","[(5, 0.39216253), (7, 0.5758245)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,18,"19Insiemi non numerabili
teorema :  P(N) non è numerabile
dimostrazione :
supponiamo per assurdo che lo sia
sia P1, P2, …, Pi, … una sua enumerazione
a ciascun Piassociamo la sequenza
bi0, bi1, bi2, …, dove
bij=0 se j∉Pi
bij=1 se j∈Pi",insiemi numerabili teorema pn numerabile dimostrazione supponiamo assurdo p p … pi … enumerazione ciascun piassociamo sequenza bi bi bi … bij j∉pi bij j∈pi,"[0, 5, 7]","[(0, 0.6305816), (5, 0.2531053), (7, 0.07945271)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,19,"20Insiemi non numerabili
costruiamo ora l’insieme P(diagonale) con 
sequenza p0, p1, …, pk,… dove
pk= 1 - bkk
Pdifferisce da ogni Pi, in quanto
i∈P⇔i∉Pi
osservazione : la non numerabilità di P(N) vale 
anche per l’insieme delle parti di ogni insieme di 
cardinalità א0",insiemi numerabili costruiamo ora l’insieme pdiagonale sequenza p p … pk… pk bkk pdifferisce ogni pi i∈p⇔i∉pi osservazione numerabilità pn vale l’insieme parti ogni insieme cardinalità א,[5],"[(5, 0.9499723)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,20,"21Cardinalità transfinite
teorema : R è equinumeroso a P(N) ed è quindi 
continuo
dimostrazione : 
è sufficiente mostrare che la proprietà vale per i 
reali in (0,1), vista la biiezione tra R e (0,1)
uso della rappresentazione binaria della mantissa e 
del concetto di funzione caratteristica",cardinalità transfinite teorema r equinumeroso pn quindi continuo dimostrazione sufficiente mostrare proprietà vale reali vista biiezione r uso rappresentazione binaria mantissa concetto funzione caratteristica,[7],"[(7, 0.9549908)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,21,"22Cardinalità transfinite – notazione aleph
• se un insieme finito ha cardinalità n, il suo 
insieme delle parti ha cardinalità 2n
• analogamente, se un insieme infinito ha 
cardinalità א0denotiamo con 2א0la 
cardinalità del suo insieme delle parti
• gli insiemi con cardinalità 2א0sono detti 
continui
• Cantor ha dimostrato che esistono infiniti 
cardinali transfiniti ( א0, 2א0, 22א0, …)",cardinalità transfinite – notazione aleph • insieme finito cardinalità n insieme parti cardinalità n • analogamente insieme infinito cardinalità אdenotiamo אla cardinalità insieme parti • insiemi cardinalità אsono detti continui • cantor dimostrato esistono infiniti cardinali transfiniti א א א …,[6],"[(6, 0.9639783)]"
dataExtraction\data_test\rootfolder\universita\sistemi_inteliggenti\025-cardinalita-transfinite-06.pdf,22,"Conseguenze della teoria
• vedremo come considerazioni relative alla cardinalità di 
insiemi infiniti daranno interessanti spunti sull’idea di 
calcolabilità
• per il momento ci limitiamo alla seguente riflessione
– un linguaggio è un sottoinsieme di Σ*
• qual è la cardinalità di Σ*?
• qual è la cardinalità di P( Σ*)?
• quanti linguaggi esistono?
– un programma in un linguaggio di programmazione qualsiasi 
può essere considerato come una sequenza finita di caratteri
• quanti sono i possibili progr ammi che possiamo scrivere?
23",conseguenze teoria • vedremo considerazioni relative cardinalità insiemi infiniti daranno interessanti spunti sull’idea calcolabilità • momento limitiamo seguente riflessione – linguaggio sottoinsieme σ • qual cardinalità σ • qual cardinalità p σ • linguaggi esistono – programma linguaggio programmazione qualsiasi può essere considerato sequenza finita caratteri • possibili progr ammi possiamo scrivere ,[3],"[(3, 0.97426707)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,0,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniInformation Visualization
G. Da Lozzo, V. Di Donato, M. PatrignaniInfovis on the Web
", web dev copyright © g lozzo v donato m patrignaniinformation visualization g lozzo v donato m patrignaniinfovis on the web,"[2, 6]","[(2, 0.48222852), (6, 0.45108768)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,1,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniCopyright notice
All the pages/slides in this presentation, including but not limited 
to, images, photos, animations, videos, sounds, music, and text (hereby referred to as “materi al”) are protected by copyright
This material, with the exception of some multimedia elements 
licensed by other organizations, is property of the authors and/or organizations appearing in the first slide
This material, or its parts, can be reproduced and used for 
didactical purposes within universities and schools, provided 
that this happens for non-profit purposes
Any other use is prohibited, unless explicitly authorized by the
authors on the basis of an explicit agreement
This copyright notice must always be redistributed together with
the material, or its portions", web dev copyright © g lozzo v donato m patrignanicopyright notice all the pagesslides this presentation including but not limited to images photos animations videos sounds music and text hereby referred to as “materi al” are protected by copyright this material with the exception of some multimedia elements licensed by other organizations is property of the authors andor organizations appearing the first slide this material or its parts can be reproduced and used for didactical purposes within universities and schools provided that this happens for profit purposes any other use is prohibited unless explicitly authorized by the authors on the basis of an explicit agreement this copyright notice must always be redistributed together with the material or its portions,[4],"[(4, 0.991665)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,2,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniCredits
Parts of this matherial is inspired by 
TM, http://www.teaching-materials.org/
The first version of these slides were produced by
Valentino Di Donato Giordano Da Lozzo", web dev copyright © g lozzo v donato m patrignanicredits parts of this matherial is inspired by tm httpwwwteaching materialsorg the first version of these slides were produced by valentino donato giordano lozzo,[2],"[(2, 0.96536607)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,3,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniWeb data visualization: motivations
Visualizations aren’t truly visual unless they are 
seen. Getting your work out there for others to 
see is critical, and publishing on the Web is the 
quickest way to reach a global audience
Interactive Data Visualization for the Web,
Scott Murray ’13", web dev copyright © g lozzo v donato m patrignaniweb data visualization motivations visualizations aren’t truly visual unless they are seen getting your work out there for others to see is critical and publishing on the web is the quickest way to reach global audience interactive data visualization for the web scott murray ’,[9],"[(9, 0.98162174)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,4,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniWeb data visualization: motivations
Why Web visualization services?
quickest diffusion
global reach
operating system independency
However we may have browser(s) dependency
this problem is more and more marginal", web dev copyright © g lozzo v donato m patrignaniweb data visualization motivations why web visualization services quickest diffusion global reach operating system independency however we may have browsers dependency this problem is more and more marginal,[9],"[(9, 0.96783954)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,5,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJavaScript basic ingredients
HTML CSS JavaScriptCore
DOM
BOM Language core
based on ECMAScript 
Document Object Model (DOM)
API for HTML/XML documents
Browser Object Model (BOM)
browser window manipulationnot the subject of 
these slides", web dev copyright © g lozzo v donato m patrignanijavascript basic ingredients html css javascriptcore dom bom language core based on ecmascript document object model dom api for htmlxml documents browser object model bom browser window manipulationnot the subject of these slides,[2],"[(2, 0.97186255)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,6,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJavaScript basic ingredients
JavaScript core language
based on ECMAScript specification (standard ISO)
• other dialects of ECMAScript include JavaScript, Microsoft Jscript, Adobe 
Flash ActionScript
provides core scripting capabilities for the browser
Document Object Model (DOM)
data model that is created for each page that is loaded
HTML DOM provides also an API to manipulate the model 
Browser Object Model (BOM)
allows to perform actions that do not directly relate to the page content 
(window position, decorations, status bar text, etc)
no official standards", web dev copyright © g lozzo v donato m patrignanijavascript basic ingredients javascript core language based on ecmascript specification standard iso • other dialects of ecmascript include javascript microsoft jscript adobe flash actionscript provides core scripting capabilities for the browser document object model dom data model that is created for each page that is loaded html dom provides also an api to manipulate the model browser object model bom allows to perform actions that do not directly relate to the page content window position decorations status bar text etc no official standards,[4],"[(4, 0.9884481)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,7,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniGraphics basic ingredients
By using JavaScript it is possible to produce
raster graphic contents
vectorial graphic contents
Graphics
Raster VectorialWeb
Graphics
HTML5
CanvasSVG", web dev copyright © g lozzo v donato m patrignanigraphics basic ingredients by using javascript it is possible to produce raster graphic contents vectorial graphic contents graphics raster vectorialweb graphics html canvassvg,"[2, 5]","[(2, 0.3003659), (5, 0.66761655)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,8,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniCrash course JavaScript", web dev copyright © g lozzo v donato m patrignanicrash course javascript,"[0, 1, 2, 3, 4]","[(0, 0.011116906), (1, 0.0111190025), (2, 0.5269012), (3, 0.011117405), (4, 0.011118006)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,9,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: What is it?
It is THE scripting language of the Web
It is not Java ☺
names: Mochan ÆLiveScript ÆJavaScript 
Running environments
a browser (in these slides)
a JavaScript runtime environment 
• most renown is Node.js, built on  Chrome's V8 JavaScript engine
Does not need any special software
it is just enabled within browser
It is the building block for very popular libraries such as 
JQuery and D3.js", web dev copyright © g lozzo v donato m patrignanijs what is it it is the scripting language of the web it is not java ☺ names mochan ælivescript æjavascript running environments a browser in these slides a javascript runtime environment • most renown is nodejs built on chromes v javascript engine does not need any special software it is just enabled within browser it is the building block for very popular libraries such as jquery and djs,"[2, 4]","[(2, 0.7924149), (4, 0.19486582)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,10,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: History
1995
JS was created by Brendan Eich at Netscape
1996
Microsoft releases ""JScript” for IE3
1997
JS was standardized in the ""ECMAScript"" specifications
2010
Node.js was released
2017
ECMAScript 8 was released", web dev copyright © g lozzo v donato m patrignanijs history  js was created by brendan eich at netscape  microsoft releases jscript” for ie  js was standardized the ecmascript specifications  nodejs was released  ecmascript was released,[8],"[(8, 0.96664935)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,11,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniECMAScript: Language Core
Variables
declaration, naming conventions
Data types
primitive types 
special values  
loose/dynamic typing
Expressions
Arrays
mutator, accessor, and iterator methods
Objects
Functions
variables scope, “window” object
Call Stack
blocking calls, asynchronous calls, concurrency and event loop", web dev copyright © g lozzo v donato m patrignaniecmascript language core variables declaration naming conventions data types primitive types special values loosedynamic typing expressions arrays mutator accessor and iterator methods objects functions variables scope “window” object call stack blocking calls asynchronous calls concurrency and event loop,"[2, 6]","[(2, 0.39651293), (6, 0.5749018)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,12,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Variables (until ECMAScript 5)
Used to store values
Declaration syntax 
keyword “var”+ variable-name
no data type required
Declare, then initialize in 2 statements
Or declare and initialize in one statement
Re-assign the value latervarx; 
x =5;
vary =2;
varx = 5; 
x =2;", web dev copyright © g lozzo v donato m patrignanijs variables until ecmascript used to store values declaration syntax keyword “var” variable name no data type required declare then initialize statements or declare and initialize one statement re assign the value latervarx x vary varx x ,[2],"[(2, 0.972712)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,13,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Variables (from ECMAScript 6 on)
Three types of variable declarations
var: only global or local (function) scope
• assigned to object window if in global scope
• assigned to function block otherwise
let: block scope “{ … }” and loop scope
const : for read-only variables
varx = 2; 
// here x is 2
{
letx =1;
// here x is 1
}
// here x is 2 againvarx = 5; 
for(let x=0; x<10; x++){
// do something here
}
// here x is 5 again", web dev copyright © g lozzo v donato m patrignanijs variables from ecmascript on three types of variable declarations var only global or local function scope • assigned to object window if global scope • assigned to function block otherwise let block scope “ … ” and loop scope const for read only variables varx here x is letx here x is here x is againvarx forlet x x x do something here here x is again,[2],"[(2, 0.98447734)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,14,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Variable names
Syntax requirements
begin with letters, $ or _
• a variable named “$” has been adopted by  the jQuery library as the shorthand 
global namespace reference
only contain letters, numbers, $ and _
case sensitive
avoid reserved words
• e.g.: break, const, if, typeof, etc
Best practices
choose clarity and meaning
prefer camelCase for multipleWords (instead of under_score) ", web dev copyright © g lozzo v donato m patrignanijs variable names syntax requirements begin with letters or • variable named “” has been adopted by the jquery library as the shorthand global namespace reference only contain letters numbers and case sensitive avoid reserved words • eg break const if typeof etc best practices choose clarity and meaning prefer camelcase for multiplewords instead of underscore,"[1, 2]","[(1, 0.32023296), (2, 0.66403997)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,15,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Variable scopes
A variable with “ local/function ” scope:
function addNumbers(num1, num2) { 
varlocalResult =num1 +num2; 
console.log( ""Local result is: "" +localResult);
} 
addNumbers( 5, 7); 
console.log(localResult); ÎReferenceError: localR esult is not defined
varglobalResult; 
function addNumbers(num1, num2) { 
globalResult = num1 + num2;console.log( ""Global result is: "" +globalResult);
} addNumbers( 5, 7); 
console.log(globalResult);A variable with “ global/program ” scope:", web dev copyright © g lozzo v donato m patrignanijs variable scopes a variable with “ localfunction ” scope function addnumbersnum num varlocalresult num num consolelog local result is localresult addnumbers consoleloglocalresult îreferenceerror localr esult is not defined varglobalresult function addnumbersnum num globalresult num numconsolelog global result is globalresult addnumbers consolelogglobalresulta variable with “ globalprogram ” scope,[1],"[(1, 0.98042405)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,16,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Warning
In the browser the global scope is the window object
all global variables belong to the window object (e.g., 
window.globalResult )
If you assign a value to a variable that has not been 
declared, it will automatically become a global variable
the usage of undeclared variables is discouraged
// carName not defined
function myFunction() { 
carName =""Punto""; 
}myFunction();var carName;
function myFunction() { 
carName =""Punto""; 
}myFunction();=", web dev copyright © g lozzo v donato m patrignanijs warning in the browser the global scope is the window object all global variables belong to the window object eg windowglobalresult if you assign value to variable that has not been declared it will automatically become global variable the usage of undeclared variables is discouraged carname not defined function myfunction carname punto myfunctionvar carname function myfunction carname punto myfunction,"[2, 4]","[(2, 0.8813794), (4, 0.10549715)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,17,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Expressions
Variables can also store the result of any expression
varx = 28+ 38; 
varhello = ""Hello "" ;
varworld = ""World”;
vargreeting = hello + world;
Variables can even store input from users using the prompt 
function
varname = prompt( ""What's your name?"" );
console.log( 'Hello ' + name);", web dev copyright © g lozzo v donato m patrignanijs expressions variables can also store the result of any expression varx varhello hello varworld world” vargreeting hello world variables can even store input from users using the prompt function varname prompt whats your name consolelog hello name,[6],"[(6, 0.9780425)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,18,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Expressions
Variables can also store the result of any expression
varx = 28+ 38; 
varhello = ""Hello "" ;
varworld = ""World”;
vargreeting = hello + world;
Variables can even store input from users using the prompt 
function
varname = prompt( ""What's your name?"" );
console.log( 'Hello ' + name);
", web dev copyright © g lozzo v donato m patrignanijs expressions variables can also store the result of any expression varx varhello hello varworld world” vargreeting hello world variables can even store input from users using the prompt function varname prompt whats your name consolelog hello name,[6],"[(6, 0.97804266)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,19,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Primitive data types
ECMAScript defines six primitive data types
boolean
number 
string
null
• the value null represents the inte ntional absence of any object value
• null is the unique value of type null
undefined
• a variable that has not been assigned a value has the value undefined of type 
undefined
symbol (new in ECMAScript 6)
• can be used as a key in an object property", web dev copyright © g lozzo v donato m patrignanijs primitive data types ecmascript defines six primitive data types boolean number string null • the value null represents the inte ntional absence of any object value • null is the unique value of type null undefined • variable that has not been assigned value has the value undefined of type undefined symbol new ecmascript • can be used as key an object property,[4],"[(4, 0.98474014)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,20,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Non-primitive data types
Two data-types are not primitive
objects
functions
They can be created by the user
we will se how to manage them in the following", web dev copyright © g lozzo v donato m patrignanijs primitive data types two data types are not primitive objects functions they can be created by the user we will how to manage them the following,[4],"[(4, 0.9678478)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,21,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Loose typing
JavaScript is dynamically typed
variables are not directly  associated a static type
JS figures out the type based on the current value
any variable can be assigned (and  reassigned) values of any type
• the type changes as the value changes
typeof vname returns a string containing the current type of the 
variable vname
•typeof is an operator, not a function
varx; 
x = 2;
console.log( typeofx); // yields “number”
x = ""Hello"";
console.log( typeofx); // yields “string”", web dev copyright © g lozzo v donato m patrignanijs loose typing javascript is dynamically typed variables are not directly associated static type js figures out the type based on the current value any variable can be assigned and reassigned values of any type • the type changes as the value changes typeof vname returns string containing the current type of the variable vname •typeof is an operator not function varx x consolelog typeofx yields “number” x hello consolelog typeofx yields “string”,"[2, 3, 4]","[(2, 0.37099874), (3, 0.3940294), (4, 0.22466956)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,22,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Loose typing
At any moment a variable has only one type
‘2’ has been converted to string (type coercion) to perform a 
concatentationvary = 2 + "" cats""; 
console.log( typeofy); // yields “string”", web dev copyright © g lozzo v donato m patrignanijs loose typing at any moment variable has only one type ‘’ has been converted to string type coercion to perform concatentationvary cats consolelog typeofy yields “string”,[1],"[(1, 0.9689523)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,23,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Primitive data types
string
any immutable list of chars
vargreeting = ""Hello world!"" ;
var show = ""Breaking bad!"" ;
varmyAge = 28; 
varpi = 3.14;number
integer (3,-56) or floating point (5.45)
boolean
logical values true or false (which are constants)
vartrueValue = true; 
varfalseValue = false;", web dev copyright © g lozzo v donato m patrignanijs primitive data types string any immutable list of chars vargreeting hello world var show breaking bad varmyage varpi number integer or floating point boolean logical values true or false which are constants vartruevalue true varfalsevalue false,[7],"[(7, 0.9756656)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,24,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Special values
undefined
a value that hasn’t been defined/declared yet
varnotDefined;
console.log( typeofnotDefinied); // yields “undefined”
null 
an explicitly empty value
the operator typeof returns (erroneously) “object” instead of “null”
varnullVariable = null;
console.log( typeofnullVariable); // yields “object”
var sym = Symbol(’ foo') symbol 
unique identifier created via factory method", web dev copyright © g lozzo v donato m patrignanijs special values undefined a value that hasn’t been defineddeclared yet varnotdefined consolelog typeofnotdefinied yields “undefined” null an explicitly empty value the operator typeof returns erroneously “object” instead of “null” varnullvariable null consolelog typeofnullvariable yields “object” var sym symbol’ foo symbol unique identifier created via factory method,[2],"[(2, 0.9763023)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,25,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Type coercion
Type coercion is the automatic conversion of a value from one 
type to another type in order to perform an operation (assignment, comparison, etc) 
JavaScript has two comparison operators, one with type 
coercion (==) and one without it (===)
2 == ‘2’ // type coercion ‐> true
2 === ‘2’ // no type coercion ‐> false
varnotDefined; // type (and value) “undefined”
varnullVariable = null; // type “null”
notDefined ==nullVariable  // type coercion ‐> true
notDefined === nullVariable // no type coercion ‐> false", web dev copyright © g lozzo v donato m patrignanijs type coercion type coercion is the automatic conversion of value from one type to another type order to perform an operation assignment comparison etc javascript has two comparison operators one with type coercion and one without it ‘’ type coercion ‐ true ‘’ no type coercion ‐ false varnotdefined type and value “undefined” varnullvariable null type “null” notdefined nullvariable type coercion ‐ true notdefined nullvariable no type coercion ‐ false,[5],"[(5, 0.98656154)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,26,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Objects
Objects are collections of key-value pairs of any type
varinstructor ={
firstName: ""Giordano"" , 
lastName: ""Da Lozzo"" , 
age: 34,
fullname: function (){
return this.firstName + """"+ this.lastName
}
};
Objects are associative arrays
bracket notation
dot notationvar myName = instructor[firstName];
var myName = instructor.firstName; ", web dev copyright © g lozzo v donato m patrignanijs objects objects are collections of key value pairs of any type varinstructor firstname giordano lastname da lozzo age fullname function return thisfirstname thislastname objects are associative arrays bracket notation dot notationvar myname instructorfirstname var myname instructorfirstname,"[1, 5, 7]","[(1, 0.31975365), (5, 0.5768731), (7, 0.08443509)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,27,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Objects
Objects inherit their prototype from Object
loop using the keyword “in”
for(varprop ininstructor) { 
if (instructor. hasOwnProperty (prop)) {
console.log( ""property: "" , prop); 
console.log( ""value: "" , instructor[ prop]); 
}
}", web dev copyright © g lozzo v donato m patrignanijs objects objects inherit their prototype from object loop using the keyword “in” forvarprop ininstructor if instructor hasownproperty prop consolelog property prop consolelog value instructor prop ,[5],"[(5, 0.9689533)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,28,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Objects access
Object.keys(objectName)
lists all the property names of objectName
Object.values(objectName)
lists all the property values of objectNameObject.keys(aboutMe)
[""hometown"", ""hair""]
Object.values(aboutMe)
[""Rome, IT"", ""brown""]varaboutMe ={
hometown: “Rome, IT"" , 
hair: “brown“
};", web dev copyright © g lozzo v donato m patrignanijs objects access objectkeysobjectname lists the property names of objectname objectvaluesobjectname lists the property values of objectnameobjectkeysaboutme hometown hair objectvaluesaboutme rome it brownvaraboutme hometown “rome it hair “brown“ ,"[1, 9]","[(1, 0.38408533), (9, 0.58512264)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,29,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Arrays
An array can hold many ordered values
the property length gives you the number of such values 
An array is actually a special objectvararrayName =[item1, item2, item3];
arrayName.length    // yields 3
typeof arrayName;  // yields ""object""", web dev copyright © g lozzo v donato m patrignanijs arrays an array can hold many ordered values the property length gives you the number of such values an array is actually special objectvararrayname item item item arraynamelength yields typeof arrayname yields object,"[2, 5]","[(2, 0.5405063), (5, 0.43725246)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,30,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Looping within an array
We can loop either by using the classical “for”
Or by using the method “forEach” with a callback function
this callback function takes up to three variablesfor(vari =0; i <arrayName. length; i++) {
console.log(arrayName[i]); 
}
[2, 5, 8, 9].forEach( function (element, index, array) {
console.log( ""Current el: "" , element); 
console.log( ""Index of current el: "" , index); 
console.log( ""Whole array: "" , array); 
});", web dev copyright © g lozzo v donato m patrignanijs looping within an array we can loop either by using the classical “for” or by using the method “foreach” with callback function this callback function takes up to three variablesforvari arrayname length i consolelogarraynamei foreach function element index array consolelog current el element consolelog index of current el index consolelog whole array array ,"[2, 4]","[(2, 0.78006214), (4, 0.2045401)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,31,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Array iterators
These methods take as arguments functions to be called back 
while processing the array
arrayName.forEach
• calls a function for each element in the array
arrayName.every
• returns true if every element in this ar ray satisfies the provided testing callback 
arrayName.filter
• creates a new array with all of the elements  for which the provided filtering callback 
returns true
Callback functions have parameters: element, index, array", web dev copyright © g lozzo v donato m patrignanijs array iterators these methods take as arguments functions to be called back while processing the array arraynameforeach • calls function for each element the array arraynameevery • returns true if every element this ar ray satisfies the provided testing callback arraynamefilter • creates new array with of the elements for which the provided filtering callback returns true callback functions have parameters element index array,[4],"[(4, 0.9857054)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,32,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Heterogeneous arrays
An array can hold values of different types
prints to the console “boolean” , “string” , “object” , “number”, 
“object”, “function”var arrayName = [ true,""ciao"",{},2,null, (x) => ‐x];
arrayName. forEach(
function (el){
console.log( typeof el)
}
);", web dev copyright © g lozzo v donato m patrignanijs heterogeneous arrays an array can hold values of different types prints to the console “boolean” “string” “object” “number” “object” “function”var arrayname trueciaonull x ‐x arrayname foreach function el consolelog typeof el ,"[0, 2]","[(0, 0.6756697), (2, 0.295743)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,33,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Array mutators (1/2)
These methods modify the array
array.pop : remove the last element
array.push : add one or more element to end
array.shift : remove the first element
array.unshift : add one or more in front
var fruits = [ ""Banana"" , ""Orange"" ];
fruits.unshift( ""Lemon"");
// fruits contains [""Lem on"", ""Banana"", ""Orange”]var fruits = [ ""Banana"" , ""Orange"" ];
fruits.push( ""Lemon"");
// fruits contains [ ""Banana"", ""Orange”, ""Lemon""]", web dev copyright © g lozzo v donato m patrignanijs array mutators these methods modify the array arraypop remove the last element arraypush add one or more element to end arrayshift remove the first element arrayunshift add one or more front var fruits banana orange fruitsunshift lemon fruits contains lem on banana orange”var fruits banana orange fruitspush lemon fruits contains banana orange” lemon,[4],"[(4, 0.9830123)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,34,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Array mutators (2/2)
These methods modify the array
array.reverse : reverse the order
array.splice : add/remove elements insidevar fruits = [ ""Banana"" , ""Orange"" , ""Lemon""];
fruits.reverse();// fruits contains [""Lem on"", ""Orange"", ""Banana""]
var firstArray = [ 1,2,3,4,5 ];
varsecondArray = firstArray.splice(1,3,7,8)
// firstArray contains [1,7,8,5] // (from pos=1 removed 3 items and inserted 7,8)// secondArray contains [2,3,4] // (all the removed items)", web dev copyright © g lozzo v donato m patrignanijs array mutators these methods modify the array arrayreverse reverse the order arraysplice addremove elements insidevar fruits banana orange lemon fruitsreverse fruits contains lem on orange banana var firstarray varsecondarray firstarraysplice firstarray contains from pos removed items and inserted secondarray contains all the removed items,[4],"[(4, 0.98084235)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,35,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Arrays accessors
These methods do not modify the array
array.concat : join the array with other arrays
array.join : join elements into a string
array.slice : returns a shallow copy of a portion of an 
array into a new arrayvar fruits = [ ""Banana"" , ""Orange"" , ""Lemon""];
fruits.join(); // returns ""Banana, Orange, Lemon""
[1,2,3,4,5].slice(1,3); 
// yields [2,3], first included, third excluded", web dev copyright © g lozzo v donato m patrignanijs arrays accessors these methods do not modify the array arrayconcat join the array with other arrays arrayjoin join elements into string arrayslice returns shallow copy of portion of an array into new arrayvar fruits banana orange lemon fruitsjoin returns banana orange lemon slice yields first included third excluded,"[4, 8]","[(4, 0.42744562), (8, 0.55684763)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,36,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Arrays accessors
These methods do not modify the array
array.map: creates a new array from calling a function 
for every array element 
array.indexOf : find first occurrence
array.lastIndexOf : find last occurrencevar numbers = [ 9, 4, 16, 25];
varnewArray = numbers.map(Math.sqrt); // [3, 2, 4, 5]", web dev copyright © g lozzo v donato m patrignanijs arrays accessors these methods do not modify the array arraymap creates new array from calling function for every array element arrayindexof find first occurrence arraylastindexof find last occurrencevar numbers varnewarray numbersmapmathsqrt ,"[4, 6]","[(4, 0.2344468), (6, 0.741299)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,37,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Functions
Functions are re-usable collections of statements
First declare the function
Alternative declaration
“arrow functions” were introduced in ECMAScript 6
Then call itfunction sayMyName(name) { 
console.log(name); 
}
sayMyName( ""Valentino"" );sayMyName = (name) => { 
console.log(name); 
}", web dev copyright © g lozzo v donato m patrignanijs functions functions are re usable collections of statements first declare the function alternative declaration “arrow functions” were introduced ecmascript then call itfunction saymynamename consolelogname saymyname valentino saymyname name consolelogname ,[2],"[(2, 0.9699889)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,38,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Function parameters
Functions can accept any number of named parameters
Of course you can also pass variables and generic 
expressionsfunction addNumbers(num1, num2) { 
var result = num1 + num2;
console.log(result);
} addNumbers( 7, 20); // 22
addNumbers( ""Hello"", "" Everybody"" ); // Hello Everybody
var number = 5;
addNumbers(number, 12+ 3)", web dev copyright © g lozzo v donato m patrignanijs function parameters functions can accept any number of named parameters of course you can also pass variables and generic expressionsfunction addnumbersnum num var result num num consolelogresult addnumbers addnumbers hello everybody hello everybody var number addnumbersnumber ,[7],"[(7, 0.97630626)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,39,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Function parameters
Function parameters are passed by value
changes to the parameters are not visible outside 
the function
Objects are passed by reference
actually , in JS object references are values
thus, objects will behave like they are passed by 
reference
• changes to object properties are visible (reflected) outside 
the function", web dev copyright © g lozzo v donato m patrignanijs function parameters function parameters are passed by value changes to the parameters are not visible outside the function objects are passed by reference actually js object references are values thus objects will behave like they are passed by reference • changes to object properties are visible reflected outside the function,"[1, 4]","[(1, 0.36419022), (4, 0.6201167)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,40,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Return values
The return keyword returns a value to whoever calls the 
function (and then exits)
You can call functions in expressions or inside function 
calls:function addNumbers(num1, num2) { 
varresult =num1 +num2; 
returnresult; 
// Anything after this line won't be executed
}; 
varsum =addNumbers( 3, 7) + addNumbers( 1, 2);
varsum2 =addNumbers(addNumbers( 3, 2), addNumbers( 3, 7));", web dev copyright © g lozzo v donato m patrignanijs return values the return keyword returns value to whoever calls the function and then exits you can call functions expressions or inside function callsfunction addnumbersnum num varresult num num returnresult anything after this line wont be executed varsum addnumbers addnumbers varsum addnumbersaddnumbers addnumbers ,"[2, 4, 7]","[(2, 0.40706086), (4, 0.43488866), (7, 0.14313756)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,41,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniWhere to place your code (1/2)
Between the HTML tags <script> and </script>
<!DOCTYPE html>
<html><head><script>
function myFunction () { 
document.getElementById( ""demo"").innerHTML =“Paragraph changed."" ; 
} </script></head><body>
<h1>My Web Page </h1>
<pid=""demo"">A paragraph </p>
<button type=""button"" onclick= ""myFunction() "">Try it</button>
</body></html><script>function myFunction () { 
document.getElementById( ""demo"").innerHTML =“Paragraph changed."" ; 
} </script>", web dev copyright © g lozzo v donato m patrignaniwhere to place your code between the html tags script and script doctype html htmlheadscript function myfunction documentgetelementbyid demoinnerhtml “paragraph changed scriptheadbody hmy web page h piddemoa paragraph p button typebutton onclick myfunction try itbutton bodyhtmlscriptfunction myfunction documentgetelementbyid demoinnerhtml “paragraph changed script,[0],"[(0, 0.9774825)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,42,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniWhere to place your code (2/2)
Normally, scripts are placed in external files with .js 
extension
<!DOCTYPE html>
<html><body><script src=""myScript.js"" >
</script>
</body></html>", web dev copyright © g lozzo v donato m patrignaniwhere to place your code normally scripts are placed external files with js extension doctype html htmlbodyscript srcmyscriptjs script bodyhtml,[2],"[(2, 0.96396494)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,43,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack
JS is single-threaded
i.e.: one call stack = one thing at a time
The call stack stores the active functions
The function at the top of the stack is the one that is 
executed
when we step into a function, we push its call on top of the 
stack
when we return from a function (or when it ends), we pop the 
stack", web dev copyright © g lozzo v donato m patrignanijs call stack js is single threaded ie one call stack one thing at time the call stack stores the active functions the function at the top of the stack is the one that is executed when we step into function we push its call on top of the stack when we return from function or when it ends we pop the stack,"[2, 7]","[(2, 0.56016624), (7, 0.42712873)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,44,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack
Stack
main()function multiply (a, b) {
return a * b;
};
function square (n) {
return multiply(n, n);
};
function printSquare (n) {
var squared = square(n);
console.log(squared);
};
printSquare(4);JS is single-threaded
i.e.: one call stack = one thing at a time", web dev copyright © g lozzo v donato m patrignanijs call stack stack mainfunction multiply a b return b function square n return multiplyn n function printsquare n var squared squaren consolelogsquared printsquarejs is single threaded ie one call stack one thing at time,[7],"[(7, 0.97187275)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,45,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack
Stack
main()printSquare(4)function multiply (a, b) {
return a * b;
};
function square (n) {
return multiply(n, n);
};
function printSquare (n) {
var squared = square(n);
console.log(squared);
};
printSquare(4);JS is single-threaded
i.e.: one call stack = one thing at a time", web dev copyright © g lozzo v donato m patrignanijs call stack stack mainprintsquarefunction multiply a b return b function square n return multiplyn n function printsquare n var squared squaren consolelogsquared printsquarejs is single threaded ie one call stack one thing at time,[7],"[(7, 0.97096545)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,46,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack
Stack
main()printSquare(4)square(4)function multiply (a, b) {
return a * b;
};
function square (n) {
return multiply(n, n);
};
function printSquare (n) {
var squared = square(n);
console.log(squared);
};
printSquare(4);JS is single-threaded
i.e.: one call stack = one thing at a time", web dev copyright © g lozzo v donato m patrignanijs call stack stack mainprintsquaresquarefunction multiply a b return b function square n return multiplyn n function printsquare n var squared squaren consolelogsquared printsquarejs is single threaded ie one call stack one thing at time,[7],"[(7, 0.97096545)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,47,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack
Stack
main()printSquare(4)square(4)multiply(4, 4)function multiply (a, b) {
return a * b;
};
function square (n) {
return multiply(n, n);
};
function printSquare (n) {
var squared = square(n);
console.log(squared);
};
printSquare(4);JS is single-threaded
i.e.: one call stack = one thing at a time", web dev copyright © g lozzo v donato m patrignanijs call stack stack mainprintsquaresquaremultiply function multiply a b return b function square n return multiplyn n function printsquare n var squared squaren consolelogsquared printsquarejs is single threaded ie one call stack one thing at time,[7],"[(7, 0.97187275)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,48,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack
Stack
main()printSquare(4)square(4)function multiply (a, b) {
return a * b;
};
function square (n) {
return multiply(n, n);
};
function printSquare (n) {
var squared = square(n);
console.log(squared);
};
printSquare(4);JS is single-threaded
i.e.: one call stack = one thing at a time", web dev copyright © g lozzo v donato m patrignanijs call stack stack mainprintsquaresquarefunction multiply a b return b function square n return multiplyn n function printsquare n var squared squaren consolelogsquared printsquarejs is single threaded ie one call stack one thing at time,[7],"[(7, 0.97096545)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,49,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack
Stack
main()printSquare(4)function multiply (a, b) {
return a * b;
};
function square (n) {
return multiply(n, n);
};
function printSquare (n) {
var squared = square(n);
console.log(squared);
};
printSquare(4);JS is single-threaded
i.e.: one call stack = one thing at a time", web dev copyright © g lozzo v donato m patrignanijs call stack stack mainprintsquarefunction multiply a b return b function square n return multiplyn n function printsquare n var squared squaren consolelogsquared printsquarejs is single threaded ie one call stack one thing at time,[7],"[(7, 0.97096545)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,50,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack
Stack
main()printSquare(4)console.log(16)function multiply (a, b) {
return a * b;
};
function square (n) {
return multiply(n, n);
};
function printSquare (n) {
var squared = square(n);
console.log(squared);
};
printSquare(4);JS is single-threaded
i.e.: one call stack = one thing at a time", web dev copyright © g lozzo v donato m patrignanijs call stack stack mainprintsquareconsolelogfunction multiply a b return b function square n return multiplyn n function printsquare n var squared squaren consolelogsquared printsquarejs is single threaded ie one call stack one thing at time,[7],"[(7, 0.97096545)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,51,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack
Stack
main()printSquare(4)function multiply (a, b) {
return a * b;
};
function square (n) {
return multiply(n, n);
};
function printSquare (n) {
var squared = square(n);
console.log(squared);
};
printSquare(4);JS is single-threaded
i.e.: one call stack = one thing at a time", web dev copyright © g lozzo v donato m patrignanijs call stack stack mainprintsquarefunction multiply a b return b function square n return multiplyn n function printsquare n var squared squaren consolelogsquared printsquarejs is single threaded ie one call stack one thing at time,[7],"[(7, 0.97096545)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,52,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack
Stack
main()function multiply (a, b) {
return a * b;
};
function square (n) {
return multiply(n, n);
};
function printSquare (n) {
var squared = square(n);
console.log(squared);
};
printSquare(4);JS is single-threaded
i.e.: one call stack = one thing at a time", web dev copyright © g lozzo v donato m patrignanijs call stack stack mainfunction multiply a b return b function square n return multiplyn n function printsquare n var squared squaren consolelogsquared printsquarejs is single threaded ie one call stack one thing at time,[7],"[(7, 0.97187275)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,53,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack
JS is single-threaded
i.e.: one call stack = one thing at a time
function multiply (a, b) {
return a * b;
};
function square (n) {
return multiply(n, n);
};
function printSquare (n) {
var squared = square(n);
console.log(squared);
};
printSquare(4);Stack", web dev copyright © g lozzo v donato m patrignanijs call stack js is single threaded ie one call stack one thing at time function multiply a b return b function square n return multiplyn n function printsquare n var squared squaren consolelogsquared printsquarestack,[7],"[(7, 0.97096545)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,54,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Asynchronous callbacks
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);Stack
main()JavaScript is asynchronous
events can happen outside of the main flow of your program", web dev copyright © g lozzo v donato m patrignanijs asynchronous callbacks consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’stack mainjavascript is asynchronous events can happen outside of the main flow of your program,[1],"[(1, 0.9653775)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,55,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Asynchronous callbacks
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);
main()console.log(‘hi’);JavaScript is asynchronous
events can happen outside of the main flow of your program
Stack", web dev copyright © g lozzo v donato m patrignanijs asynchronous callbacks consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’ mainconsolelog‘hi’javascript is asynchronous events can happen outside of the main flow of your program stack,[1],"[(1, 0.9666596)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,56,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Asynchronous callbacks
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);
main()JavaScript is asynchronous
events can happen outside of the main flow of your program
Stack", web dev copyright © g lozzo v donato m patrignanijs asynchronous callbacks consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’ mainjavascript is asynchronous events can happen outside of the main flow of your program stack,[1],"[(1, 0.9666596)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,57,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Asynchronous callbacks
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);
main()setTimeout(cb, 5000);JavaScript is asynchronous
events can happen outside of the main flow of your program
Stack", web dev copyright © g lozzo v donato m patrignanijs asynchronous callbacks consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’ mainsettimeoutcb javascript is asynchronous events can happen outside of the main flow of your program stack,[1],"[(1, 0.9666596)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,58,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Asynchronous callbacks
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);
main() setTimeout disappears 
from the stack!JavaScript is asynchronous
events can happen outside of the main flow of your program
Stack", web dev copyright © g lozzo v donato m patrignanijs asynchronous callbacks consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’ main settimeout disappears from the stackjavascript is asynchronous events can happen outside of the main flow of your program stack,[1],"[(1, 0.97186625)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,59,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Asynchronous callbacks
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);
main()console.log(‘VIS’);JavaScript is asynchronous
events can happen outside of the main flow of your program
Stack", web dev copyright © g lozzo v donato m patrignanijs asynchronous callbacks consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’ mainconsolelog‘vis’javascript is asynchronous events can happen outside of the main flow of your program stack,[1],"[(1, 0.9666594)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,60,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Asynchronous callbacks
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);
main()JavaScript is asynchronous
events can happen outside of the main flow of your program
Stack", web dev copyright © g lozzo v donato m patrignanijs asynchronous callbacks consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’ mainjavascript is asynchronous events can happen outside of the main flow of your program stack,[1],"[(1, 0.9666593)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,61,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Asynchronous callbacks
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);JavaScript is asynchronous
events can happen outside of the main flow of your program
Stack", web dev copyright © g lozzo v donato m patrignanijs asynchronous callbacks consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’javascript is asynchronous events can happen outside of the main flow of your program stack,[1],"[(1, 0.9666596)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,62,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Asynchronous callbacks
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);
console.log(‘there’);
…5 seconds later…JavaScript is asynchronous
events can happen outside of the main flow of your program
Stack", web dev copyright © g lozzo v donato m patrignanijs asynchronous callbacks consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’ consolelog‘there’ … seconds later…javascript is asynchronous events can happen outside of the main flow of your program stack,[1],"[(1, 0.96784633)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,63,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniConcurrency and the event loop
One thing at a time, except not really!
the runtime environment (= stack + heap) can only 
do one thing at a time
the reason we can do things concurrently is that the
browser is more than just the runtime environment
• the Web APIs of the browser (or C++ APIs in Node.js) 
allow us to do more things…", web dev copyright © g lozzo v donato m patrignaniconcurrency and the event loop one thing at time except not really the runtime environment stack heap can only do one thing at time the reason we can do things concurrently is that the browser is more than just the runtime environment • the web apis of the browser or c apis nodejs allow us to do more things…,[4],"[(4, 0.98447555)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,64,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);Stack
main()setTimeout(cb,5)Web APIs
Event loop
Task queue", web dev copyright © g lozzo v donato m patrignanijs async calls stack consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’stack mainsettimeoutcbweb apis event loop task queue,[2],"[(2, 0.9549905)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,65,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);Stack
main()timer(cb)
Event loopsetTimeout(cb,5)
Task queue• setTimeout disappears 
from the stack!Web APIs", web dev copyright © g lozzo v donato m patrignanijs async calls stack consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’stack maintimercb event loopsettimeoutcb task queue• settimeout disappears from the stackweb apis,"[2, 5]","[(2, 0.7198702), (5, 0.24677162)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,66,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);Stack
main() • setTimeout disappears 
from the stack!timer(cb)
console.log(‘VIS’)
Event loop
Task queueWeb APIs", web dev copyright © g lozzo v donato m patrignanijs async calls stack consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’stack main • settimeout disappears from the stacktimercb consolelog‘vis’ event loop task queueweb apis,"[2, 5]","[(2, 0.73439497), (5, 0.23482195)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,67,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);Stack
main()timer(cb)
Event loop
Task queueWeb APIs", web dev copyright © g lozzo v donato m patrignanijs async calls stack consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’stack maintimercb event loop task queueweb apis,[2],"[(2, 0.9571316)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,68,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);Stack
timer(cb)
Event loop
Task queueWeb APIs", web dev copyright © g lozzo v donato m patrignanijs async calls stack consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’stack timercb event loop task queueweb apis,[2],"[(2, 0.95713085)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,69,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);Stack
timer(cb)
Event loop
Task queue• 5 seconds later…
• …when the Web APIs 
are done, they push your callbacks onto
the task queueWeb APIs", web dev copyright © g lozzo v donato m patrignanijs async calls stack consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’stack timercb event loop task queue• seconds later… • …when the web apis are done they push your callbacks onto the task queueweb apis,[2],"[(2, 0.9735197)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,70,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);Stack
Event loop
Task queue
cb• 5 seconds later…
• …when the Web APIs 
are done, they push your callbacks onto
the task queueWeb APIs", web dev copyright © g lozzo v donato m patrignanijs async calls stack consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’stack event loop task queue cb• seconds later… • …when the web apis are done they push your callbacks onto the task queueweb apis,[2],"[(2, 0.973521)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,71,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);Stack
Task queue• The event loop’s job is to 
constantly monitor the stackand the task queue
• i ft h e  s t a c ki se m p t y ,  i tt a k e s  
the first thing on the queue, and pushes it on to the stack, 
where it is executedEvent loopWeb APIs
cb", web dev copyright © g lozzo v donato m patrignanijs async calls stack consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’stack task queue• the event loop’s job is to constantly monitor the stackand the task queue • ft h s t ki m p t y tt k s the first thing on the queue and pushes it on to the stack where it is executedevent loopweb apis cb,[2],"[(2, 0.9823307)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,72,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);Stack
Event loop• The event loop’s job is to 
constantly monitor the stackand the task queue
• i ft h e  s t a c ki se m p t y ,  i tt a k e s  
the first thing on the queue, and pushes it on to the stack, 
where it is executed
Task queueWeb APIs
cb", web dev copyright © g lozzo v donato m patrignanijs async calls stack consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’stack event loop• the event loop’s job is to constantly monitor the stackand the task queue • ft h s t ki m p t y tt k s the first thing on the queue and pushes it on to the stack where it is executed task queueweb apis cb,[2],"[(2, 0.98268026)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,73,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);Stack
Event loopcblog(‘there’)
Task queueWeb APIs", web dev copyright © g lozzo v donato m patrignanijs async calls stack consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’stack event loopcblog‘there’ task queueweb apis,[2],"[(2, 0.95262194)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,74,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack
console.log( ‘hi’);
setTimeout( function () {
console.log( ‘there’)
}, 5000);
console.log( ‘VIS’);Stack
Event loop
Task queueWeb APIs", web dev copyright © g lozzo v donato m patrignanijs async calls stack consolelog ‘hi’ settimeout function consolelog ‘there’ consolelog ‘vis’stack event loop task queueweb apis,[2],"[(2, 0.9549907)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,75,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignani
Books
JavaScript: The Good Parts
O'Reilly Media / Yahoo Press
by Douglas Crockford
• affiliation
Professional JavaScript for Web Developers
Wrox 
by Nicholas C. Zakas
• affiliation
", web dev copyright © g lozzo v donato m patrignani books javascript the good parts oreilly media yahoo press by douglas crockford • affiliation professional javascript for web developers wrox by nicholas c zakas • affiliation,[3],"[(3, 0.9624813)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\100-web-dev-10.pdf,76,"100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniBibliography
[Murray 13] Scott Murray, “ Interactive Data 
Visualization for the Web ”. O’Reilly Media, 1sted., 
2013
[Judd 75] Deane B. Judd, “ Color in business, science 
and industry ”. Wiley-Interscience, 3rded., 1975
[TM] http://www.teaching-materials.org/", web dev copyright © g lozzo v donato m patrignanibibliography murray scott murray “ interactive data visualization for the web ” o’reilly media sted judd deane b judd “ color business science and industry ” wiley interscience rded tm httpwwwteaching materialsorg,"[8, 9]","[(8, 0.69290143), (9, 0.27851218)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,0,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniInformation Visualization
G. Da Lozzo, V. Di Donato, M. PatrignaniInfovis on the Web
Graphics
", web graphics copyright © g lozzo v donato m patrignaniinformation visualization g lozzo v donato m patrignaniinfovis on the web graphics,"[2, 6]","[(2, 0.7088952), (6, 0.22954859)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,1,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniCopyright notice
All the pages/slides in this presentation, including but not limited 
to, images, photos, animations, videos, sounds, music, and text (hereby referred to as “materi al”) are protected by copyright
This material, with the exception of some multimedia elements 
licensed by other organizations, is property of the authors and/or organizations appearing in the first slide
This material, or its parts, can be reproduced and used for 
didactical purposes within universities and schools, provided 
that this happens for non-profit purposes
Any other use is prohibited, unless explicitly authorized by the
authors on the basis of an explicit agreement
This copyright notice must always be redistributed together with
the material, or its portions", web graphics copyright © g lozzo v donato m patrignanicopyright notice all the pagesslides this presentation including but not limited to images photos animations videos sounds music and text hereby referred to as “materi al” are protected by copyright this material with the exception of some multimedia elements licensed by other organizations is property of the authors andor organizations appearing the first slide this material or its parts can be reproduced and used for didactical purposes within universities and schools provided that this happens for profit purposes any other use is prohibited unless explicitly authorized by the authors on the basis of an explicit agreement this copyright notice must always be redistributed together with the material or its portions,[4],"[(4, 0.991665)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,2,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniCredits
Parts of this matherial is inspired by 
http://www.teaching-materials.org/
https://developer.mozilla.org/en-
US/docs/Web/SVG/Tutorial", web graphics copyright © g lozzo v donato m patrignanicredits parts of this matherial is inspired by httpwwwteaching materialsorg httpsdevelopermozillaorgen usdocswebsvgtutorial,"[1, 2]","[(1, 0.18288764), (2, 0.755546)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,3,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniRaster Vs Vector graphics
Raster graphics
based on pixels (picture element) arranged in a grid (= 
bitmaps)
• a pixel represents the smallest unit of a video image that has 
specific RGBA values
lower abstraction level
Vector graphics 
based on geometrical primitives such as points, lines, 
curves and polygon(s)
• mathematical expressions
more abstract level", web graphics copyright © g lozzo v donato m patrignaniraster vs vector graphics raster graphics based on pixels picture element arranged grid bitmaps • pixel represents the smallest unit of video image that has specific rgba values lower abstraction level vector graphics based on geometrical primitives such as points lines curves and polygons • mathematical expressions more abstract level,[1],"[(1, 0.98084086)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,4,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniRaster properties
Resolution
number of pixels to represent the image
Color depth
number of bits to color a single pixel
typically 24-bits for RGB
• eight bits for each component
•28= 256 shades per component
•2 5 63~ 16 million colors 
humans distinguish ~ 10 mil colors [Judd ‘75]
often 8 more bits are used for opacity", web graphics copyright © g lozzo v donato m patrignaniraster properties resolution number of pixels to represent the image color depth number of bits to color single pixel typically bits for rgb • eight bits for each component • shades component • million colors humans distinguish mil colors judd ‘ often more bits are used for opacity,[4],"[(4, 0.9785525)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,5,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniVector graphic properties
Vector graphics does not keep track of each 
pixel
it only considers the mathematical information that is 
able to generate the picture
It is based on shapes (ultimately on paths)
paths are defined by starting and ending points, 
together with other control points, curves, and angles along the way 
paths are associated with styles 
• fill color, stroke-width, etc.", web graphics copyright © g lozzo v donato m patrignanivector graphic properties vector graphics does not keep track of each pixel it only considers the mathematical information that is able to generate the picture it is based on shapes ultimately on paths paths are defined by starting and ending points together with other control points curves and angles along the way paths are associated with styles • fill color stroke width etc,[2],"[(2, 0.9854772)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,6,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniRaster vs Vector: pros and cons
Bitmaps
fine-grained control up to single pixels
best for full-color images, 
like photographs
increasing resolution or color depth 
affects their size
do not resize well
Vector graphics
resolution independency
resize with little or no loss
no extremely complex images
time and talent needed to create it[Image from Wikipedia.org]
", web graphics copyright © g lozzo v donato m patrignaniraster vs vector pros and cons bitmaps fine grained control up to single pixels best for full color images like photographs increasing resolution or color depth affects their size do not resize well vector graphics resolution independency resize with little or no loss no extremely complex images time and talent needed to create itimage from wikipediaorg,[9],"[(9, 0.9823455)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,7,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniHTML5 Canvas and SVG
HTML5 Canvas element
“provides scripts with a resolution-dependent bitmap 
canvas, which can be used for rendering graphs, game graphics, or other visual images on the fly”[W3C]
SVG (Scalable Vector Graphics)
“is an XML-based format for describing 2D vector 
graphics” [W3C]", web graphics copyright © g lozzo v donato m patrignanihtml canvas and svg html canvas element “provides scripts with resolution dependent bitmap canvas which can be used for rendering graphs game graphics or other visual images on the fly”wc svg scalable vector graphics “is an xml based format for describing d vector graphics” wc,[0],"[(0, 0.97953063)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,8,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniHigh level summary
Statefull (next slide) Stateless (next slide)HTML5 Canvas SVG
Pixel based Shape based
Single HTML element Multiple graphical elements, which 
become part of the DOM
Modified through script only Modified through script and CSS
Interaction is granular (x,y) Interaction is abstracted(rect, path,…)
Performance is better with smaller surface, a larger number of objects (>10K), or both Performance is better with larger surface, a smaller number of objects (<10K), or both", web graphics copyright © g lozzo v donato m patrignanihigh level summary statefull next slide stateless next slidehtml canvas svg pixel based shape based single html element multiple graphical elements which become part of the dom modified through script only modified through script and css interaction is granular xy interaction is abstractedrect path… performance is better with smaller surface larger number of objects k or both performance is better with larger surface smaller number of objects k or both,"[2, 4, 6]","[(2, 0.08240917), (4, 0.4228934), (6, 0.4850979)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,9,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniStateless and stateful paradigms
Canvas is stateless
drawing primitives change the color of a pixel
• irrespectively of previous drawing instructions
SVG is stateful
drawing primitives change the properties of an 
object
• which has been defined earlier
this implies easier animation and interaction", web graphics copyright © g lozzo v donato m patrignanistateless and stateful paradigms canvas is stateless drawing primitives change the color of pixel • irrespectively of previous drawing instructions svg is stateful drawing primitives change the properties of an object • which has been defined earlier this implies easier animation and interaction,[2],"[(2, 0.9780379)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,10,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignani
A circle in Canvas
<canvas id=""myCanvas"" width=""100""height=""100""></canvas>
<script>
function drawCircle(radius) {
varcanvas =document.getElementById( 'myCanvas' ); 
varcontext =canvas.getContext( '2d'); 
varcenterX =canvas.width /2; 
varcenterY =canvas.height /2; 
context.clearRect(0, 0, canvas.width, canvas.height);
context.beginPath(); context.arc(centerX, centerY, radius, 0, 2* Math.PI); 
context.fillStyle ='red'; 
context.fill(); context.lineWidth =3; 
context.strokeStyle ='blue'; 
context.stroke(); 
}
drawCircle(40);
</script>", web graphics copyright © g lozzo v donato m patrignani circle canvas canvas idmycanvas widthheightcanvas script function drawcircleradius varcanvas documentgetelementbyid mycanvas varcontext canvasgetcontext d varcenterx canvaswidth varcentery canvasheight contextclearrect canvaswidth canvasheight contextbeginpath contextarccenterx centery radius mathpi contextfillstyle red contextfill contextlinewidth contextstrokestyle blue contextstroke drawcircle script,[2],"[(2, 0.97095203)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,11,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniA cycle in SVG
<svgheight=""100""
width=""100“
xmlns=""http://www.w3.org/2000/svg"" >
<circle cx=""50""
cy=""50""
r=""40""
stroke=""blue""
stroke‐width=""3""
fill=""red"">
</circle>
</svg>
", web graphics copyright © g lozzo v donato m patrignania cycle svg svgheight width“ xmlnshttpwwwworgsvg circle cx cy r strokeblue stroke‐width fillred circle svg,[7],"[(7, 0.94704616)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,12,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniA simple animation with Canvas
<script>
vari = 10;
setInterval(
function (){ 
drawCircle(i);
if(i< 40) i++;
}, 25);
</script>
", web graphics copyright © g lozzo v donato m patrignania simple animation with canvas script vari setinterval function drawcirclei ifi i script,"[2, 7]","[(2, 0.5717281), (7, 0.38381132)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,13,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniA simple animation with SVG
<script>
vari = 10;
setInterval(
function (){ 
document.getElementById( ""myCircle"" )
.setAttribute( ""r"", i);
if(i< 40) i++;
}, 25);
</script>
", web graphics copyright © g lozzo v donato m patrignania simple animation with svg script vari setinterval function documentgetelementbyid mycircle setattribute r i ifi i script,[7],"[(7, 0.95261526)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,14,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniSVG: basic example
Objects are rendered in the order in which they are listed
<svg width=""300""
height=""200""
xmlns=""http://www.w3.org/2000/svg"" >
<rectwidth=""100%""height=""100%""fill=""red""/>
<circle cx=""150""cy=""100""r=""80""fill=""green"" />
<textx=""150""
y=""125""
font‐size=""60""
text‐anchor=""middle""
fill=""white""> Text
</text></svg>Text", web graphics copyright © g lozzo v donato m patrignanisvg basic example objects are rendered the order which they are listed svg width height xmlnshttpwwwworgsvg rectwidthheightfillred circle cxcyrfillgreen textx y font‐size text‐anchormiddle fillwhite text textsvgtext,[2],"[(2, 0.9653527)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,15,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniPositions
SVG uses a grid system
The top left corner of the 
document is (0,0)
Positions are measured 
in pixels with
positive x direction 
to the right +x
positive y direction 
to the bottom +y
One pixel in SVG maps to one pixel on the output device
", web graphics copyright © g lozzo v donato m patrignanipositions svg uses grid system the top left corner of the document is positions are measured pixels with positive x direction to the right x positive y direction to the bottom y one pixel svg maps to one pixel on the output device,[2],"[(2, 0.9763009)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,16,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniBasic shapes
<svgwidth=""200""height=""250""version= ""1.1""xmlns=""http://www.w3.org/2000/svg"" >
<rectx=""10""y=""10""width=""30""height=""30""stroke=""black"" fill=""transparent""
stroke‐width=""5""/>
<rectx=""60""y=""10""rx=""10""ry=""10""width=""30""height=""30""stroke=""black""
fill=""transparent"" stroke‐width=""5""/>
<circle cx=""25""cy=""75""r=""20""stroke=""red""fill=""transparent""
stroke‐width=""5""/>
<ellipse cx=""75""cy=""75""rx=""20""ry=""5""stroke=""red""fill=""transparent""
stroke‐width=""5""/>orange
<linex1=""10""x2=""50""y1=""110""y2=""150""stroke=""""fill=""transparent""
stroke‐width=""5""/>
<polyline points=""60 110, 65 120, 70 115, 75 130, 80 125, 85 140, 90 135, 
95 150"" stroke=""orange"" fill=""transparent"" stroke‐width=""5""/>
<polygon points=""50 160 55 180 70 180 60 190 65 205 50 195 35 205 40 190 30 
180 45 180"" stroke=""green"" fill=""transparent"" stroke‐width=""5""/>
<pathd=""M20,230 Q40,205 50,230 T90,230"" fill=""none""stroke=""blue""
stroke‐width=""5""/>
</svg>
SVG Path Commands
[MDNP, https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths]", web graphics copyright © g lozzo v donato m patrignanibasic shapes svgwidthheightversion xmlnshttpwwwworgsvg rectxywidthheightstrokeblack filltransparent stroke‐width rectxyrxrywidthheightstrokeblack filltransparent stroke‐width circle cxcyrstrokeredfilltransparent stroke‐width ellipse cxcyrxrystrokeredfilltransparent stroke‐widthorange linexxyystrokefilltransparent stroke‐width polyline points strokeorange filltransparent stroke‐width polygon points strokegreen filltransparent stroke‐width pathdm q t fillnonestrokeblue stroke‐width svg svg path commands mdnp httpsdevelopermozillaorgen usdocswebsvgtutorialpaths,"[2, 8]","[(2, 0.18906431), (8, 0.78013897)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,17,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniPaths: Line Commands                  
M x y: “move to”
it does not draw anything 
it moves the cursor
L x y: “line to”
it draws a line from the current position to (x, y)
H x or V y: “horizontal to” or “vertical to”
it draws horizontal and vertical lines
Z: “close path”
it draws a line from the current position 
back to the first pointCOORDINATES:
up case Æabsolute
lw case Ærelatives", web graphics copyright © g lozzo v donato m patrignanipaths line commands m x y “move to” it does not draw anything it moves the cursor l x y “line to” it draws line from the current position to x y h x or v y “horizontal to” or “vertical to” it draws horizontal and vertical lines z “close path” it draws line from the current position back to the first pointcoordinates up case æabsolute lw case ærelatives,[4],"[(4, 0.9804149)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,18,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniPaths: quadratic bezier curves (Q)
Qx1 y1, x y
It requires one control point
which determines the slope of the curve at both the start 
point and at the end point
It is simpler than the cubic one
<pathd=""M10 80 Q 95 10, 180 80 ""
stroke=""black""
fill=""transparent"" />
(10,80) (180,80)(95,10)", web graphics copyright © g lozzo v donato m patrignanipaths quadratic bezier curves q qx y x y it requires one control point which determines the slope of the curve at both the start point and at the end point it is simpler than the cubic one pathdm q strokeblack filltransparent ,[9],"[(9, 0.9769144)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,19,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniPaths: cubic bezier curves (C)
Cx1 y1, x2 y2, x y
It requires two 
control points 
which determines the 
slope of the curve at 
both the start point and at the end point
<pathd=""M10 10 C 20 20, 40 20, 50 10 ""
stroke=""black” fill=""transparent"" />
", web graphics copyright © g lozzo v donato m patrignanipaths cubic bezier curves c cx y x y x y it requires two control points which determines the slope of the curve at both the start point and at the end point pathdm strokeblack” filltransparent ,[9],"[(9, 0.9718651)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,20,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniCubic Bezier Curves 
Under the Hood
https://vimeo.com/106757336", web graphics copyright © g lozzo v donato m patrignanicubic bezier curves under the hood httpsvimeocom,[6],"[(6, 0.9307405)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,21,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniPaths: compose curves
Sx2 y2, x y
You can string together several Bezier curves to create 
extended smooth shapes
the control point on one side of a point will be a reflection of
the control point used on the other side to keep the slope constant 
in this case, you can use a shortcut version of the cubic 
Bezier
<pathd=""M10 80 C 40 10, 65 10, 95 80 S 150 150 , 
180 80”stroke=""black"" fill=""transparent"" />
", web graphics copyright © g lozzo v donato m patrignanipaths compose curves sx y x y you can string together several bezier curves to create extended smooth shapes the control point on one side of point will be reflection of the control point used on the other side to keep the slope constant in this case you can use shortcut version of the cubic bezier pathdm s ”strokeblack filltransparent ,"[1, 2, 4, 9]","[(1, 0.36471748), (2, 0.115808405), (4, 0.19298264), (9, 0.31595483)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,22,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniElliptical Arcs (1/9)
Arcs are sections of circles or ellipses
A rx ry,x-axis-rotation ,l-flag , sweep-flag, x y
•r x= x-radius
•r y= y-radius
• x-axis-rotation = clockwise rotation of the ellipse (degrees)
•l - f l a g = 0/1
0 means “use one of the two smaller arcs”
1 means “use one of the two larger arcs”
•s w e e p - f l a g = 0/1 
0 means “counter-clockwise”
1 means “clockwise”
•x  y = coordinates of the final point", web graphics copyright © g lozzo v donato m patrignanielliptical arcs arcs are sections of circles or ellipses a rx ryx axis rotation l flag sweep flag x y •r x x radius •r y y radius • x axis rotation clockwise rotation of the ellipse degrees •l f g means “use one of the two smaller arcs” means “use one of the two larger arcs” •s w p f g means “counter clockwise” means “clockwise” •x y coordinates of the final point,[3],"[(3, 0.9816152)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,23,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniElliptical Arcs (2/9)
Given rx, ry, and x-axis-rotation there are two ellipses that can 
connect the starting and ending points
Along each one of these two ellipses 
there are two possible arcs that you can use
overall, you have four different arcs<pathd=""M80 80 A 50 20 ,45, ..., 90 120”stroke=""black""/>
(80,80)
(90,120)45°", web graphics copyright © g lozzo v donato m patrignanielliptical arcs given rx ry and x axis rotation there are two ellipses that can connect the starting and ending points along each one of these two ellipses there are two possible arcs that you can use overall you have four different arcspathdm ”strokeblack °,"[4, 7]","[(4, 0.28100884), (7, 0.70080185)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,24,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniElliptical Arcs (3/9)
l-flag = 0/1
0 means “use one of the two 
smaller arcs”
1 means “use one of the two 
larger arcs”
sweep-flag = 0/1 
0 means “counter-clockwise”
1 means “clockwise”<pathd=""M80 80 A 45 45, 0,
0, 0,125 125 L 125 80 Z""
fill=""green""/>
(80,80)
(125,125)(125,80) Z
0 = counter
clockwise", web graphics copyright © g lozzo v donato m patrignanielliptical arcs l flag  means “use one of the two smaller arcs”  means “use one of the two larger arcs” sweep flag  means “counter clockwise”  means “clockwise”pathdm z fillgreen z counter clockwise,[3],"[(3, 0.96537673)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,25,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniElliptical Arcs (4/9)
l-flag = 0/1
0 means “use one of the two 
smaller arcs”
1 means “use one of the two 
larger arcs”
sweep-flag = 0/1 
0 means “counter-clockwise”
1 means “clockwise”<pathd=""M80 80 A 45 45, 0,
0, 1,125 125 L 125 80 Z""
fill=""purple"" />
(80,80)
(125,125)(125,80) Z
1 = clockwise", web graphics copyright © g lozzo v donato m patrignanielliptical arcs l flag  means “use one of the two smaller arcs”  means “use one of the two larger arcs” sweep flag  means “counter clockwise”  means “clockwise”pathdm z fillpurple z clockwise,[3],"[(3, 0.9639919)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,26,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniElliptical Arcs (5/9)
l-flag = 0/1
0 means “use one of the two 
smaller arcs”
1 means “use one of the two 
larger arcs”
sweep-flag = 0/1 
0 means “counter-clockwise”
1 means “clockwise”
(80,80)
(125,125)(125,80) Z
0 = counter
clockwise<pathd=""M80 80 A 45 45, 0,
1, 0,125 125 L 125 80 Z""
fill=""red""/>", web graphics copyright © g lozzo v donato m patrignanielliptical arcs l flag  means “use one of the two smaller arcs”  means “use one of the two larger arcs” sweep flag  means “counter clockwise”  means “clockwise” z counter clockwisepathdm z fillred,[3],"[(3, 0.9653767)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,27,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniElliptical Arcs (6/9)
l-flag = 0/1
0 means “use one of the two 
smaller arcs”
1 means “use one of the two 
larger arcs”
sweep-flag = 0/1 
0 means “counter-clockwise”
1 means “clockwise”
(80,80)
(125,125)(125,80) Z
1 = clockwise<pathd=""M80 80 A 45 45, 0,
1, 1,125 125 L 125 80 Z""
fill=""blue""/>", web graphics copyright © g lozzo v donato m patrignanielliptical arcs l flag  means “use one of the two smaller arcs”  means “use one of the two larger arcs” sweep flag  means “counter clockwise”  means “clockwise” z clockwisepathdm z fillblue,[3],"[(3, 0.9639917)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,28,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniElliptical Arcs (7/9)
<pathd=""M80 80 A 45 45, 0, 
0, 0,125 125 L 125 80 Z""
fill=""green""/>
<pathd=""M230 80 A 45 45, 0,
1, 0,275 125 L 275 80 Z""
fill=""red""/>
<pathd=""M80 230 A 45 45, 0,
0, 1,125 275 L 125 230 Z""
fill=""purple"" />
<pathd=""M230 230 A 45 45, 0,
1, 1,275 275 L 275 230 Z""
fill=""blue""/>
", web graphics copyright © g lozzo v donato m patrignanielliptical arcs pathdm z fillgreen pathdm z fillred pathdm z fillpurple pathdm z fillblue,"[2, 3]","[(2, 0.37492067), (3, 0.57172835)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,29,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniElliptical Arcs (8/9)
Example
45 x-axis 
rotation
(10,315)(315,10)
(110,215)(150.71,170.29)(172.55,152.45)(215.9,109.9)<path d= ""M10 315
L 110 215
A36 60,0,0,1,150.71 170.29
L 172.55 152.45
A30 50,‐45,0, 1,215.1 109.9
L 315 10"" stroke=""black"" fill=""green""
stroke‐width=""2""fill‐opacity= ""0.5""/>", web graphics copyright © g lozzo v donato m patrignanielliptical arcs example x axis rotation path d m a a ‐ strokeblack fillgreen stroke‐widthfill‐opacity ,[7],"[(7, 0.92497844)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,30,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniElliptical Arcs (9/9)
Example
45 x-axis 
rotation
(10,315)(315,10)
(110,215)(150.71,170.29)(172.55,152.45)(215.9,109.9)<path d= ""M10 315
L 110 215
A36 60,0,0,0,150.71 170.29
L 172.55 152.45
A30 50,‐45,0, 1,215.1 109.9
L 315 10"" stroke=""black"" fill=""green""
stroke‐width=""2""fill‐opacity= ""0.5""/>", web graphics copyright © g lozzo v donato m patrignanielliptical arcs example x axis rotation path d m a a ‐ strokeblack fillgreen stroke‐widthfill‐opacity ,[7],"[(7, 0.92497766)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,31,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniSVG editors 
https://boxy-svg.com/
", web graphics copyright © g lozzo v donato m patrignanisvg editors httpsboxy svgcom,"[0, 1, 2, 3, 4]","[(0, 0.011115113), (1, 0.011116106), (2, 0.8999592), (3, 0.011115411), (4, 0.011115306)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,32,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniBasic transformations: translations
Translations
it may be necessary to move an element around
you can use the translate() transformation
the example will render a rectangle, translated to the point 
(30,40) instead of (0,0)<rectx=""0""y=""0""width=""10""height=""10""
transform= ""translate (30,40)"" />", web graphics copyright © g lozzo v donato m patrignanibasic transformations translations translations it may be necessary to move an element around you can use the translate transformation the example will render rectangle translated to the point instead of rectxywidthheight transform translate ,[2],"[(2, 0.97351843)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,33,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniBasic transformations: rotations
Rotations
rotating an element is quite a common task
use the rotate() transformation for this
this example shows a square that is rotated by 45 degrees
• the value for rotate() is given in degrees<rectx=""20""y=""20""width=""20""height=""20""
transform= ""rotate(45)""/>", web graphics copyright © g lozzo v donato m patrignanibasic transformations rotations rotations rotating an element is quite common task use the rotate transformation for this this example shows square that is rotated by degrees • the value for rotate is given degreesrectxywidthheight transform rotate,[2],"[(2, 0.9749883)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,34,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniBasic transformations: scalings
Scalings
scale() changes the size of an element
it takes two numbers, evaluated as ratio by which to scale on x 
and y
0.5 shrinks by 50%
if the second number is omitted, it is assumed to be equal to the 
first
<rectx=""20""y=""20""width=""20""height=""20""
transform= ""scale(0.8) ""/><rectx=""20""y=""20""width=""20""height=""20""
transform= ""scale(0.8,0.8) ""/>", web graphics copyright © g lozzo v donato m patrignanibasic transformations scalings scalings scale changes the size of an element it takes two numbers evaluated as ratio by which to scale on x and y  shrinks by if the second number is omitted it is assumed to be equal to the first rectxywidthheight transform scale rectxywidthheight transform scale ,[4],"[(4, 0.9808411)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,35,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniConcatenation of transformations
A yellow rectangle
A rotated rectangle<rect x=""50""
y=""50""
width=""30""
height=""30""
stroke=""blue""
stroke‐width=""3""
fill=""yellow""
/>
<rect x=""50""
y=""50""
width=""30""
height=""30""
stroke=""blue""
stroke‐width=""3""
fill=""yellow""
transform= ""rotate(30)""
/>5050
30
30
30°", web graphics copyright © g lozzo v donato m patrignaniconcatenation of transformations a yellow rectangle a rotated rectanglerect x y width height strokeblue stroke‐width fillyellow rect x y width height strokeblue stroke‐width fillyellow transform rotate °,[2],"[(2, 0.96085614)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,36,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniConcatenation of transformations
<rect x=""50""
y=""50""
width=""30""
height=""30""
stroke=""blue""
stroke‐width=""3""
fill=""yellow""
transform= ""translate(65,65),
rotate(30),
translate( ‐65,‐65)""
/>5050
30
30
5050(-65,-65)
30°transformations are applied in reverse order
5050
(65,65)5050", web graphics copyright © g lozzo v donato m patrignaniconcatenation of transformations rect x y width height strokeblue stroke‐width fillyellow transform translate rotate translate ‐‐ °transformations are applied reverse order ,"[2, 4]","[(2, 0.89615834), (4, 0.065694764)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\110-web-graphics-05.pdf,37,"110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniBibliography and links
[Murray ‘13] Scott Murray, “Interactive Data Visualization for the 
Web”. O’Reilly Media, 1sted., 2013
[Judd ‘75] Deane B. Judd, “Color in business, science and 
industry”. Wiley-Interscience, 3rded., 1975
[W3C] http://www.w3.org/TR/SVG/intro.html
[TM] http://www.teaching-materials.org/
[MDN] https://developer.mozilla.org/en-
US/docs/Web/SVG/Tutorial
[MDNP] https://developer.mozilla.org/en-
US/docs/Web/SVG/Tutorial/Paths", web graphics copyright © g lozzo v donato m patrignanibibliography and links murray ‘ scott murray “interactive data visualization for the web” o’reilly media sted judd ‘ deane b judd “color business science and industry” wiley interscience rded wc httpwwwworgtrsvgintrohtml tm httpwwwteaching materialsorg mdn httpsdevelopermozillaorgen usdocswebsvgtutorial mdnp httpsdevelopermozillaorgen usdocswebsvgtutorialpaths,[8],"[(8, 0.9653663)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,0,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaInformation Visualization
G. Da Lozzo, V. Di Donato, M. Patrignani, C. SquarcellaInfovis on the Web
The D3.js library
", hands on d js copyright © g lozzo v donato m patrignani c squarcellainformation visualization g lozzo v donato m patrignani c squarcellainfovis on the web the djs library,[6],"[(6, 0.949989)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,1,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaCopyright notice
All the pages/slides in this presentation, including but not limited 
to, images, photos, animations, videos, sounds, music, and text (hereby referred to as “materi al”) are protected by copyright
This material, with the exception of some multimedia elements 
licensed by other organizations, is property of the authors and/or organizations appearing in the first slide
This material, or its parts, can be reproduced and used for 
didactical purposes within universities and schools, provided 
that this happens for non-profit purposes
Any other use is prohibited, unless explicitly authorized by the
authors on the basis of an explicit agreement
This copyright notice must always be redistributed together with
the material, or its portions", hands on d js copyright © g lozzo v donato m patrignani c squarcellacopyright notice all the pagesslides this presentation including but not limited to images photos animations videos sounds music and text hereby referred to as “materi al” are protected by copyright this material with the exception of some multimedia elements licensed by other organizations is property of the authors andor organizations appearing the first slide this material or its parts can be reproduced and used for didactical purposes within universities and schools provided that this happens for profit purposes any other use is prohibited unless explicitly authorized by the authors on the basis of an explicit agreement this copyright notice must always be redistributed together with the material or its portions,[4],"[(4, 0.9918164)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,2,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaGraphic Web libraries
Serveral libraries are available for managing 2D and 3D 
graphics on the Web
Some of them use WebGL
a dialect of HTML5 canvas designed to intensively exploit the client 
hardware
2D 3D
SVG Canvas WebGL
D3.js Paper.js Three.js
Raphaël.js Kinetic.js Copperlicht
SVG.js Fabric.js O3D
BonsaiJS Easel.js …
… … …", hands on d js copyright © g lozzo v donato m patrignani c squarcellagraphic web libraries serveral libraries are available for managing d and d graphics on the web some of them use webgl a dialect of html canvas designed to intensively exploit the client hardware d d svg canvas webgl djs paperjs threejs raphaëljs kineticjs copperlicht svgjs fabricjs od bonsaijs easeljs … … … …,"[0, 8]","[(0, 0.5549968), (8, 0.42831194)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,3,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js
D3.js (Data-Driven Documents) is a JavaScript library 
for producing dynamic, interactive data visualizations in web browsers
developed by Mike Bostock and others at Stanford
open source
uses SVG, HTML5, and CSS
big community and well documented ☺
• https://github.com/mbostock/d3/wiki/API-Reference
• https://github.com/mbostock/d3/wiki• https://groups.google.com/forum/#!forum/d3-js• http://stackoverflow.com/questions/tagged/d3.js
known to have a quite steep learning curve /", hands on d js copyright © g lozzo v donato m patrignani c squarcelladjs djs data driven documents is javascript library for producing dynamic interactive data visualizations web browsers developed by mike bostock and others at stanford open source uses svg html and css big community and well documented ☺ • httpsgithubcommbostockdwikiapi reference • httpsgithubcommbostockdwiki• httpsgroupsgooglecomforumforumd js• httpstackoverflowcomquestionstaggeddjs known to have quite steep learning curve ,"[2, 9]","[(2, 0.14749351), (9, 0.8351047)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,4,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaWhat is D3.js for? 
[http://d3js.org/]", hands on d js copyright © g lozzo v donato m patrignani c squarcellawhat is djs for httpdjsorg,"[6, 9]","[(6, 0.6465154), (9, 0.29191467)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,5,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js in brief
D3.js can (among other things):
bind data to DOM elements
• when the data change, the elements of the DOM and their 
properties change
• this is why its name is “data driven documents”
handle interaction and animation
• decide what happens when the user interacts with the 
graphics 
• decide the timings of the changes
generate SVG on-the-fly", hands on d js copyright © g lozzo v donato m patrignani c squarcelladjs brief djs can among other things bind data to dom elements • when the data change the elements of the dom and their properties change • this is why its name is “data driven documents” handle interaction and animation • decide what happens when the user interacts with the graphics • decide the timings of the changes generate svg on the fly,[2],"[(2, 0.9852411)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,6,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js history
2009
Protovis, the library that inspired D3.js, is first released
2011
version 2.0 of D3.js is released 
• and Protovis project is abandoned
2012
version 3.0 released
2016
version 4.0 released
2018
version 5.0 released
2020
version 6.0 released", hands on d js copyright © g lozzo v donato m patrignani c squarcelladjs history  protovis the library that inspired djs is first released  version of djs is released • and protovis project is abandoned  version released  version released  version released  version released,[2],"[(2, 0.97095937)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,7,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaSummary
Installation and configuration
Support for arrays
D3 Collections
Objects conversion
Maps, Sets, Nests
Scales
Data Join, data transformations
Example application: Enter, Exit, Update
Layouts", hands on d js copyright © g lozzo v donato m patrignani c squarcellasummary installation and configuration support for arrays d collections objects conversion maps sets nests scales data join data transformations example application enter exit update layouts,"[2, 6]","[(2, 0.71128696), (6, 0.2539162)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,8,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaInstalling: accessing from the Web
Directly link the latest release:
The d3object (together with its properties and its methods) is 
now available to your scripts
Pros
very easy
the latest D3.js release of version 7 is downloaded
• currently 7.8.4 (Apr 2023)
Cons
it does not work when offline
accessing the official d3js.com website may be slower <script src =""http://d3js.org/d3.v7.min.js"" ></script>", hands on d js copyright © g lozzo v donato m patrignani c squarcellainstalling accessing from the web directly link the latest release the dobject together with its properties and its methods is now available to your scripts pros very easy the latest djs release of version is downloaded • currently apr cons it does not work when offline accessing the official djscom website may be slower script src httpdjsorgdvminjs script,"[0, 2, 4]","[(0, 0.32031855), (2, 0.058212705), (4, 0.60872656)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,9,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaInstalling: accessing locally (1/2)
Download the file d3.v7.min.js from 
http://d3js.org
the word “min” in the file name means that this file is “minified”
• it is equivalent to the full version d3.v7.js
• it is lighter (273 KB versus 573 KB)
• it is not human readable
Load the file from your html page
Pros
works even when offline
Cons
you are not sure to get the latest release", hands on d js copyright © g lozzo v donato m patrignani c squarcellainstalling accessing locally download the file dvminjs from httpdjsorg the word “min” the file name means that this file is “minified” • it is equivalent to the full version dvjs • it is lighter kb versus kb • it is not human readable load the file from your html page pros works even when offline cons you are not sure to get the latest release,"[0, 2, 6, 9]","[(0, 0.058944292), (2, 0.041829888), (6, 0.17501172), (9, 0.7142036)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,10,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaInstalling: accessing locally (2/2)
An example
suppose that file d3.v7.min.js is stored in the same 
directory where this html file is
<!DOCTYPE html>
<html><head><title>D3 Test</title>
<script type=""text/javascript"" src=""d3.v7.min.js"" ></script>
</head><body><script type=""text/javascript"" >
// Here we can use the d3 object!!
</script>
</body>
</html>", hands on d js copyright © g lozzo v donato m patrignani c squarcellainstalling accessing locally an example suppose that file dvminjs is stored the same directory where this html file is doctype html htmlheadtitled testtitle script typetextjavascript srcdvminjs script headbodyscript typetextjavascript here we can use the d object script body html,[2],"[(2, 0.9780199)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,11,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaSupported browsers
From version 5 on, D3.js is compatible with all 
modern browsers
Chrome, Edge, Firefox, and Safari
• we need a browser that supports SVG and CSS3 Transitions
Since version 4 D3.js also supports IE 9+
Parts of D3.js may work in older browsers
“everything except IE 8 and older versions”", hands on d js copyright © g lozzo v donato m patrignani c squarcellasupported browsers from version on djs is compatible with modern browsers chrome edge firefox and safari • we need browser that supports svg and css transitions since version djs also supports ie parts of djs may work older browsers “everything except ie and older versions”,[6],"[(6, 0.9799904)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,12,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaOpening an HTML file using D3.js
Note that your browser may enforce st rict security permissions for reading 
files from the local file system
after directly opening an .html file from your file system you will not be 
allowed to load a .js file from the same directory
Workaround for Google Chrome
google-chrome --allow-file-access-from-files mio_file.html
Workaround for Mozilla Firefox
type in the address bar “about:config”
click on the button “I accept the risks!” that warns you against 
dangerous configuration changes
search for “privacy.file_unique_origin” and change the value to “false”", hands on d js copyright © g lozzo v donato m patrignani c squarcellaopening an html file using djs note that your browser may enforce st rict security permissions for reading files from the local file system after directly opening an html file from your file system you will not be allowed to load js file from the same directory workaround for google chrome google chrome allow file access from files miofilehtml workaround for mozilla firefox type the address bar “aboutconfig” click on the button “i accept the risks” that warns you against dangerous configuration changes search for “privacyfileuniqueorigin” and change the value to “false”,[2],"[(2, 0.98952734)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,13,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaOpening an HTML file using D3.js
The best workaround is to configure a local Web server
launching a local Web server in python
•python -m SimpleHTTPServer 8888 
•python3 -m http.server 8888 
launching a local Web server with php
•php -s 127.0.0.1:8888
launching a local Web server with Node.js
• first install: npm install -g http-server
• then run: http-server & 
– the default port is 8080
access “http://localhost:8888” from your browser", hands on d js copyright © g lozzo v donato m patrignani c squarcellaopening an html file using djs the best workaround is to configure local web server launching local web server python •python m simplehttpserver •python m httpserver launching local web server with php •php s launching local web server with nodejs • first install npm install g http server • then run http server – the default port is access “httplocalhost” from your browser,[6],"[(6, 0.983015)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,14,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaSupported platforms
D3.js also runs on Node.js
use “npm install d3 ”to install it
Node.js itself lacks a DOM
likely, there exist multiple DOM implementations for 
NODE (e.g., JSDOM)
you'll need to explicitly pass in a DOM element to your d3 
object
", hands on d js copyright © g lozzo v donato m patrignani c squarcellasupported platforms djs also runs on nodejs use “npm install d ”to install it nodejs itself lacks dom likely there exist multiple dom implementations for node eg jsdom youll need to explicitly pass dom element to your d object,[6],"[(6, 0.97566813)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,15,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js and arrays
Since arrays are the canonical data representation in 
D3.js, the library provides a set of utilities for arrays
from probability 
theory and statistics
d3.mean (array [,accessor ])
d3.median (array [,accessor ])
d3.deviation (array [,accessor ])
d3.variance (array [,accessor ])
…common use
d3.min(array [,accessor ])
d3.max(array [,accessor ])
d3.extent (array [,accessor ])
d3.sum(array [,accessor ])
…
d3.extent ([4,6,7,8,3] )   // [3, 8] d3.variance ([4,6,7,8,3] )    // 4.3", hands on d js copyright © g lozzo v donato m patrignani c squarcelladjs and arrays since arrays are the canonical data representation djs the library provides set of utilities for arrays from probability theory and statistics dmean array accessor dmedian array accessor ddeviation array accessor dvariance array accessor …common use dminarray accessor dmaxarray accessor dextent array accessor dsumarray accessor … dextent dvariance ,[8],"[(8, 0.98363)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,16,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaWhy accessor functions?
Accessor functions are needed when 
the input array does not directly contain numbers, 
but objects with several properties
you need to access the value of some property of 
the objects
Accessor functions are callback functions
they take an object as parameter
they produce a valued3.min(array [,accessor ]) ?", hands on d js copyright © g lozzo v donato m patrignani c squarcellawhy accessor functions accessor functions are needed when the input array does not directly contain numbers but objects with several properties you need to access the value of some property of the objects accessor functions are callback functions they take an object as parameter they produce valuedminarray accessor ,[2],"[(2, 0.9819936)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,17,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaAccessor function example
Suppose you have the following array
You want to find the youngest person
You want to find the tallest personvarpeople =[ 
{ name :""Valentino"" , age :25, height:1.7}, 
{ name :""Giordano"" ,  age :32, height:1.8}]
d3.min(people, function (element){
returnelement[ ""age""]
}) // 25
d3.max(people, function (element){
returnelement[ ""height"" ]
})      // 1.8", hands on d js copyright © g lozzo v donato m patrignani c squarcellaaccessor function example suppose you have the following array you want to find the youngest person you want to find the tallest personvarpeople name valentino age height name giordano age height dminpeople function element returnelement age dmaxpeople function element returnelement height ,[6],"[(6, 0.9799941)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,18,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaWithout accessor functions?
It would be equivalent to call 
array.map(callbackFunction) before computing the minimum/maximum value
array.map() is a built-in JavaScript method that returns an 
array obtained by calling the callbackFunction on each element of the array
myArray = people.map( function (el){return el[ 'age’]})       // [25, 32]
d3.min(myArray)     // 25", hands on d js copyright © g lozzo v donato m patrignani c squarcellawithout accessor functions it would be equivalent to call arraymapcallbackfunction before computing the minimummaximum value arraymap is built javascript method that returns an array obtained by calling the callbackfunction on each element of the array myarray peoplemap function elreturn el age’ dminmyarray ,"[0, 2, 4, 6]","[(0, 0.3974703), (2, 0.13069895), (4, 0.21984003), (6, 0.23834111)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,19,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaOrdering arrays
The default order used by the JavaScript array.sort() mutator 
is lexicographic (that is, alphabetical) and not natural
this can lead to unexpected behaviors when sorting an array of 
numbers
D3.js array functions, instead, compare elements using their
natural order[2,1005,10000 ].sort()
// the array becomes [10000, 1005, 2]
d3.min([ “20”,“3”]);     // outputs “20”
d3.min([ 20,3]);          // outputs 3
d3.min([ 21,“3”,“200”]);  // outputs “200”", hands on d js copyright © g lozzo v donato m patrignani c squarcellaordering arrays the default order used by the javascript arraysort mutator is lexicographic that is alphabetical and not natural this can lead to unexpected behaviors when sorting an array of numbers djs array functions instead compare elements using their natural order sort the array becomes dmin “”“” outputs “” dmin outputs dmin “”“” outputs “”,[6],"[(6, 0.98362863)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,20,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js comparator functions
The method                           returns -1, 1, or 0, 
depending whether ais smaller, greater, or equal 
than b
Analogously you have
Example of use
Example of use in conjunction with JavaScript built-in 
array.sort() mutatord3.ascending(a, b)
d3.descending(a, b)
d3.ascending( 5,2) // outputs 1 
[5,2,3,6,7].sort(d3.ascending )   //[2, 3, 5, 6, 7]
[5,2,3,6,7].sort(d3.descending )  //[7, 6, 5, 3, 2]", hands on d js copyright © g lozzo v donato m patrignani c squarcelladjs comparator functions the method returns or depending whether ais smaller greater or equal than b analogously you have example of use example of use conjunction with javascript built arraysort mutatordascendinga b ddescendinga b dascending outputs sortdascending sortddescending ,[2],"[(2, 0.9763034)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,21,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaArray transformations
D3.js offers some additional helpers for transforming 
arrays and for generating new arrays

• concatenates the input arrays
•e x a m p l e :  

• returns an array of adjacent pairs•e x a m p l e :d3.merge (arrays )
d3.pairs (array )d3.merge([[ 1],[2,3]]); // [1,2,3]
d3.pairs([ 1,2,3,4]);  // [[1,2],[2,3],[3,4]] ", hands on d js copyright © g lozzo v donato m patrignani c squarcellaarray transformations djs offers some additional helpers for transforming arrays and for generating new arrays  • concatenates the input arrays •e x m p  • returns an array of adjacent pairs•e x m p dmerge arrays dpairs array dmerge dpairs ,[8],"[(8, 0.97566766)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,22,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaArray transformations
Other D3.js helpers for arrays

• returns all combinations
•e x a m p l e :

• returns the colums of a matrix provided by rows•e x a m p l e :
further array operators can be found at 
https://github.com/d3/d3-array d3.zip(arrays )
d3.zip([ 1,2],[3,4],[5,6]);     // [[1,3,5],[2,4,6]]d3.cross (arrays )
d3.cross([ 1,2],[“x”,“y”]); //  [[1,”x”],[1,”y”],[2,”x”],[2,”y”]]", hands on d js copyright © g lozzo v donato m patrignani c squarcellaarray transformations other djs helpers for arrays  • returns combinations •e x m p  • returns the colums of matrix provided by rows•e x m p further array operators can be found at httpsgithubcomdd array dziparrays dzip dcross arrays dcross “x”“y” ”x””y””x””y”,[8],"[(8, 0.9742757)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,23,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js collections
Objects
methods that convert associative arrays (objects) to 
standard arrays
Maps and sets
similar to ES6 Maps and Sets, but with string keys and a 
few other differences
Nests
allow the programmer to group data into arbitrary
hierarchies", hands on d js copyright © g lozzo v donato m patrignani c squarcelladjs collections objects methods that convert associative arrays objects to standard arrays maps and sets similar to es maps and sets but with string keys and few other differences nests allow the programmer to group data into arbitrary hierarchies,[2],"[(2, 0.9780356)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,24,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaJavaScript objects
JavaScript objects are associative arrays, i.e., 
collections of (key, value) pairs
The “for...in” statement iterates over the properties of 
an object
properties are processed in arbitrary order
for (letvariable inobject ) {
...}
variable Æad i f f e r e n t property name is assigned to variable on each iteration
objectÆthe object whose properties are iterated", hands on d js copyright © g lozzo v donato m patrignani c squarcellajavascript objects javascript objects are associative arrays ie collections of key value pairs the “forin” statement iterates over the properties of an object properties are processed arbitrary order for letvariable inobject variable æad f f r n t property name is assigned to variable on each iteration objectæthe object whose properties are iterated,"[2, 4]","[(2, 0.8299891), (4, 0.15431139)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,25,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaConverting objects to arrays
D3.js provides several operators for converting 
objects to standard arrays
the order of the output array is undefined
d3.keys (object )• returns an array of the property names 
• returns an array of the property values• returns an array of the property keys and 
values (each entry is an object with a key and value attribute)d3.values (object )
d3.entries (object )
d3.entries({foo :42, bar :true}); 
>[{key: "" foo"", value: 42}, {key: "" bar"", value: true}]", hands on d js copyright © g lozzo v donato m patrignani c squarcellaconverting objects to arrays djs provides several operators for converting objects to standard arrays the order of the output array is undefined dkeys object • returns an array of the property names • returns an array of the property values• returns an array of the property keys and values each entry is an object with key and value attributedvalues object dentries object dentriesfoo bar true key foo value key bar value true,[4],"[(4, 0.9876643)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,26,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaObjects as hash tables?
One could think of using bare JavaScript objects as 
hash tables
they are associative arrays, don’t they?
However, this can lead to unexpected behaviors when 
built-in property names are used as keys
each object inherits from the prototype Object some properties 
and methods, which are already among its keys
inserting keys that are already defined by Object you overwrite 
them
Further, objects keys are JavaScript names
they cannot start with a number", hands on d js copyright © g lozzo v donato m patrignani c squarcellaobjects as hash tables one could think of using bare javascript objects as hash tables they are associative arrays don’t they however this can lead to unexpected behaviors when built property names are used as keys each object inherits from the prototype object some properties and methods which are already among its keys inserting keys that are already defined by object you overwrite them further objects keys are javascript names they cannot start with number,[4],"[(4, 0.98782927)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,27,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaObjects as hash tables?
Example of (erroneous) use of an object as a hash table
Never use objects as hash tables!patrigna@tittolo:~$ node
> var obj = {};undefined
> obj.hasOwnProperty ('hasOwnProperty');
false> obj.hasOwnProperty = ""ciao"";'ciao'> obj{ hasOwnProperty: 'ciao'}
> obj.hasOwnProperty ('hasOwnProperty');
TypeError: obj.hasOwnProp erty is not a function
> ", hands on d js copyright © g lozzo v donato m patrignani c squarcellaobjects as hash tables example of erroneous use of an object as hash table never use objects as hash tablespatrignatittolo node var obj undefined objhasownproperty hasownproperty false objhasownproperty ciaociao obj hasownproperty ciao objhasownproperty hasownproperty typeerror objhasownprop erty is not function ,"[5, 8]","[(5, 0.73390275), (8, 0.2465713)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,28,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js maps
To avoid problems D3.js defines its own hash tables, 
that are called maps
d3.map([object ][,key])
map. has(key)
map. get(key)
map. set(key, value)
map. remove (key)
map. keys ()
map. values ()
map. entries ()
map. each (function)
map. empty ()
map. size()m.set(""hasOwnProperty"" , ""ciao"")
m.get(""hasOwnProperty"" ) // ‘ciao’var m = d3.map()
m.set(""map‐key"", ""map ‐value"") 
m.get(""map‐key"") //map‐value", hands on d js copyright © g lozzo v donato m patrignani c squarcelladjs maps to avoid problems djs defines its own hash tables that are called maps dmapobject key map haskey map getkey map setkey value map remove key map keys map values map entries map each function map empty map sizemsethasownproperty ciao mgethasownproperty ‘ciao’var m dmap msetmap‐key map ‐value mgetmap‐key map‐value,"[4, 8]","[(4, 0.24684964), (8, 0.7368127)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,29,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js sets
D3.js implements sets
the elements of set are exclusively strings!
D3.js sets are actually multisets
the method set.values() can be used to find the unique 
values of the setd3.set([array ])
set.has(value)
set.add(value)
set.remove (value)set.values ()
set.each (function)
set.empty ()
set.size()
d3.set([ ""foo"",""bar"",""foo"",""bar"" ]).values(); 
// produces the array [‘foo’, ‘bar’]", hands on d js copyright © g lozzo v donato m patrignani c squarcelladjs sets djs implements sets the elements of set are exclusively strings djs sets are actually multisets the method setvalues can be used to find the unique values of the setdsetarray sethasvalue setaddvalue setremove valuesetvalues seteach function setempty setsize dset foobarfoobar values produces the array ‘foo’ ‘bar’,[2],"[(2, 0.9816237)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,30,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellad3.set() function
The values of the input array are always coerced to strings
D3.js converts objects and functions to strings using the toString() 
function
numbers already have the built-in JavaScript toString() function
objects don’t have the toString() function
• you will have an error unless you provide it
d3.set([ ""foo"",{toString: () => ""bar""} ]).values(); 
//  [ ""foo"", ""bar"" ]d3.set([ ""foo"",""bar"",32.4]).values()   //  [ ""foo"", ""bar"", ""32.4"" ]", hands on d js copyright © g lozzo v donato m patrignani c squarcelladset function the values of the input array are always coerced to strings djs converts objects and functions to strings using the tostring function numbers already have the built javascript tostring function objects don’t have the tostring function • you will have an error unless you provide it dset footostring bar values foo bar dset foobarvalues foo bar ,"[4, 6]","[(4, 0.40737438), (6, 0.5792852)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,31,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js nests (1/3)
Nesting allows elements in an array to be grouped into a 
hierarchical tree structure
like the GROUP BY operator in SQL, except you can have multiple levels 
of grouping
the levels in the tree are specified by key functions
key() and entries() are methods of the object returned by d3.nest()d3.nest()• creates a new nest operator
• the key() function will be invoked for each element in the 
array and must return a string identifier for each group 
• applies the nest operator to the specified array, returning 
an array of key-values entries.key(key function )
.entries (array )", hands on d js copyright © g lozzo v donato m patrignani c squarcelladjs nests nesting allows elements an array to be grouped into hierarchical tree structure like the group by operator sql except you can have multiple levels of grouping the levels the tree are specified by key functions key and entries are methods of the object returned by dnestdnest• creates new nest operator • the key function will be invoked for each element the array and must return string identifier for each group • applies the nest operator to the specified array returning an array of key values entrieskeykey function entries array ,[4],"[(4, 0.99021393)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,32,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js nests (2/3)
Example data: barley yields, from various sites in Minnesota 
during 1931-2
1-Level Nesting:varyields = [
{yield: 39.93, variety: "" Manchuria "", year: 1931, site: "" Crookston ""},
{yield: 32.00, variety: "" Peatland "", year: 1931, site: "" Duluth""},
{yield: 22.57, variety: "" Manchuria "", year: 1932, site: "" Morris""},
{yield: 25.87, variety: "" Glabron"", year: 1932, site: "" Waseca""},
{yield: 22.23, variety: "" Svansota "", year: 1932, site: "" Morris""}
]
varentries = d3.nest()
.key(function (d) { return d.year; })
.entries(yields);
// [{key: ""1931"", values: Array(2)}, {key: ""1 932"", values: Array(3)}]
entries[0].values[0]
// {yield: 39.93, variety: ""Manchuria"", year: 1931,  site: ""Crookston""}", hands on d js copyright © g lozzo v donato m patrignani c squarcelladjs nests example data barley yields from various sites minnesota during  level nestingvaryields yield variety manchuria year site crookston yield variety peatland year site duluth yield variety manchuria year site morris yield variety glabron year site waseca yield variety svansota year site morris varentries dnest keyfunction d return dyear entriesyields key values array key values array entriesvalues yield variety manchuria year site crookston,[1],"[(1, 0.9867582)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,33,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js nests (3/3)
varentries = d3.nest()
.key(function (d) { returnd.year; })
.key(function (d) { returnd.site; })
.entries(yields);
// [{key: ""1931"", values: Array(2)}, {key: ""1 932"", values: Array(2)}]
entries[1].values
// [{key: ""Morris"", v alues: Array(2)},{key:""W aseca"",values: Array(1)}]varyields = [
{yield: 39.93, variety: "" Manchuria "", year: 1931, site: "" Crookston ""},
{yield: 32.00, variety: "" Peatland "", year: 1931, site: "" Duluth""},
{yield: 22.57, variety: "" Manchuria "", year: 1932, site: "" Morris""},
{yield: 25.87, variety: "" Glabron"", year: 1932, site: "" Waseca""},
{yield: 22.23, variety: "" Svansota "", year: 1932, site: "" Morris""}
]Example data: barley yields, from various sites in Minnesota 
during 1931-2
2-Level Nesting:", hands on d js copyright © g lozzo v donato m patrignani c squarcelladjs nests varentries dnest keyfunction d returndyear keyfunction d returndsite entriesyields key values array key values array entriesvalues key morris v alues arraykeyw asecavalues arrayvaryields yield variety manchuria year site crookston yield variety peatland year site duluth yield variety manchuria year site morris yield variety glabron year site waseca yield variety svansota year site morris example data barley yields from various sites minnesota during  level nesting,"[1, 6]","[(1, 0.7064954), (6, 0.2820674)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,34,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js scales (1/3)
Scales are functions that map an input domain to an 
output range
varscale =d3.scaleLinear (); 
scale.domain([ 100, 500]); // Set the input domain
scale.range([ 10, 350]) // Set the output range
scale(100); // Returns 10
scale(300); // Returns 180
scale(500); // Returns 350100
300500
10 180
350Input domain
Output range", hands on d js copyright © g lozzo v donato m patrignani c squarcelladjs scales scales are functions that map an input domain to an output range varscale dscalelinear scaledomain set the input domain scalerange set the output range scale returns scale returns scale returns input domain output range,[6],"[(6, 0.9790626)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,35,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js scales (2/3)
Scales simplify the code needed to map a dimension 
of the data to a visual representation
Scales are functions
typeof scale returns “function”
domain() and range() are methods of functionsvarscale =d3.scaleLinear (); 
scale.domain([ 100, 500]); // Set the input domain
scale.range([ 10, 350]) // Set the output range", hands on d js copyright © g lozzo v donato m patrignani c squarcelladjs scales scales simplify the code needed to map dimension of the data to visual representation scales are functions typeof scale returns “function” domain and range are methods of functionsvarscale dscalelinear scaledomain set the input domain scalerange set the output range,"[2, 6]","[(2, 0.13726552), (6, 0.8441194)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,36,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js scales (3/3)
Input domain
typically a dimension of the data that you want to visualize 
• e.g., height of students 
Output range 
typically a dimension of the desired output visualization
• e.g., the height of some bars
varheightToBar =d3.scaleLinear (); 
heightToBar.domain([ 0, 1.9]); 
heightToBar.range([ 0, 100]) ", hands on d js copyright © g lozzo v donato m patrignani c squarcelladjs scales input domain typically dimension of the data that you want to visualize • eg height of students output range typically dimension of the desired output visualization • eg the height of some bars varheighttobar dscalelinear heighttobardomain heighttobarrange ,"[6, 8]","[(6, 0.37740937), (8, 0.6020697)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,37,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaMost common types of scale
Continuous scales
Ordinal scales
Time scales", hands on d js copyright © g lozzo v donato m patrignani c squarcellamost common types of scale continuous scales ordinal scales time scales,[6],"[(6, 0.94373727)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,38,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaContinuous scales 
Have a continuous domain (e.g., a set of real 
numbers or dates) and a continuous range
d3.scaleLinear()
• by far the most common type of scale
d3.scaleSqrt()
d3.scalePow()
d3.scaleLog()
…", hands on d js copyright © g lozzo v donato m patrignani c squarcellacontinuous scales have continuous domain eg set of real numbers or dates and continuous range dscalelinear • by far the most common type of scale dscalesqrt dscalepow dscalelog …,"[4, 6]","[(4, 0.34354526), (6, 0.62885237)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,39,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaOrdinal scales 
Have a discrete domain (e.g., a set of names 
or categories) and discrete range
d3.scaleOrdinal()
varscale =d3.scaleOrdinal (); 
scale.domain([ ""A"", ""B"", ""C"", ""D"", ""E"", ""F"" ]);
scale.range([ 0, 1, 2, 3, 4, 5 ]); 
scale( ""C"")// 2", hands on d js copyright © g lozzo v donato m patrignani c squarcellaordinal scales have discrete domain eg set of names or categories and discrete range dscaleordinal varscale dscaleordinal scaledomain a b c d e f scalerange scale c ,"[5, 6]","[(5, 0.3662076), (6, 0.6017682)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,40,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaTime scales
Is an extension of d3.scaleLinear that uses JavaScript Date
objects as the domain representation
domain values are coerced to dates
scale.ticks() returns representative dates from the scale's input 
scale.ticks(n)
• creates an array with n equally-distributed ticks
scale.ticks(d3.timeMinute, 15)
• creates ticks at 15-minute intervalsvarscale = d3.scaleTime ();
scale.domain([new Date("" 10/1/2016 ""), new Date("" 10/30/2016 "")]);
scale.range([0,100]);", hands on d js copyright © g lozzo v donato m patrignani c squarcellatime scales is an extension of dscalelinear that uses javascript date objects as the domain representation domain values are coerced to dates scaleticks returns representative dates from the scales input scaleticksn • creates an array with n equally distributed ticks scaleticksdtimeminute • creates ticks at minute intervalsvarscale dscaletime scaledomainnew date new date scalerange,[6],"[(6, 0.9826823)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,41,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaSelectors
Selections of elements is similar to jQuery
CSS selectors
• see [learn.co]
simple selectors
• identify elements by one facet
compound selectors
• identify elements by two or more facets
foo.bar // <foo class=""bar"">
foo#bar // <foo id=""bar"">#foo // <any id=""foo"">
foo // <foo>
.foo // <any class=""foo"">
[foo =bar] // <any foo=""bar"">
foo bar // <foo><bar></foo>", hands on d js copyright © g lozzo v donato m patrignani c squarcellaselectors selections of elements is similar to jquery css selectors • see learnco simple selectors • identify elements by one facet compound selectors • identify elements by two or more facets foobar foo classbar foobar foo idbarfoo any idfoo foo foo foo any classfoo foo bar any foobar foo bar foobarfoo,[2],"[(2, 0.9823406)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,42,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaSelection method
D3 provides two top-level methods for selecting
elements: 
d3.select( selector_str ) 
d3.selectAll( selector_str )
Selections are wrappers for DOM elements
provide utility functions to edit DOM elements (style, attr, 
remove, append, etc)
vartitles =d3.selectAll( ""h1""); 
titles.style( ""color"", ""red""); ", hands on d js copyright © g lozzo v donato m patrignani c squarcellaselection method d provides two top level methods for selecting elements dselect selectorstr dselectall selectorstr selections are wrappers for dom elements provide utility functions to edit dom elements style attr remove append etc vartitles dselectall h titlesstyle color red,"[2, 7]","[(2, 0.1613596), (7, 0.818631)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,43,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaSelect and append 
Semantic of the append method
applied to a single element, adds the specified child
applied to an array of elements, adds one child to each
//Append two elements h1
body.append( ""h1"").text(""second h1"" ); 
body.append( ""h1"").text(""third h1"" ); 
//Select h1 elementsvarhs=d3.selectAll( ""h1""); 
//Append h2 to each h1 el ement (always the same text)
hs.append( ""h2"").text(""heading 2"" ).style( ""color"", ""green"" );// select the <body> element
varbody =d3.select( ""body""); 
// add an <h1> element with text “Last h1 ”
body.append( ""h1"").text(""Last h1"" );", hands on d js copyright © g lozzo v donato m patrignani c squarcellaselect and append semantic of the append method applied to single element adds the specified child applied to an array of elements adds one child to each append two elements h bodyappend htextsecond h bodyappend htextthird h select h elementsvarhsdselectall h append h to each h el ement always the same text hsappend htextheading style color green select the body element varbody dselect body add an h element with text “last h ” bodyappend htextlast h ,[4],"[(4, 0.9865589)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,44,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaData join
Suppose we want to make a basic bubble chart using
D3.js
we need to create an SVG circle element for each of your
data point
var data = [{""x"": 50,  ""y"": 100, ""z"": 10}, {""x"": 100, ""y"": 150, ""z"": 25}, …]
zi st h e  radius(x,y) is the center", hands on d js copyright © g lozzo v donato m patrignani c squarcelladata join suppose we want to make basic bubble chart using djs we need to create an svg circle element for each of your data point var data x y z x y z … zi st h radiusxy is the center,"[6, 8]","[(6, 0.20832218), (8, 0.7716672)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,45,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaData join example code
This code creates the bubble chart
Observe that we select elements that we know don’t exist in 
order to create new ones<html>
// load d3.js<body>
<svgwidth="" 500"" height="" 400""></svg>
<script >
var dataSet = [
{""x"": 50,  ""y"": 100, ""z"": 10},
{""x"": 100, ""y"": 150, ""z"": 25}, …]
var svg = d3.select("" svg"");
……
svg.selectAll("" circle "")
.data( dataSet ) // this part will 
.enter()    // be clear soon
.append("" circle "")
.attr("" cx"", function(d) { return d. x})
.attr("" cy"", function(d) { return d. y})
.attr("" r"",   function(d) { return d. z})
.attr("" fill"", ..)
.attr("" stroke-width "", ..)
.attr("" stroke "", ..);
</script >
</body></html>", hands on d js copyright © g lozzo v donato m patrignani c squarcelladata join example code this code creates the bubble chart observe that we select elements that we know don’t exist order to create new oneshtml load djsbody svgwidth height svg script var dataset x y z x y z … var svg dselect svg …… svgselectall circle data dataset this part will enter be clear soon append circle attr cx functiond return d x attr cy functiond return d y attr r functiond return d z attr fill attr stroke width attr stroke script bodyhtml,"[2, 7]","[(2, 0.03950029), (7, 0.9498274)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,46,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaThe data driven paradigm
Instead of instructing D3.js to create circles, we tell 
D3.js that the elements of the selection "" circle "" 
should always correspond (i.e., are “joined”) to the 
data contained in the array dataSet
see [Bostock 12]…
svg.selectAll("" circle "")
.data( dataSet ) 
.enter()
…", hands on d js copyright © g lozzo v donato m patrignani c squarcellathe data driven paradigm instead of instructing djs to create circles we tell djs that the elements of the selection circle should always correspond ie are “joined” to the data contained the array dataset see bostock … svgselectall circle data dataset enter …,"[2, 8]","[(2, 0.9127816), (8, 0.06981442)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,47,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaThree kinds of elements
Elements already present in the DOM that are already joined to 
some data 
they are selected by the update() function
Elements that are not yet in the DOM and that are joined to new 
data 
they are selected by the enter() function
Elements of the DOM that do not have a joined datum anymore
they are selected by the exit() function
update exitdataset elements
enter", hands on d js copyright © g lozzo v donato m patrignani c squarcellathree kinds of elements elements already present the dom that are already joined to some data they are selected by the update function elements that are not yet the dom and that are joined to new data they are selected by the enter function elements of the dom that do not have joined datum anymore they are selected by the exit function update exitdataset elements enter,"[2, 4]","[(2, 0.34144136), (4, 0.6467872)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,48,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaThe data() default output
Elements to be updated are the default selection
the actual result of the data() operator
this allows you to automatically select only the elements for 
which there exists corresponding data…
varp = d3.select (""body"" )  
.selectAll (""p"")   
.data([4, 8, 15, 16, 23, 42])     
.text(function (d) { return d; });
…", hands on d js copyright © g lozzo v donato m patrignani c squarcellathe data default output elements to be updated are the default selection the actual result of the data operator this allows you to automatically select only the elements for which there exists corresponding data… varp dselect body selectall p data textfunction d return d …,[2],"[(2, 0.9799906)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,49,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaA first common pattern
Break elements into three sets
elements to be updated
elements to be inserted
elements to be removedvarp = d3.select (""body"" )  // Update…
.selectAll (""p"")   
.data([4, 8, 15, 16, 23, 42])     
.text(function (d) { return d; });
p.enter ().append (""p"") // Enter…
.text(function (d) { return d; });
p.exit().remove (); // Exit…", hands on d js copyright © g lozzo v donato m patrignani c squarcellaa first common pattern break elements into three sets elements to be updated elements to be inserted elements to be removedvarp dselect body update… selectall p data textfunction d return d penter append p enter… textfunction d return d pexitremove exit…,[2],"[(2, 0.9749793)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,50,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaA second common pattern
The sequence of enter() and append() functions add the new 
data to the update clause
The doSomething() function applies to the default update data 
(now enter + update)varp = d3.select (""body"" )  // Enter…
.selectAll (""p"")   
.data([4, 8, 15, 16, 23, 42])
.enter ().append (""p"") 
.text(function (d) { return d; });
p.doSomething (); // Enter + Update
p.exit().remove (); // Exit…", hands on d js copyright © g lozzo v donato m patrignani c squarcellaa second common pattern the sequence of enter and append functions add the new data to the update clause the dosomething function applies to the default update data now enter updatevarp dselect body enter… selectall p data enter append p textfunction d return d pdosomething enter update pexitremove exit…,[2],"[(2, 0.98162514)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,51,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaThe data() function
The data() function joins the specified array of data with the 
current selection
values 
is an array of number or objects
key() 
is an optional function that controls how data is joined to elements
if it is not specified, then the i-th datum in values is assigned to the i-th 
element in the current selection 
otherwise, it returns a string which is used to join a datum with its 
corresponding element
• the one that has the same keyselection. data([values[, key]])", hands on d js copyright © g lozzo v donato m patrignani c squarcellathe data function the data function joins the specified array of data with the current selection values is an array of number or objects key is an optional function that controls how data is joined to elements if it is not specified then the th datum values is assigned to the th element the current selection otherwise it returns string which is used to join datum with its corresponding element • the one that has the same keyselection datavalues key,[4],"[(4, 0.988746)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,52,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaLoading data from CSV
Loads data from a file in CSV (Comma-
Separated Values) format 
Inside the .then callback the “data” parameter 
corresponds to the array of objects loaded from the CSV filed3.csv(""stocks.csv“ )
.then(function( data) {
// executed right after loading
}).catch(function( error ) {
// executed if errors occurr
});", hands on d js copyright © g lozzo v donato m patrignani c squarcellaloading data from csv loads data from file csv comma separated values format inside the then callback the “data” parameter corresponds to the array of objects loaded from the csv filedcsvstockscsv“ thenfunction data executed right after loading catchfunction error executed if errors occurr ,[6],"[(6, 0.98042583)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,53,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaLoading data from JSON
Loads data from a file in JSON (JavaScript 
Object Notation) format 
Inside the .then callback the “data” parameter 
corresponds to the object loaded from the JSON filed3.json(""stocks.json“ )
.then(function( data) {
// executed right after loading
}).catch(function( error ) {
// executed if errors occurr
});", hands on d js copyright © g lozzo v donato m patrignani c squarcellaloading data from json loads data from file json javascript object notation format inside the then callback the “data” parameter corresponds to the object loaded from the json filedjsonstocksjson“ thenfunction data executed right after loading catchfunction error executed if errors occurr ,"[2, 6]","[(2, 0.87330014), (6, 0.10850707)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,54,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaTransitions
A transition is a special type of selection where the operators 
apply smoothly over time rather than instantaneously
selection.transition(): derive a tr ansition from an existing selection
transition.duration([duration]): specifies duration in milliseconds
transition.attr(attribute, value): trans forms the specified attribute into 
the specified valued3.select("" body "").transition().duration( 5000 ).attr("" bgcolor "",""yellow "");", hands on d js copyright © g lozzo v donato m patrignani c squarcellatransitions a transition is special type of selection where the operators apply smoothly over time rather than instantaneously selectiontransition derive tr ansition from an existing selection transitiondurationduration specifies duration milliseconds transitionattrattribute value trans forms the specified attribute into the specified valuedselect body transitionduration attr bgcolor yellow ,[6],"[(6, 0.9812423)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,55,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaInterpolations in transitions
Transitions interpolate values over time
D3.js determines an appropriate interpolator by inferring a 
type for each pair of starting and ending values
colors
geometric transforms
strings with embedded numbers (e.g., ""96px"")
• string interpolators have several applications: 
– interpolating font sizes, stroke-width, etc
– interpolating path data (e.g., ""M 0, 0 L 20, 30"")", hands on d js copyright © g lozzo v donato m patrignani c squarcellainterpolations transitions transitions interpolate values over time djs determines an appropriate interpolator by inferring type for each pair of starting and ending values colors geometric transforms strings with embedded numbers eg px • string interpolators have several applications – interpolating font sizes stroke width etc – interpolating path data eg m ,"[0, 2]","[(0, 0.762541), (2, 0.22111475)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,56,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaExample: Italy aging
""Our aging world"" depicts shifts in population
by age group
for different countries
for both genders
We will visualize shifts
in population
by age group
for a single country
aggregating genders
https://fathom.info/aging/
http://www.dia.uniroma3.it/~infovis/demos/italy_aging_d3.zip", hands on d js copyright © g lozzo v donato m patrignani c squarcellaexample italy aging our aging world depicts shifts population by age group for different countries for both genders we will visualize shifts population by age group for single country aggregating genders httpsfathominfoaging httpwwwdiauniromaitinfovisdemositalyagingdzip,[6],"[(6, 0.96998984)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,57,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaOur data format
[
{
""year"": ""1950"",
""ageGroups"" : [
{ ""ageGroup"" :""0‐4"", ""population"" :4369}, 
{ ""ageGroup"" :""5‐9"", ""population"" :3839}, 
{ ""ageGroup"" :""10‐14"", ""population"" :4170}, 
{...} 
]
},
{
""year"": ""1960"",
""ageGroups"" : [{…}, {…}]
}
]", hands on d js copyright © g lozzo v donato m patrignani c squarcellaour data format year agegroups agegroup ‐ population agegroup ‐ population agegroup ‐ population year agegroups … … ,"[1, 2]","[(1, 0.47167066), (2, 0.49022073)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,58,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaThe code
Use data to create 
multiple elements
// dataset is initialized with 
// our data (for instance from 1950)
varvalues =dataset[ 0][""ageGroups"" ]; 
varbar =d3.selectAll( "".bar"").data(values, function (d){
returnd.ageGroup;}); 
bar.enter()
.append( ""rect"") 
.attr(""class"", ""bar"")
.attr(""x"", function (d) { returnx(d.ageGroup);}) 
.attr(""y"", function (d) { returny(d.population);}) 
...[
{
""year"": ""1950"",
""ageGroups"" : [
{ ""ageGroup"" :""0‐4"", ""population"" :4369}, 
{ ""ageGroup"" :""5‐9"", ""population"" :3839}, 
{ ""ageGroup"" :""10‐14"", ""population"" :4170}, 
{...} 
]
},
{
""year"": ""1960"",
""ageGroups"" : [{…}, {…}]
}
]", hands on d js copyright © g lozzo v donato m patrignani c squarcellathe code use data to create multiple elements dataset is initialized with our data for instance from varvalues dataset agegroups varbar dselectall bardatavalues function d returndagegroup barenter append rect attrclass bar attrx function d returnxdagegroup attry function d returnydpopulation year agegroups agegroup ‐ population agegroup ‐ population agegroup ‐ population year agegroups … … ,[2],"[(2, 0.98234504)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,59,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaThink with joins!
function updateDrawing(data){ // data = dataset[i] for some i
varvalues =data[""ageGroups"" ]; 
// Data join
varbar =svg.selectAll( "".bar"").data(values, function (d){
returnd.ageGroup}); 
// Exit clause: Remove elements
bar.exit().remove(); 
// Enter clause: Add elements
bar.enter().append( ""rect"").attr(""class"", ""bar"")
.attr(""width"", x.bandwidth())
…
// Enter + Update clause: Update y and height
bar.transition().duration(updateTime).attr(""y"", function (d) { returny(d.population); })
.attr(""x"", function (d) { returnx(d.ageGroup); })
.attr(""width"", x.bandwidth())
.attr(""height"" , function (d) { returnheight -y(d.population); });
... }", hands on d js copyright © g lozzo v donato m patrignani c squarcellathink with joins function updatedrawingdata data dataseti for some varvalues dataagegroups data join varbar svgselectall bardatavalues function d returndagegroup exit clause remove elements barexitremove enter clause add elements barenterappend rectattrclass bar attrwidth xbandwidth … enter update clause update y and height bartransitiondurationupdatetimeattry function d returnydpopulation attrx function d returnxdagegroup attrwidth xbandwidth attrheight function d returnheight ydpopulation ,[2],"[(2, 0.9833246)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,60,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaMore examples
Suppose you have the following current datasets
try to update the drawing using updateDrawing(input) in the consolevar input = { ""year"" :""1955"", 
""ageGroups"" :
[ 
{ ""ageGroup"" :""0‐4"", 
""population"" :4034}, 
{ ""ageGroup"" :""5‐9"", 
""population"" :4286}
]
}var input = { ""year"" :""1960"", 
""ageGroups"" :
[ 
{ ""ageGroup"" :""0‐4"", 
""population"" :2503}, 
{ ""ageGroup"" :""5‐9"", 
""population"" :1300}, 
{ ""ageGroup"" :""30‐34"", 
""population"" :2700}
]
}", hands on d js copyright © g lozzo v donato m patrignani c squarcellamore examples suppose you have the following current datasets try to update the drawing using updatedrawinginput the consolevar input year agegroups agegroup ‐ population agegroup ‐ population var input year agegroups agegroup ‐ population agegroup ‐ population agegroup ‐ population ,[4],"[(4, 0.9774909)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,61,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaUse of the y linear scale
Input domain (y axis)
Output range (y axis) 250 00 4619
1993
142.13
Height = 250 – y(1993) = 250 – 142.13 = 107.87 pixelspopulation
pixels", hands on d js copyright © g lozzo v donato m patrignani c squarcellause of the y linear scale input domain y axis output range y axis height – y – pixelspopulation pixels,[6],"[(6, 0.9571323)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,62,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaDomains and ranges
Update periodically the domain of our x and y scales using the 
current values
update accordingly axes and bars’ heights and widths
vary =d3.scaleLinear().range([height, 0]); 
...function updateYScaleDomain(data){ 
varvalues =data[""ageGroups"" ]; 
y.domain([0, d3.max( values, function (d) { 
returnd.population;})
]); 
}", hands on d js copyright © g lozzo v donato m patrignani c squarcelladomains and ranges update periodically the domain of our x and y scales using the current values update accordingly axes and bars’ heights and widths vary dscalelinearrangeheight function updateyscaledomaindata varvalues dataagegroups ydomain dmax values function d returndpopulation ,"[5, 6]","[(5, 0.7328583), (6, 0.24427174)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,63,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaLayouts: Force Directed
observablehq.com/@d3/force-directed-graph
This simple force-directed graph shows 
character co-occurence in Les Misérables", hands on d js copyright © g lozzo v donato m patrignani c squarcellalayouts force directed observablehqcomdforce directed graph this simple force directed graph shows character co occurence les misérables,[7],"[(7, 0.95712906)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,64,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaLayouts: circle packing
Enclosure diagrams use containment to 
represent the hierarchy. 
observablehq.com/@d3/circle-packing
", hands on d js copyright © g lozzo v donato m patrignani c squarcellalayouts circle packing enclosure diagrams use containment to represent the hierarchy observablehqcomdcircle packing,[8],"[(8, 0.9499819)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,65,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaLayouts: Bundle
Danny Holten's heirarchical edge bundling
observablehq.com/@d3/hierarchical-edge-bundling
Dependencies between 
classes in a software class hierarchy
Dependencies are 
bundled according to the parent packages", hands on d js copyright © g lozzo v donato m patrignani c squarcellalayouts bundle danny holtens heirarchical edge bundling observablehqcomdhierarchical edge bundling dependencies between classes software class hierarchy dependencies are bundled according to the parent packages,[2],"[(2, 0.96664953)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,66,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaThe tree layout implements the Reingold-Tilford 
algorithmLayouts: Radial Trees
observablehq.com/@d3/radial-tidy-tree
", hands on d js copyright © g lozzo v donato m patrignani c squarcellathe tree layout implements the reingold tilford algorithmlayouts radial trees observablehqcomdradial tidy tree,[2],"[(2, 0.94997275)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\120-hands-on-d3-js-10.pdf,67,"120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaReferences
https://github.com/mbostock/d3/wiki/API-Reference
https://github.com/mbostock/d3/wiki
https://groups.google.com/forum/#!forum/d3-js
http://stackoverflow.com/questions/tagged/d3.js
[learn.co] https://learn.co/lessons/css-selectors
[Bostock 12] Mike Bostock, “D3 Workshop”, 2012 
https://bost.ocks.org/mike/d3/workshop/#0
[protovis] Mike Bostock, “Protovis: a graphical approach to 
visualization”, https://mbostock.github.io/protovis/
[W3C] “W3C Recommendation”,  
http://www.w3.org/TR/SVG/intro.html
[D3 API] https://github.com/mbostock/d3/wiki/API-Reference", hands on d js copyright © g lozzo v donato m patrignani c squarcellareferences httpsgithubcommbostockdwikiapi reference httpsgithubcommbostockdwiki httpsgroupsgooglecomforumforumd js httpstackoverflowcomquestionstaggeddjs learnco httpslearncolessonscss selectors bostock mike bostock “d workshop” httpsbostocksorgmikedworkshop protovis mike bostock “protovis graphical approach to visualization” httpsmbostockgithubioprotovis wc “wc recommendation” httpwwwworgtrsvgintrohtml d api httpsgithubcommbostockdwikiapi reference,[8],"[(8, 0.9549845)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,0,"130-interaction-08         copyright ©2023 m.patrignaniInformation Visualization
M. PatrignaniInteraction
", interaction copyright © mpatrignaniinformation visualization m patrignaniinteraction,"[0, 1, 2, 3, 4]","[(0, 0.025004447), (1, 0.025007151), (2, 0.025011888), (3, 0.025003027), (4, 0.025005985)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,1,"130-interaction-08         copyright ©2023 m.patrignaniCopyright notice
All the pages/slides in this presentation, including but not limited 
to, images, photos, animations, videos, sounds, music, and text (hereby referred to as “materi al”) are protected by copyright
This material, with the exception of some multimedia elements 
licensed by other organizations, is property of the authors and/or organizations appearing in the first slide
This material, or its parts, can be reproduced and used for 
didactical purposes within universities and schools, provided 
that this happens for non-profit purposes
Any other use is prohibited, unless explicitly authorized by the
authors on the basis of an explicit agreement
This copyright notice must always be redistributed together with
the material, or its portions", interaction copyright © mpatrignanicopyright notice all the pagesslides this presentation including but not limited to images photos animations videos sounds music and text hereby referred to as “materi al” are protected by copyright this material with the exception of some multimedia elements licensed by other organizations is property of the authors andor organizations appearing the first slide this material or its parts can be reproduced and used for didactical purposes within universities and schools provided that this happens for profit purposes any other use is prohibited unless explicitly authorized by the authors on the basis of an explicit agreement this copyright notice must always be redistributed together with the material or its portions,[4],"[(4, 0.99142694)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,2,"130-interaction-08         copyright ©2023 m.patrignaniOverview
Definition of interaction
Classifications of interaction
Examples of interaction", interaction copyright © mpatrignanioverview definition of interaction classifications of interaction examples of interaction,"[0, 1, 2, 3, 4]","[(0, 0.011112895), (1, 0.011113226), (2, 0.89998114), (3, 0.011112409), (4, 0.011114401)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,3,"130-interaction-08         copyright ©2023 m.patrignaniInteraction’s definition
From the Human Computer Interaction research field
Interaction is direct manipulation and instantaneous change 
• [Becker et al. , 87] 
Interaction is the communicati on between user and the system 
• [Dix & Ellis, 98] 
From the Information Visualization research field
Interaction allows for direct manipulat ion of the graphical representation 
of the data
• [Waterson 02]
Interaction provides users with the ability to directly or indirectly 
manipulate and interpret representations
•[ Y i  et al. , 07]
Finding a solid definition of interaction is challenging
•[ Y i  et al. , 07]", interaction copyright © mpatrignaniinteraction’s definition from the human computer interaction research field interaction is direct manipulation and instantaneous change • becker et al interaction is the communicati on between user and the system • dix ellis from the information visualization research field interaction allows for direct manipulat ion of the graphical representation of the data • waterson interaction provides users with the ability to directly or indirectly manipulate and interpret representations • y et al finding solid definition of interaction is challenging • y et al ,"[0, 2, 4, 8]","[(0, 0.48404914), (2, 0.12504075), (4, 0.30191746), (8, 0.08052894)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,4,"130-interaction-08         copyright ©2023 m.patrignaniInteraction & information visualization
Interaction is at the heart of modern information 
visualization
changing one’s view of the data greatly enhances 
comprehension
often no single all-inclusive view is likely to lead to 
insight", interaction copyright © mpatrignaniinteraction information visualization interaction is at the heart of modern information visualization changing one’s view of the data greatly enhances comprehension often no single inclusive view is likely to lead to insight,[4],"[(4, 0.9699827)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,5,"130-interaction-08         copyright ©2023 m.patrignaniInteraction classifications
Based on response time
Based on atomic actions
Based on supporting technologies
Based on functional degree 
Based on immersive experience degree
Based on its paradigm
Based on user intents", interaction copyright © mpatrignaniinteraction classifications based on response time based on atomic actions based on supporting technologies based on functional degree based on immersive experience degree based on its paradigm based on user intents,[5],"[(5, 0.9653665)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,6,"130-interaction-08         copyright ©2023 m.patrignaniClassification – response time
Response times of computer must be tuned to 
human response times
• From [Waterson ‘02] and [Stasko ‘13]
0.1 sec
motion, animation, visual continuity
1 sec
dialogue, conversation break
10 sec
cognitive response, unit task", interaction copyright © mpatrignaniclassification – response time response times of computer must be tuned to human response times • from waterson ‘ and stasko ‘  sec motion animation visual continuity  sec dialogue conversation break  sec cognitive response unit task,[8],"[(8, 0.96998733)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,7,"130-interaction-08         copyright ©2023 m.patrignaniClassification – atomic actions
Press key
Move pointer (hover)
Point and click
Drag and drop
Voice
Gesture
Rotate
tilt, roll
Touch, grab
…", interaction copyright © mpatrignaniclassification – atomic actions press key move pointer hover point and click drag and drop voice gesture rotate tilt roll touch grab …,[9],"[(9, 0.93567455)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,8,"130-interaction-08         copyright ©2023 m.patrignaniClassification – supporting technologies
Different kinds of devices allows different kinds 
of interactions with the user
desktops and laptops
tablets and smartphones
gaming stations
wearable devices
experimental environments
…", interaction copyright © mpatrignaniclassification – supporting technologies different kinds of devices allows different kinds of interactions with the user desktops and laptops tablets and smartphones gaming stations wearable devices experimental environments …,[5],"[(5, 0.9608544)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,9,"130-interaction-08         copyright ©2023 m.patrignaniDesktops and laptops input devices
Keyboards
allows key selection
Pointing devices
allows hovering, point and click, drag and drop
Trackball (Apple)
 Mouse
 Trackpoint (IBM)
 Touchpad
", interaction copyright © mpatrignanidesktops and laptops input devices keyboards allows key selection pointing devices allows hovering point and click drag and drop trackball apple mouse trackpoint ibm touchpad,[5],"[(5, 0.96084666)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,10,"130-interaction-08         copyright ©2023 m.patrignani
Traditional gaming input devices
Console controls
(Xbox)Game controller 
(Nintendo)
Joystick
(Logitech Extreme 3D Pro)
Steering wheel 
(Thrustmaster T300 Ferrari GTE)", interaction copyright © mpatrignani traditional gaming input devices console controls xboxgame controller nintendo joystick logitech extreme d pro steering wheel thrustmaster t ferrari gte,[5],"[(5, 0.9590676)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,11,"130-interaction-08         copyright ©2023 m.patrignani
Eye tracking glasses
(Tobii glass)Wearable input devices
Chording keypads
(twiddler)
One handed keyboards
(Frogpad 2)
Optical head-mounted 
displays (Google 
glass)Gloves
(Keyglove)
Touchpad
CameraMicrophone", interaction copyright © mpatrignani eye tracking glasses tobii glasswearable input devices chording keypads twiddler one handed keyboards frogpad optical head mounted displays google glassgloves keyglove touchpad cameramicrophone,[8],"[(8, 0.9653634)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,12,"130-interaction-08         copyright ©2023 m.patrignaniGesture recognition
Aim: react to the user movements
usally of hands or face 
Timings of gesture regognition
offline gesture recognition
• reacts to a conventional gesture after the movement is performed
online gesture recognition
• reacts while the movement takes place
Gesture recognition devices
wired gloves
stereo cameras 
based on motion and position sensors", interaction copyright © mpatrignanigesture recognition aim react to the user movements usally of hands or face timings of gesture regognition offline gesture recognition • reacts to conventional gesture after the movement is performed online gesture recognition • reacts while the movement takes place gesture recognition devices wired gloves stereo cameras based on motion and position sensors,"[4, 6]","[(4, 0.5186757), (6, 0.4631196)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,13,"130-interaction-08         copyright ©2023 m.patrignaniGesture recognition
… with wired gloves and stereo cameras
Wired gloves 
(Nintendo Powerglove 1989)
Motion capture
(Xbox 360 Kinect)
Wired gloves
(MetaMotions Cyberglove II 2005)", interaction copyright © mpatrignanigesture recognition … with wired gloves and stereo cameras wired gloves nintendo powerglove motion capture xbox kinect wired gloves metamotions cyberglove ii ,[5],"[(5, 0.9608486)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,14,"130-interaction-08         copyright ©2023 m.patrignaniGesture recognition
...based on motion and position sensors
Accelerometers
• single and multi-axis
• measure linear acceleration relative to freefall
Gyroscopes
• measure the angular rate of rotational movement about one or 
more axes
Compasses
• magnetic sensors
Barometers
• pressure sensors
• measure relative and absolute altitude 
Load sensors", interaction copyright © mpatrignanigesture recognition based on motion and position sensors accelerometers • single and multi axis • measure linear acceleration relative to freefall gyroscopes • measure the angular rate of rotational movement about one or more axes compasses • magnetic sensors barometers • pressure sensors • measure relative and absolute altitude load sensors,[2],"[(2, 0.97801995)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,15,"130-interaction-08         copyright ©2023 m.patrignaniGesture recognition
…based on motion and position sensors 
Motion controller 
(Wii remote)
Balance board 
(Wii U BB)
Google Glass Head nudge 
", interaction copyright © mpatrignanigesture recognition …based on motion and position sensors motion controller wii remote balance board wii u bb google glass head nudge,[2],"[(2, 0.9571221)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,16,"130-interaction-08         copyright ©2023 m.patrignaniTablets and smartphones input devices
Common input devices
stylus
• may be used to realize soft keyboards 
touchscreens
• may be used to realize soft keyboards 
Usually available
motion and position sensors
• accelerometers, gyroscopes, compasses, and barometers
voice command capabilities", interaction copyright © mpatrignanitablets and smartphones input devices common input devices stylus • may be used to realize soft keyboards touchscreens • may be used to realize soft keyboards usually available motion and position sensors • accelerometers gyroscopes compasses and barometers voice command capabilities,[2],"[(2, 0.9735126)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,17,"130-interaction-08         copyright ©2023 m.patrignani
Experimental input devices
Brain-computer interfaces
(Emotiv EPOC)Brain-computer interfaces
(Neural Impulse Actuator)
3D pointer
(Novint Falcon)", interaction copyright © mpatrignani experimental input devices brain computer interfaces emotiv epocbrain computer interfaces neural impulse actuator d pointer novint falcon,[5],"[(5, 0.95497817)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,18,"130-interaction-08         copyright ©2023 m.patrignani
Wearable output devices
Bone Conduction 
Transducer (BCT)
conduction of sound to 
the inner ear through the 
bones of the skull
Monocular prism display
(visual overlay) BCT
Optical head-mounted displays
(Google glass)Data Gloves
(Gloveone)Haptic actuatorsActuators for haptic vibrations
simulate touch sensations", interaction copyright © mpatrignani wearable output devices bone conduction transducer bct conduction of sound to the inner ear through the bones of the skull monocular prism display visual overlay bct optical head mounted displays google glassdata gloves gloveonehaptic actuatorsactuators for haptic vibrations simulate touch sensations,[0],"[(0, 0.97801536)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,19,"130-interaction-08         copyright ©2023 m.patrignani
Head-mounted displays
Samsung Gear VR 
for Galaxy S6
Sony HMZ-T3W
Google cardboard
for Android", interaction copyright © mpatrignani head mounted displays samsung gear vr for galaxy s sony hmz tw google cardboard for android,[7],"[(7, 0.95257944)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,20,"130-interaction-08         copyright ©2023 m.patrignaniClassification – functional degree
From [Mazza 09]
1. Static
users are not allowed to perform any type of interaction
only a single, unmodifiable view is generated
2. Manipulable
users are allowed to manipulate the process that generates 
the view, via zooming, rotation, panning,…
3. Transformable
users are allowed to manipulate, in the preprocessing 
phase, the input data of the representations
• for example through data filtering", interaction copyright © mpatrignaniclassification – functional degree from mazza static users are not allowed to perform any type of interaction only single unmodifiable view is generated manipulable users are allowed to manipulate the process that generates the view via zooming rotation panning… transformable users are allowed to manipulate the preprocessing phase the input data of the representations • for example through data filtering,[4],"[(4, 0.98332)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,21,"130-interaction-08         copyright ©2023 m.patrignaniClassification – immersive experience degree
1. Traditional
the interaction is mediated by some “point of 
communication”
2. Augmented reality
computer-generated output is mixed with the 
environment the user is familiar with
3. Virtual reality
the computer reproduces the whole environment for the 
user to live in
immersive multimedia", interaction copyright © mpatrignaniclassification – immersive experience degree traditional the interaction is mediated by some “point of communication” augmented reality computer generated output is mixed with the environment the user is familiar with virtual reality the computer reproduces the whole environment for the user to live immersive multimedia,[4],"[(4, 0.9774904)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,22,"130-interaction-08         copyright ©2023 m.patrignaniClassification –interaction paradigm
Top-down exploration
Shneiderman mantra [Shneiderman 96]
• Overview first, zoom and filter, then details on demand
• Overview first, zoom and filter, then details on demand• Overview first, zoom and filter, then details on demand
Bottom-up exploration
When data are massive, overview may be impossible to 
get, hence
• Search, show context, expand on demand
• Search, show context, expand on demand• Search, show context, expand on demand
– From [van Ham and Perer 09]", interaction copyright © mpatrignaniclassification –interaction paradigm top down exploration shneiderman mantra shneiderman • overview first zoom and filter then details on demand • overview first zoom and filter then details on demand• overview first zoom and filter then details on demand bottom up exploration when data are massive overview may be impossible to get hence • search show context expand on demand • search show context expand on demand• search show context expand on demand – from van ham and perer ,"[2, 9]","[(2, 0.80557334), (9, 0.18265249)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,23,"130-interaction-08         copyright ©2023 m.patrignaniUser-centered classification
Proposed by [Yi et al. , 07]
Survey of 59 papers and 51 systems
311 individual interaction techniques were 
collected and grouped by user intent
what a user wants to achieve through a specific 
interaction technique", interaction copyright © mpatrignaniuser centered classification proposed by yi et al survey of papers and systems  individual interaction techniques were collected and grouped by user intent what user wants to achieve through specific interaction technique,"[1, 4, 9]","[(1, 0.6567094), (4, 0.21250579), (9, 0.10889331)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,24,"130-interaction-08         copyright ©2023 m.patrignaniUser-centered classification
Seven categories of interaction based on user 
intents [Yi et al. , 07] 
1. Select
2. Explore
3. Zoom
4. Reconfigure5. Encode6. Filter
7. Connect", interaction copyright © mpatrignaniuser centered classification seven categories of interaction based on user intents yi et al select explore zoom reconfigure encode filter connect,[8],"[(8, 0.9608461)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,25,"130-interaction-08         copyright ©2023 m.patrignani1. Select
Mark items of interest to keep track
often works as a preceding action to subsequent 
operations
Examples
selecting a placemark in Google Map
the Focus feature in TableLensMark something as interesting!", interaction copyright © mpatrignani select mark items of interest to keep track often works as preceding action to subsequent operations examples selecting placemark google map the focus feature tablelensmark something as interesting,[8],"[(8, 0.96664363)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,26,"130-interaction-08         copyright ©2023 m.patrignaniGeneralized Selection
Selection of a category rather than a specific 
item
select items matching some attribute(s) of the 
pointed out item", interaction copyright © mpatrignanigeneralized selection selection of category rather than specific item select items matching some attributes of the pointed out item,[2],"[(2, 0.9526034)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,27,"130-interaction-08         copyright ©2023 m.patrignaniQuery relaxation
Proposed by [Heer et al. , 08]
Allows the users to generalize their selection 
dynamically
Video at: https://www.youtube.com/watch?v=LVMjfsoMZfg", interaction copyright © mpatrignaniquery relaxation proposed by heer et al allows the users to generalize their selection dynamically video at httpswwwyoutubecomwatchvlvmjfsomzfg,[4],"[(4, 0.94703126)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,28,"130-interaction-08         copyright ©2023 m.patrignani2. Explore
Enables users to examine different subsets of data 
overcoming the limitation of display size
Moves the viewing focus from one position in 
information structure to another
usually the movement is as smooth as possible
Two main types of exploration
panning / scrolling
direct walkingShow me something else!", interaction copyright © mpatrignani explore enables users to examine different subsets of data overcoming the limitation of display size moves the viewing focus from one position information structure to another usually the movement is as smooth as possible two main types of exploration panning scrolling direct walkingshow me something else,"[4, 7]","[(4, 0.4795784), (7, 0.50180084)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,29,"130-interaction-08         copyright ©2023 m.patrignaniExplore by panning
Panning
movement of a camera across a scene, or
scene movement while the camera stays still
Interaction technique
the user presses  keys  
the user slides scrollbars
the user grabs the scene and moves it with a mouse 
the user rolls the mouse wheel
Examples
panning in Google Earth / Google Map
• http://maps.google.com", interaction copyright © mpatrignaniexplore by panning panning movement of camera across scene or scene movement while the camera stays still interaction technique the user presses   keys the user slides scrollbars the user grabs the scene and moves it with mouse the user rolls the mouse wheel examples panning google earth google map • httpmapsgooglecom,[4],"[(4, 0.9780287)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,30,"130-interaction-08         copyright ©2023 m.patrignaniMapping America
Panning example
http://projects.nytimes.com/census/2010/map", interaction copyright © mpatrignanimapping america panning example httpprojectsnytimescomcensusmap,"[0, 1, 2, 3, 4]","[(0, 0.020006211), (1, 0.020007731), (2, 0.8199409), (3, 0.020004932), (4, 0.020006837)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,31,"130-interaction-08         copyright ©2023 m.patrignaniExplore by direct walk
Direct walk
moving in the view by a series of mouse points or 
other direct-manipulation methods
a hyperlink is a direct walk where the change is 
usually not smooth
Examples
moving in Google StreetView
visual Thesaurus
browser navigation", interaction copyright © mpatrignaniexplore by direct walk direct walk moving the view by series of mouse points or other direct manipulation methods a hyperlink is direct walk where the change is usually not smooth examples moving google streetview visual thesaurus browser navigation,[2],"[(2, 0.9735098)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,32,"130-interaction-08         copyright ©2023 m.patrignaniDirect walking in Visual Thesaurus
Walking through terms semantics
https://www.visualthesaurus.com/", interaction copyright © mpatrignanidirect walking visual thesaurus walking through terms semantics httpswwwvisualthesauruscom,"[0, 1, 2, 3, 4]","[(0, 0.011116653), (1, 0.011116274), (2, 0.8999527), (3, 0.011115702), (4, 0.011116533)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,33,"130-interaction-08         copyright ©2023 m.patrignaniLink-Sliding and Bring&Go
Two techniques introduced in [Moscovich et al. , ‘09] 
to navigate large networks
https://www.youtube.com/watch?v=R07e5dSQQeQ
", interaction copyright © mpatrignanilink sliding and bringgo two techniques introduced moscovich et al ‘ to navigate large networks httpswwwyoutubecomwatchvredsqqeq,[9],"[(9, 0.94372344)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,34,"130-interaction-08         copyright ©2023 m.patrignaniBring neighbors lens
The lens “attracts” neighbors 
[Tominski et al. , ‘06]
", interaction copyright © mpatrignanibring neighbors lens the lens “attracts” neighbors tominski et al ‘,"[0, 1, 2, 3, 4]","[(0, 0.011115611), (1, 0.01111607), (2, 0.8999589), (3, 0.01111484), (4, 0.011115906)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,35,"130-interaction-08         copyright ©2023 m.patrignaniScrolling
OrthoZoom scrollbars [Appert 
& Fekete, 06]
1D multi-scale navigation
panning is performed along the 
slider dimension
zooming is perfomed along the 
orthogonal one
www.youtube.com/watch?v=fwz04BNRQQQ
", interaction copyright © mpatrignaniscrolling orthozoom scrollbars appert fekete d multi scale navigation panning is performed along the slider dimension zooming is perfomed along the orthogonal one wwwyoutubecomwatchvfwzbnrqqq,"[1, 4, 8]","[(1, 0.26824), (4, 0.5677689), (8, 0.13061994)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,36,"130-interaction-08         copyright ©2023 m.patrignani3. Zoom
Called “Abstract/Elaborate” in [Yi et al. , 07]
Adjust the level of abstraction (overview and details)
fundamentally without changing the representation
Examples
geometric zooming in Google Earth / Google Maps
pop-up tooltips
selected rows in Table Lens
unfolding sub-categories in an interactive pie chart
details-on-demand in SunburstShow me more or less detail!", interaction copyright © mpatrignani zoom called “abstractelaborate” yi et al adjust the level of abstraction overview and details fundamentally without changing the representation examples geometric zooming google earth google maps pop up tooltips selected rows table lens unfolding sub categories an interactive pie chart details on demand sunburstshow me more or less detail,[1],"[(1, 0.97905725)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,37,"130-interaction-08         copyright ©2023 m.patrignaniZooming examples
Explore these two examples
http://micro.magnet.fsu.edu/primer/java/scienceoptic
su/powersof10/index.html
http://htwins.net/scale2/
What are the limitations of zooming?
zooming relies on your memory!", interaction copyright © mpatrignanizooming examples explore these two examples httpmicromagnetfsueduprimerjavascienceoptic supowersofindexhtml httphtwinsnetscale what are the limitations of zooming zooming relies on your memory,"[4, 8]","[(4, 0.35301834), (8, 0.59695816)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,38,"130-interaction-08         copyright ©2023 m.patrignaniZooming interaction
Explicit input of zooming factor
Area zooming
select a zoom area that will become 
entire view
context switch can be disorienting
example: CAD/CAM
Point zooming
select the zoom+ or zoom- tool and 
click the area you want to magnify
Scrollbar zooming
Mouse controlled zooming
pointer selects the point to zoom
wheel controls zooming factor
", interaction copyright © mpatrignanizooming interaction explicit input of zooming factor area zooming select zoom area that will become entire view context switch can be disorienting example cadcam point zooming select the zoom or zoom tool and click the area you want to magnify scrollbar zooming mouse controlled zooming pointer selects the point to zoom wheel controls zooming factor,"[4, 6]","[(4, 0.11826535), (6, 0.8643329)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,39,"130-interaction-08         copyright ©2023 m.patrignaniArea zoom example
Shelby County, Alabama Land Information Tool 
left-click and drag a box onto any part of the map
release the mouse button
the map zooms in accordingly
retrieved from http://gis.shelbyal.com/ (2014)", interaction copyright © mpatrignaniarea zoom example shelby county alabama land information tool left click and drag box onto any part of the map release the mouse button the map zooms accordingly retrieved from httpgisshelbyalcom ,[2],"[(2, 0.9689443)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,40,"130-interaction-08         copyright ©2023 m.patrignaniA model for zooming and panning
[Furnas & Bederson, ’95] introduced the idea of 
“space-scale diagram”
characterizes operations in zooming and panning
Goals
understand multiscale systems
guide design
authoring tool", interaction copyright © mpatrignania model for zooming and panning furnas bederson ’ introduced the idea of “space scale diagram” characterizes operations zooming and panning goals understand multiscale systems guide design authoring tool,[4],"[(4, 0.96083987)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,41,"130-interaction-08         copyright ©2023 m.patrignaniSpace-scale diagram
Abstraction for describing 
panning and zooming operations
associate the 
2D image with a 3D projection 
xyz
xy", interaction copyright © mpatrignanispace scale diagram abstraction for describing panning and zooming operations associate the d image with d projection xyz xy,[2],"[(2, 0.94703084)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,42,"130-interaction-08         copyright ©2023 m.patrignaniSpace-scale diagram: rays
Points like pand qin the 
original 2D surface become rays pand q
in the space-scale diagram
the circles in 
the example 
picture 
become cones in the diagram
xyz
xy
qpqp", interaction copyright © mpatrignanispace scale diagram rays points like pand qin the original d surface become rays pand q the space scale diagram the circles the example picture become cones the diagram xyz xy qpqp,[2],"[(2, 0.9699865)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,43,"130-interaction-08         copyright ©2023 m.patrignaniSpace-scale diagram: views
A viewing window is 
a 2D rectangle of fixed size placed somewhere in the space-scale diagram
xyz", interaction copyright © mpatrignanispace scale diagram views a viewing window is d rectangle of fixed size placed somewhere the space scale diagram xyz,[7],"[(7, 0.95498055)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,44,"130-interaction-08         copyright ©2023 m.patrignaniSpace-scale diagram: zooming in
Zooming in 
corresponds to moving upward along a ray
the picture 
represents a zoom in along the qray
xz
q", interaction copyright © mpatrignanispace scale diagram zooming zooming corresponds to moving upward along ray the picture represents zoom along the qray xz q,[4],"[(4, 0.9526039)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,45,"130-interaction-08         copyright ©2023 m.patrignaniInterpretations of user interactions
User interactions 
can be interpreted as movements in the space-scale diagram
(a) panning
(b) zooming out     
along ray p
(c) zoomin in along 
ray q xzp q
(a)
(b)
(c)", interaction copyright © mpatrignaniinterpretations of user interactions user interactions can be interpreted as movements the space scale diagram a panning b zooming out along ray p c zoomin along ray q xzp q a b c,[1],"[(1, 0.96398455)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,46,"130-interaction-08         copyright ©2023 m.patrignaniShortest path between two views
The shortest path 
between two views is often not a straight line
each arrow 
represents one unit of cost
It is often “shorter” to 
zoom out (a), make a 
smaller pan (b), and 
zoom back in (c), than to make a large pan directly (d)
this is because zoom 
is logarithmic xzp q
(d)
(b)(c) (a)", interaction copyright © mpatrignanishortest path between two views the shortest path between two views is often not straight line each arrow represents one unit of cost it is often “shorter” to zoom out a make smaller pan b and zoom back c than to make large pan directly d this is because zoom is logarithmic xzp q d bc a,[1],"[(1, 0.9808399)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,47,"130-interaction-08         copyright ©2023 m.patrignaniComputing optimal trajectories
Optimal 
trajectory between the two views
xz
p q(c)
(b) (a)", interaction copyright © mpatrignanicomputing optimal trajectories optimal trajectory between the two views xz p qc b a,[0],"[(0, 0.9249492)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,48,"130-interaction-08         copyright ©2023 m.patrignaniZooming: details-on-demand
The zoom category also comprises more abstract 
types of “zooming” consisting of showing more details
“Details-on-demand” is the term used in infovis when 
providing the user with more information about data 
cases
Examples
ask more info about a data case
move from aggregation view to individual view
• some data may be filtered based on scale or represented by some 
abstraction", interaction copyright © mpatrignanizooming details on demand the zoom category also comprises more abstract types of “zooming” consisting of showing more details “details on demand” is the term used infovis when providing the user with more information about data cases examples ask more info about data case move from aggregation view to individual view • some data may be filtered based on scale or represented by some abstraction,[4],"[(4, 0.9847363)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,49,"130-interaction-08         copyright ©2023 m.patrignaniPop-up tooltips
Hovering mouse cursor brings up details of item
Table Lens [Rao & Card, ‘94]", interaction copyright © mpatrignanipop up tooltips hovering mouse cursor brings up details of item table lens rao card ‘,[2],"[(2, 0.9470334)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,50,"130-interaction-08         copyright ©2023 m.patrignaniExcentric labeling
Label a neighborhood of objects located around the cursor 
[Fekete & Plaisant, ‘99] 
http://www.cs.umd.edu/hcil/excentric/dist/bin/test7.html", interaction copyright © mpatrignaniexcentric labeling label neighborhood of objects located around the cursor fekete plaisant ‘ httpwwwcsumdeduhcilexcentricdistbintesthtml,[8],"[(8, 0.92496455)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,51,"130-interaction-08         copyright ©2023 m.patrignaniDetails-on-demand in SunBurst
A wedge is enlarged when selected 
[Stasko & Zhang 00] 
", interaction copyright © mpatrignanidetails on demand sunburst a wedge is enlarged when selected stasko zhang ,[1],"[(1, 0.92496854)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,52,"130-interaction-08         copyright ©2023 m.patrignani4. Reconfigure
Provide different perspectives by changing the 
spatial arrangement of representation
Examples
changing the attributes in a scatter plot
sorting and rearranging columns in TableLens
adjusting the baseline of a stacked histogramShow me a different arrangement!", interaction copyright © mpatrignani reconfigure provide different perspectives by changing the spatial arrangement of representation examples changing the attributes scatter plot sorting and rearranging columns tablelens adjusting the baseline of stacked histogramshow me different arrangement,[9],"[(9, 0.9699857)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,53,"130-interaction-08         copyright ©2023 m.patrignaniRearranging a scatter plot
Change the attributes that are used in the x and 
y axes
http://www.ncomva.se/guide/?chapter=Visualizations&section=Scatter%20Plot
", interaction copyright © mpatrignanirearranging scatter plot change the attributes that are used the x and y axes httpwwwncomvaseguidechaptervisualizationssectionscatterplot,[4],"[(4, 0.930739)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,54,"130-interaction-08         copyright ©2023 m.patrignaniTable Lens
Rearranging columns
", interaction copyright © mpatrignanitable lens rearranging columns,"[0, 1, 2, 3, 4]","[(0, 0.020010319), (1, 0.02001458), (2, 0.5398791), (3, 0.3000231), (4, 0.02001172)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,55,"130-interaction-08         copyright ©2023 m.patrignaniTable Lens
Sorting in Table Lens
http://www.ncomva.se/guide/?chapter=Visu alizations&section=Table%20Lens
", interaction copyright © mpatrignanitable lens sorting table lens httpwwwncomvaseguidechaptervisu alizationssectiontablelens,"[0, 1, 2, 3, 4]","[(0, 0.016670274), (1, 0.8499588), (2, 0.016674422), (3, 0.016670307), (4, 0.016671253)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,56,"130-interaction-08         copyright ©2023 m.patrignaniStacked Histogram
The baseline adjustment feature
Clicking on a variable the histogram adjust to have that 
variable aligned with the baseline 
http://www.meandeviation.com/dancing-histograms/hist.html
", interaction copyright © mpatrignanistacked histogram the baseline adjustment feature clicking on variable the histogram adjust to have that variable aligned with the baseline httpwwwmeandeviationcomdancing histogramshisthtml,[4],"[(4, 0.9549817)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,57,"130-interaction-08         copyright ©2023 m.patrignani5. Encode
Change visual appearances
Change format
• color, size, orientation, font, shape, …
Change representation type
• switch from one type of representation (e.g., scatter plot) 
to a second one (e.g., bubble chart or parallel coordinates)Show me a different representation!", interaction copyright © mpatrignani encode change visual appearances change format • color size orientation font shape … change representation type • switch from one type of representation eg scatter plot to second one eg bubble chart or parallel coordinatesshow me different representation,"[5, 7]","[(5, 0.8405157), (7, 0.13723926)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,58,"130-interaction-08         copyright ©2023 m.patrignani6. Filter
Change the set of data items being presented based 
on some specific conditions
Examples
sematic zooming
local edge lens
keystoke based filtering in NameVoyager
attribute Explorer
QuerySketch
dynamic queryShow me something conditionally!", interaction copyright © mpatrignani filter change the set of data items being presented based on some specific conditions examples sematic zooming local edge lens keystoke based filtering namevoyager attribute explorer querysketch dynamic queryshow me something conditionally,[4],"[(4, 0.96783346)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,59,"130-interaction-08         copyright ©2023 m.patrignaniSemantic zooming: space-scale diagram
Light purple shows a 
geometric zooming 
all the details are 
preserved through the zooming
Light blue shows a 
semantic zooming
as you zoom out 
details are filtered off
xzp q", interaction copyright © mpatrignanisemantic zooming space scale diagram light purple shows geometric zooming all the details are preserved through the zooming light blue shows semantic zooming as you zoom out details are filtered off xzp q,[8],"[(8, 0.96998537)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,60,"130-interaction-08         copyright ©2023 m.patrignaniLocal Edge Lens
An example of a 
semantic lens
edges that do not have 
and endpoint under the lens disappear 
• [Tominski et al. , ‘06]
This metaphora can 
be generalized
", interaction copyright © mpatrignanilocal edge lens an example of semantic lens edges that do not have and endpoint under the lens disappear • tominski et al ‘ this metaphora can be generalized,"[4, 8]","[(4, 0.040665876), (8, 0.92855006)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,61,"130-interaction-08         copyright ©2023 m.patrignaniFilter based on keystroke
NameVoyager
http://www.babynamewizard.com/voyager
", interaction copyright © mpatrignanifilter based on keystroke namevoyager httpwwwbabynamewizardcomvoyager,"[0, 1, 2, 3, 4]","[(0, 0.016672011), (1, 0.016673442), (2, 0.016676815), (3, 0.0166704), (4, 0.016674632)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,62,"130-interaction-08         copyright ©2023 m.patrignaniFiltering by dynamic queries
Work instantly within a few milliseconds as 
users adjusts sliders or select buttons to form simple queries
[Shneiderman ‘94]
Continuously update the data that is filtered 
from the database and visualized
Probably best-known and one of most useful 
infovis techniques
[Stasko ‘13]", interaction copyright © mpatrignanifiltering by dynamic queries work instantly within few milliseconds as users adjusts sliders or select buttons to form simple queries shneiderman ‘ continuously update the data that is filtered from the database and visualized probably best known and one of most useful infovis techniques stasko ‘,"[4, 5]","[(4, 0.08913221), (5, 0.8913453)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,63,"130-interaction-08         copyright ©2023 m.patrignaniTraditional queries
SQL queries
powerful and flexible
SQL limitations
needs technical skills
rigid syntax
the magnitude of results is unpredictable
only shows exact matches
• no helpful context is shown
refining the query may be slowSelect house-address
From atl-realty-dbWhere price >= 200,000 and
price <= 400,000 andbathrooms >= 3 and
garage == 2 and
bedrooms >= 4Select house-addressFrom atl-realty-dbWhere price >= 200,000 and
price <= 400,000 andbathrooms >= 3 and
garage == 2 and
bedrooms >= 4", interaction copyright © mpatrignanitraditional queries sql queries powerful and flexible sql limitations needs technical skills rigid syntax the magnitude of results is unpredictable only shows exact matches • no helpful context is shown refining the query may be slowselect house address from atl realty dbwhere price and price andbathrooms and garage and bedrooms select house addressfrom atl realty dbwhere price and price andbathrooms and garage and bedrooms ,[2],"[(2, 0.9841997)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,64,"130-interaction-08         copyright ©2023 m.patrignaniDynamic queries
Specifying a query brings immediate display of 
results
Responsive interaction (< .1 sec) with data, 
concurrent presentation of solution
Allows beginners a faster entrance without 
having much practice, and still offers experts some mighty functions ", interaction copyright © mpatrignanidynamic queries specifying query brings immediate display of results responsive interaction sec with data concurrent presentation of solution allows beginners faster entrance without having much practice and still offers experts some mighty functions,[2],"[(2, 0.97186023)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,65,"130-interaction-08         copyright ©2023 m.patrignaniDynamic query ingredients
An interface that allows dynamic queries has 
these properties [Williamson & Shneiderman 92] [Shneiderman 94]
graphical representation of the request
• selection by pointing (not typing)
graphical visualization of the results
• immediate and continuous
• delivers results immediately when parameters are 
changed
allows rapid, incremental and reversible actions", interaction copyright © mpatrignanidynamic query ingredients an interface that allows dynamic queries has these properties williamson shneiderman shneiderman graphical representation of the request • selection by pointing not typing graphical visualization of the results • immediate and continuous • delivers results immediately when parameters are changed allows rapid incremental and reversible actions,[5],"[(5, 0.9795292)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,66,"130-interaction-08         copyright ©2023 m.patrignaniDynamic query limitations
Operations are fundamentally conjunctive
can not formulate arbitrary boolean expressions
• (x < 20) OR ((x > 20) AND (y > 1.80))
Operations are global in scope
all the data set is affected
Controls take space
Real-time interaction becomes increasingly difficult 
with large data sets
sophisticated data structures required", interaction copyright © mpatrignanidynamic query limitations operations are fundamentally conjunctive can not formulate arbitrary boolean expressions • x or x and y operations are global scope all the data set is affected controls take space real time interaction becomes increasingly difficult with large data sets sophisticated data structures required,[2],"[(2, 0.9756653)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,67,"130-interaction-08         copyright ©2023 m.patrignani7. Connect
Highlight associations and relationships
especially in coordinated views or small multiples views
Examples
brushing and linking 
highlighting directly connected nodes in Vizster
• http://vis.stanford.edu/papers/vizster
bring neighbors lensShow me related items!", interaction copyright © mpatrignani connect highlight associations and relationships especially coordinated views or small multiples views examples brushing and linking highlighting directly connected nodes vizster • httpvisstanfordedupapersvizster bring neighbors lensshow me related items,[9],"[(9, 0.963963)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,68,"130-interaction-08         copyright ©2023 m.patrignaniConnect: brushing and linking
Brushing
selecting a subset 
of the data items
Linking
brushed data is 
highlighted in different views of a visualization
From [Voigt ‘02]", interaction copyright © mpatrignaniconnect brushing and linking brushing selecting subset of the data items linking brushed data is highlighted different views of visualization from voigt ‘,"[4, 5]","[(4, 0.28984663), (5, 0.67013526)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,69,"130-interaction-08         copyright ©2023 m.patrignaniConclusions
Interaction is the heart of all effective visualization 
systems
In particular it offers three powerful exploration and 
investigation tools
1. generalized selection
select all items with similar values
2. dynamic queries
immediately assess the effects of changes in filtering parameters
3. brushing and linking
identify the same objects in the different perspectives offered by 
combined views ", interaction copyright © mpatrignaniconclusions interaction is the heart of effective visualization systems in particular it offers three powerful exploration and investigation tools generalized selection select items with similar values dynamic queries immediately assess the effects of changes filtering parameters brushing and linking identify the same objects the different perspectives offered by combined views,"[0, 2, 4]","[(0, 0.50915545), (2, 0.1464573), (4, 0.3294598)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,70,"130-interaction-08         copyright ©2023 m.patrignaniBibliography and further readings
[Appert & Fekete, 06] Caroline Appert and J ean-Daniel Fekete, “OrthoZoom scroller: 1D 
multi-scale navigation” SIGCHI Conference on  Human Factors in Computing Systems, 2006
[Becker et al., 87] R. A. Becker, W. S. Cl eveland, and A. R. Wil ks, ""Dynamic Graphics for 
Data Analysis,"" Statistical Science, vol. 2, 1987
[Dix & Ellis, 98] A. Dix and G. Ellis, ""Starti ng simple: adding value to static visualisation 
through simple interaction,"" AVI 1998
[Fekete & Plaisant, 99] Jean-Daniel Fekete , Catherine Plaisant, “Excentric Labeling: 
Dynamic Neighborhood Labeling for Data Visualization”. CHI 1999
[Furnas & Bederson, 95] George W. Furnas and Benjamin B. Bederson, “Space-Scale 
Diagrams: Understanding Multiscale Interfaces”, SIGCHI 1995
[Heer et al. , 08] Jeffrey Heer, Maneesh Agrawala, Wesl ey Willett, “Generalized Selection via 
Interactive Query Relaxation” CHI 2008
[Mazza 09] Riccardo Mazza, “Introduction to  Information Visualization”, Springer, 2009
[Moscovich et al. , 09] T. Moscovich, F. Chevalier, N.  Henry, E. Pietriga, J.-D. Fekete, 
“Topology-Aware Navigation in  Large Networks”, CHI '09
[Rao & Card, 94] Ramana Rao and Stuart K. Card, “The Table Lens: Merging Graphical and 
Symbolic Representations in an Interactiv e Focus+Context Visualization for Tabular 
Information”, ACM CHI 94", interaction copyright © mpatrignanibibliography and further readings appert fekete caroline appert and j ean daniel fekete “orthozoom scroller d multi scale navigation” sigchi conference on human factors computing systems becker et al r a becker w s cl eveland and a r wil ks dynamic graphics for data analysis statistical science vol dix ellis a dix and g ellis starti ng simple adding value to static visualisation through simple interaction avi fekete plaisant jean daniel fekete catherine plaisant “excentric labeling dynamic neighborhood labeling for data visualization” furnas bederson george w furnas and benjamin b bederson “space scale diagrams understanding multiscale interfaces” sigchi heer et al jeffrey heer maneesh agrawala wesl ey willett “generalized selection via interactive query relaxation” mazza riccardo mazza “introduction to information visualization” springer moscovich et al t moscovich f chevalier n henry e pietriga j d fekete “topology aware navigation large networks” rao card ramana rao and stuart k card “the table lens merging graphical and symbolic representations an interactiv focuscontext visualization for tabular information” acm ,[8],"[(8, 0.99284774)]"
dataExtraction\data_test\rootfolder\universita\visualizzazioneDati\130-interaction-08.pdf,71,"130-interaction-08         copyright ©2023 m.patrignaniBibliography and further readings
[Shneiderman 94] Ben Shneiderman “Dynamic Quer ies for Visual Information Seeking”, in 
IEEE Software, 11, 1994
[Stasko 13] John T. Stasko, CS 7 450, Information Visualization, 2013 
http://www.cc.gatech.edu/~ stasko/7450/syllabus.html
[Stasko & Zhang 00] John Stasko and E ugene Zhang, “Focus+con text display and 
navigation techniques for enhancing radial, spac e-filling hierarchy visualizations”, INFOVIS 
2000
[Tominski et al. , 06] C. Tominski, J. Abello, F. van Ham, H. Schumann, “Fisheye Tree Views 
and Lenses for Graph Visualization” , Information Visualization, 2006
[Voigt 02]: Robert Voigt, “An Extended Scatterp lot Matrix and Case Studies in Information 
Visualization”, Master's thes is, Hochschule Magdeburg-Stendal, 2002
[Waterson 02] Sarah Waterson, “Brushing, Link ing & Interactive Querying”, Material for 
Information Visualization Course, 2002
[Williamson & Shneiderman, 92] C. Will iamson, B. Shneiderman. “The Dynamic 
HomeFinder: Evaluating Dynamic Queries in  a Real-Estate Information Exploration 
System”. Proc. ACM SIGIR, 1992
[Yi et al. , 07] Ji Soo Yi, Youn ah Kang, John T. Stasko, and Julie A. Jacko, “Toward a 
Deeper Understanding of the Role  of Interaction in Informat ion Visualization”, InfoVis 2007", interaction copyright © mpatrignanibibliography and further readings shneiderman ben shneiderman “dynamic quer ies for visual information seeking” ieee software stasko john t stasko cs information visualization httpwwwccgatechedu staskosyllabushtml stasko zhang john stasko and ugene zhang “focuscon text display and navigation techniques for enhancing radial spac filling hierarchy visualizations” infovis tominski et al c tominski j abello f van ham h schumann “fisheye tree views and lenses for graph visualization” information visualization voigt robert voigt “an extended scatterp lot matrix and case studies information visualization” masters thes is hochschule magdeburg stendal waterson sarah waterson “brushing link ing interactive querying” material for information visualization course williamson shneiderman c will iamson b shneiderman “the dynamic homefinder evaluating dynamic queries real estate information exploration system” proc acm sigir yi et al ji soo yi youn ah kang john t stasko and julie a jacko “toward deeper understanding of the role of interaction informat ion visualization” infovis ,[8],"[(8, 0.99236643)]"
dataExtraction\data_test\rootfolder\varie\ricette\15-quantum-un-qubit-heisenberg-02.pdf,0,"10/6/2021
115-quantum -un-qubit -Heisenberg -02
1Next Generation Computing Models
Quantum Computing
Il principio di indeterminazione di Heisenberg 
e un qubit
principio di indeterminazione  di 
Heisenberg
•nella meccanica quantistica il principio stabilisce 
l'impossibilità di determinare con precisione a 
priori illimitata i valori di due variabili 
incompatibili, che specificano lo stato di una 
particella
–es. posizione e velocità
•indaghiamo il principio usando il quantum 
computing
21
2", quantum qubit heisenberg next generation computing models quantum computing principio indeterminazione heisenberg qubit principio indeterminazione heisenberg •nella meccanica quantistica principio stabilisce limpossibilità determinare precisione priori illimitata valori due variabili incompatibili specificano stato particella –es posizione velocità •indaghiamo principio usando quantum computing ,[1],"[(1, 0.9742819)]"
dataExtraction\data_test\rootfolder\varie\ricette\15-quantum-un-qubit-heisenberg-02.pdf,1,"10/6/2021
215-quantum -un-qubit -Heisenberg -02
due basi
•usiamo due basi per descrivere lo stesso qubit
–la base costituita dai vettori |0e|1
–e la base costituita da |ۧ+=ൗ1
2|0+ൗ1
2|1e 
|ۧ−=ൗ1
2|0−ൗ1
2|1
30
1= |1
1
0=|0|+
ൗ𝜋4
|−
|ۧ+e |ۧ−è una base
•in primo luogo |ۧ+=ൗ1
2|0+ൗ1
2|1è 
effettivamente uno stato
–infatti ൗ1
22
+ൗ1
22
=Τ12+Τ12=1
•e anche |ۧ−=ൗ1
2|0−ൗ1
2|1è 
effettivamente uno stato
–infatti ൗ1
22
+−ൗ1
22
=Τ12+Τ12=1
43
4", quantum qubit heisenberg due basi •usiamo due basi descrivere stesso qubit –la base costituita vettori e –e base costituita ۧൗ ൗ e ۧ−ൗ −ൗ    ൗ𝜋 − ۧe ۧ−è base •in primo luogo ۧൗ ൗ è effettivamente stato –infatti ൗ ൗ ττ •e ۧ−ൗ −ൗ è effettivamente stato –infatti ൗ −ൗ ττ ,[8],"[(8, 0.9639932)]"
dataExtraction\data_test\rootfolder\varie\ricette\15-quantum-un-qubit-heisenberg-02.pdf,2,"10/6/2021
315-quantum -un-qubit -Heisenberg -02
|ۧ+e |ۧ−è una base
•inoltre |ۧ+e |ۧ−sono perpendicolari tra loro
•per dimostrarlo basta calcolare il loro prodotto 
scalare +−=ൗ1
2ൗ1
2ൗ1
2
−ൗ1
2e osservare 
che ha valore nullo
5
due misure
•dato un qubit|𝜓, possiamo misurarlo sia usando 
la base |0e|1sia usando la base |ۧ+e |ۧ−
•la prima misura la chiamiamo bit-value e la 
seconda sign -value
6|1
|0|+
ൗ𝜋4
|−|𝜓5
6", quantum qubit heisenberg ۧe ۧ−è base •inoltre ۧe ۧ−sono perpendicolari •per dimostrarlo basta calcolare prodotto scalare −ൗ ൗ ൗ −ൗ e osservare valore nullo due misure •dato qubit𝜓 possiamo misurarlo usando base esia usando base ۧe ۧ− •la prima misura chiamiamo bit value seconda sign value   ൗ𝜋 −𝜓 ,[1],"[(1, 0.96999365)]"
dataExtraction\data_test\rootfolder\varie\ricette\15-quantum-un-qubit-heisenberg-02.pdf,3,"10/6/2021
415-quantum -un-qubit -Heisenberg -02
posizione e velocità
•immaginiamo ora che il bit -value corrisponda 
alla posizione e che il sign-value corrisponda alla 
velocità
7|1
|0|+
ൗ𝜋4
|−|𝜓
posizione e velocità
•è possibile in un certo istante conoscere 
posizione e velocità di un qubit ?
8|1
|0|+
ൗ𝜋4
|−|𝜓7
8", quantum qubit heisenberg posizione velocità •immaginiamo ora bit value corrisponda posizione sign value corrisponda velocità   ൗ𝜋 −𝜓 posizione velocità •è possibile certo istante conoscere posizione velocità qubit   ൗ𝜋 −𝜓 ,[5],"[(5, 0.9549889)]"
dataExtraction\data_test\rootfolder\varie\ricette\15-quantum-un-qubit-heisenberg-02.pdf,4,"10/6/2021
515-quantum -un-qubit -Heisenberg -02
conoscenza perfetta del bit -value
•perchè si possa conoscere perfettamente il bit -
value di |𝜓occorre che esso sia |0oppure |1
9|1
|0|+
ൗ𝜋4
|−|𝜓
conoscenza perfetta del sign-value
•perchè si possa conoscere perfettamente il sign-
value di |𝜓occorre che esso sia |ۧ+oppure |ۧ−
10|1
|0|+
ൗ𝜋4
|−|𝜓9
10", quantum qubit heisenberg conoscenza perfetta bit value •perchè possa conoscere perfettamente bit value 𝜓occorre esso oppure    ൗ𝜋 −𝜓 conoscenza perfetta sign value •perchè possa conoscere perfettamente sign value 𝜓occorre esso ۧoppure ۧ−   ൗ𝜋 −𝜓 ,[3],"[(3, 0.9624944)]"
dataExtraction\data_test\rootfolder\varie\ricette\15-quantum-un-qubit-heisenberg-02.pdf,5,"10/6/2021
615-quantum -un-qubit -Heisenberg -02
conoscenza perfetta di entrambi
•se possiamo conoscere perfettamente il sign-
value di |𝜓, es. perchè esso è molto vicino a |0, 
allora abbiamo molta incertezza sul sign-value
–è |ۧ+con probabilità Τ12e |ۧ−con probabilità Τ12
11|1
|0|+
ൗ𝜋4
|−|𝜓
11", quantum qubit heisenberg conoscenza perfetta entrambi •se possiamo conoscere perfettamente sign value 𝜓 es perchè esso molto vicino  allora molta incertezza sign value –è ۧcon probabilità τe ۧ−con probabilità τ   ൗ𝜋 −𝜓 ,[2],"[(2, 0.95907855)]"
