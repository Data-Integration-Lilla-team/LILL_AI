{
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\00-introduzione-corso-01.pdf#0": "9/29/2021\n100-introduzione -corso -01\n1Next Generation Computing Models\nIntroduzione\n2obiettivi formativi\n•introduzione al modello di calcolo del \nquantum computing con un approccio \ninformatico\n•introduzione ai modelli di calcolo \ncentrati sui dati, di interesse per le \ntecnologie big data1\n2",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\00-introduzione-corso-01.pdf#1": "9/29/2021\n200-introduzione -corso -01\n3modelli di calcolo e informatica\n•macchina di Turing\n•lambda calcolo\n•modelli per il calcolo parallelo e \ndistribuito\n•modelli per gerarchie di memorie\n•molti altrimodell i\n4programma\n•quantum computing\n–qubit\n–coppie di qubit\n–registri\n–porte con uno o piu'qubit\n–no cloning theorem\n–l'operatore di Hadamard\n–computazioni reversibili\n–l'algoritmo di Bernstein Vazirani\n–l'algoritmo di Shor\n–teoria della complessità e quantum computing3\n4",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\00-introduzione-corso-01.pdf#2": "9/29/2021\n300-introduzione -corso -01\n5programma\n•teoria della complessità e big data\n–la classe Pspazio\n–Pspazio -completezza\n–teorema di Savitch\n–le classi L e NL\n–NL-completezza\n–NL e co -NL\n–algoritmi randomizzati e la classe BPP\n6testi consigliati (consultazione )\n•E. G. Rieffel , W. H. Polak\nQuantum Computing: a Gentle Introduction\nMIT Press \n•N. S. Yanofsky , M. A. Mannucci\nQuantum Computing for Computer Scientists\nCambridge \n•Michael Sipser\nIntroduction to the Theory of Computation\nThompson\n•lezioni suYoutube di Umesh Vazirani (notevoli!)5\n6",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\05-quantum-introduzione-03.pdf#0": "9/29/2021\n105-quantum -introduzione -03\n1Next Generation Computing Models\nQuantum Computing\nIntroduzione\nquantum computing\n•un nuovo modello di calcolo che\n–potrebbe essere fisicamente realizzabile\n–potrebbe avere un vantaggio esponenziale, in alcuni \ncasi, rispetto ai computer tradizionali \n•il modello pone una seria sfida alla strong \nChurch -Turing Thesis\n–che dice che qualunque modello di calcolo può essere \nsimulato da una Macchina di Turing con al più uno \nsvantaggio polinomiale in termini di tempo\n21\n2",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\05-quantum-introduzione-03.pdf#1": "9/29/2021\n205-quantum -introduzione -03\nquantum e non -quantum\n•anche se il quantum computing dovesse \naffermarsi è ipotizzabile che i computer \ntradizionali continuino ad essere usati per \nrisolvere la maggior parte dei problemi\n3\nun po’ di fisica\n•per capire le basi del quantum computing occorre \nun pizzico di fisica\n–i parametri fisici (energia, momento, spin, ….) di una \nparticella elementare (es. elettrone) sono quantizzati e \npossono assumere valori solo in un insieme discreto\n–gli stessi parametri ad un certo istante non hanno un \nvalore che è un singolo numero; un parametro è \ninvece associato a un’onda di probabilità \n(superposition )\n–un parametro assume un singolo valore (collassa a un \nsingolo numero) quando viene osservato \n43\n4",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\05-quantum-introduzione-03.pdf#2": "9/29/2021\n305-quantum -introduzione -03\nqubit\n•i computer tradizionali usano i bit, i cui valori \npossono essere 0 o 1\n•i quantum computer usano i qubit\n–normalmente particelle subatomiche come elettroni o \nfotoni in superposition\n•generare e manipolare qubit è difficile\n–IBM, Google, Rigetti Computing usano circuiti \nsuperconduttori raffreddati a temperature più fredde \ndello spazio profondo\n–IonQ imprigiona atomi in campi elettromagnetici in \ncamere ultra -high vacuum 5\ndue principali direzioni di lavoro\n•sperimentale\n–costruzione di computer che sfruttano i fenomeni \ndella meccanica quantistica\n•teorica\n–quantum algorithms\n•progetto di algoritmi che sfruttano il modello di calcolo \ndella meccanica quantistica\n–quantum protocols\n•progetto di protocolli per trasmettere e ricevere \ninformazioni sfruttando il modello di calcolo della \nmeccanica quantistica\n65\n6",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\05-quantum-introduzione-03.pdf#3": "9/29/2021\n405-quantum -introduzione -03\nassiomi\nstudiamo un modello di calcolo che consente di \nastrarre rispetto alla meccanica quantistica, basato \nsu tre assiomi\n1.superposition\n2.misura\n3.evoluzione unitaria\n7\nostacoli\n•vettori e matrici\n•numeri complessi\n•un po’ di trigonometria\n•pochissimo calcolo delle probabilità\n87\n8",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\10-quantum-un-qubit-04.pdf#0": "9/29/2021\n110-quantum -un-qubit -04\n1Next Generation Computing Models\nQuantum Computing\nUn qubit\nqubit\n•nel calcolo tradizionale un bit può essere in \nalternativa nello stato 0o nello stato 1\n•nel quantum computing si usano i qubit\n•un qubit può essere simultaneamente nello stato \n0e nello stato 1(una superposition dei due stati)\n21\n2",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\10-quantum-un-qubit-04.pdf#1": "9/29/2021\n210-quantum -un-qubit -04\nqubit –ampiezze\n•i due stati di base di un qubit si indicano di solito \ncon |0e |1\n•un qubit si trova in generale in uno stato descritto \nda 𝛼0|0+𝛼1|1, dove 𝛼0e 𝛼1sono numeri \ncomplessi ( 𝛼0,𝛼1∈𝕔) chiamati ampiezze\n–con il vincolo |𝛼0|2+|𝛼1|2=1\n–si ricorda che il modulo di un numero complesso z=\n𝑥+𝑦𝑖è definito come 𝑧=𝑥2+𝑦2\n–quindi 𝑧2=𝑥2+𝑦2\n3\nqubit –esempi \n•ad esempio un qubit può trovarsi nello \nstato(Τ12+Τ12𝑖)|ۧ0+ൗ1\n2|ۧ1\n–si noti come |(Τ12+Τ12𝑖)|2+|ൗ1\n2|2=(\n)Τ14+\nΤ14+Τ12=1\n•oppure un qubit può trovarsi nello stato \nൗ1\n2|0+ൗ1\n2|1\n43\n4",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\10-quantum-un-qubit-04.pdf#10": "9/29/2021\n1110-quantum -un-qubit -04\nqubit –interpretazione geometrica\n•negli esempi ci siamo riferiti finora a valori reali, \nma la proporzionalità con il coseno al quadrato \nrimane anche se i numeri sono complessi\n210\n1= |1\n1\n0=|0𝜃|𝜓\nൗ𝜋2−𝜃\nqubit –basi diverse\n•lo stato |𝜓di un qubit esiste indipendentemente \ndalla base nella quale lo esprimiamo\n•possiamo quindi scegliere due versori \n(perpendicolari) |𝑢e |𝑢⊥diversi da  |0e|1\ned esprimere |𝜓in funzione di |𝑢e |𝑢⊥\n220\n1= |1\n1\n0=|0𝜃|𝜓\nൗ𝜋2−𝜃\n|𝑢|𝑢⊥21\n22",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\10-quantum-un-qubit-04.pdf#11": "9/29/2021\n1210-quantum -un-qubit -04\nqubit –basi diverse\n•la regola che lega la probabilità di misurare uno \nstato di base o un altro in funzione del coseno \ndell’angolo che lo stato ha con ciascuno di essi \nvale anche per versori diversi da  |0e|1\n230\n1= |1\n1\n0=|0𝜃|𝜓\nൗ𝜋2−𝜃\n|𝑢|𝑢⊥\nqubit –basi diverse\n•nota: la misura può essere effettuata \nrelativamente a qualunque base\n24𝜃|𝜓\nൗ𝜋2−𝜃\n|𝑢|𝑢⊥23\n24",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\10-quantum-un-qubit-04.pdf#12": "9/29/2021\n1310-quantum -un-qubit -04\nqubit –basi diverse\n•quindi la misura di un qubit necessita della \nspecifica della base rispetto alla quale è effettuata\n•consideriamo ora il caso generale dei numeri \ncomplessi\n25𝜃|𝜓\nൗ𝜋2−𝜃\n|𝑢|𝑢⊥\nrichiamo –prodotto scalare\n•il prodotto scalare tra due vettori (il primo riga e \nil secondo colonna ) si calcola in questo modo\n•𝑎1𝑎2⋯𝑎𝑛𝑏1\n𝑏2\n⋮\n𝑏𝑛=\n=𝑎1𝑏1+𝑎2𝑏2+⋯+𝑎𝑛𝑏𝑛=෍\n𝑖=1𝑛\n𝑎𝑖𝑏𝑖\n2625\n26",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\10-quantum-un-qubit-04.pdf#13": "9/29/2021\n1410-quantum -un-qubit -04\nrichiamo –complesso coniugato\n•si ricorda che il complesso coniugato di un \nnumero complesso z=𝑥+𝑦𝑖è definito come \nതz=𝑥−𝑦𝑖\n27\nprodotto scalare tra vettori complessi\n•il prodotto scalare tra due vettori complessi |𝜑e \n|𝜓si calcola facendo il trasposto coniugato di \n|𝜑e calcolando il prodotto scalare con il \nsecondo\n•se |𝜑=𝑎1\n𝑎2\n⋮\n𝑎𝑛il suo trasposto coniugato è \nത𝑎1ത𝑎2⋯ത𝑎𝑛\n2827\n28",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\10-quantum-un-qubit-04.pdf#14": "9/29/2021\n1510-quantum -un-qubit -04\nun po’ di notazione\n•mentre |𝑥denota un vettore colonna\n•abbiamo che ۦ|𝑥denota un vettore riga\n29\nqubit –basi diverse\n•in generale, la probabilità che la misura di un \nqubit|𝜓dia un certo versore |𝑢la possiamo \ncalcolare come il quadrato del prodotto scalare \ntra il versore e il qubit\n–si calcola usando il complesso coniugato del versore\n30𝜃|𝜓\nൗ𝜋2−𝜃\n|𝑢|𝑢⊥29\n30",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\10-quantum-un-qubit-04.pdf#15": "9/29/2021\n1610-quantum -un-qubit -04\nqubit –basi diverse\n•il prodotto scalare tra |𝑢=𝛽0|0+𝛽1|1e |𝜓\n=𝛼0|0+𝛼1|1si calcola come\n–𝛽0𝛽1𝛼0\n𝛼1=𝛽0𝛼0+𝛽1𝛼1\n–si ricorda che il complesso coniugato di un numero \ncomplesso z=𝑥+𝑦𝑖è definito come തz=𝑥−𝑦𝑖\n31𝜃|𝜓\nൗ𝜋2−𝜃\n|𝑢|𝑢⊥\nqubit –basi diverse\n•il prodotto scalare tra |𝑢e |𝜓si denota anche \ncon 𝑢𝜓dove la prima parentesi angolata si \nchiama brae le seconda ket(bra-ketnotation , \ndovuta a Dirac)\n32𝜃|𝜓\nൗ𝜋2−𝜃\n|𝑢|𝑢⊥31\n32",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\10-quantum-un-qubit-04.pdf#16": "9/29/2021\n1710-quantum -un-qubit -04\nqubit –basi diverse\n•quindi la probabilità che la misura di un qubit|𝜓\ndia un certo versore |𝑢la possiamo denotare \ncome 𝑢𝜓2\n33𝜃|𝜓\nൗ𝜋2−𝜃\n|𝑢|𝑢⊥\nesempio sulla misura\n•calcola la probabilità che |0assuma il valore del \nversore |ۧ+=ൗ1\n2|0+ൗ1\n2|1\n•abbiamo che |0=1\n0\n•quindi 0+=10ൗ1\n2\nൗ1\n2=ൗ1\n2\n•e 0+2=1\n2\n3433\n34",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\10-quantum-un-qubit-04.pdf#17": "9/29/2021\n1810-quantum -un-qubit -04\nesempio sulla misura\n•calcola la probabilità che |0assuma il valore del \nversore |ۧ1\n•abbiamo che |0=1\n0e |1=0\n1\n•quindi 01=100\n1=0\n•e 012=0\n35\n35",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\10-quantum-un-qubit-04.pdf#2": "9/29/2021\n310-quantum -un-qubit -04\nqubit –misura\n•quando un qubit è isolato si trova in una \nsuperposition\n•quando viene misurato (osservato) collassa con \nprobabilità |𝛼0|2a |0e con probabilità |𝛼1|2a \n|1\n•dopo l’osservazione i valori di ampiezza sono \nirrimediabilmente perduti\n–la misura disturba lo stato del sistema\n5\nqualche esempio sui numeri complessi\nricorda che 𝑖=−1e che 𝑖2=−1\n•semplifica 𝑧=2+3𝑖−5𝑖+6\n–𝑧=8−2𝑖\n•semplifica 𝑧=(2+𝑖)2\n–𝑧=4+4𝑖+𝑖2=4+4𝑖−1=3+4𝑖\n•semplifica 𝑧=𝑖3(7+5𝑖)\n–𝑧=−i7+5i=−7i−5𝑖2=−7𝑖+5=5−7i\n65\n6",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\10-quantum-un-qubit-04.pdf#3": "9/29/2021\n410-quantum -un-qubit -04\nqualche esempio sui numeri complessi\nricorda che il complesso coniugato di un numero \ncomplesso z=𝑥+𝑦𝑖è definito come തz=𝑥−𝑦𝑖\n•calcola il complesso coniugato di 𝑧=2+3𝑖\n–ҧ𝑧=2−3𝑖\n•calcola il complesso coniugato di 𝑧=−𝑖\n–ҧ𝑧=𝑖\n7\nqualche esempio sui qubit\n•considera il qubit|ۧ𝜓=3\n2|ۧ0−1\n2|ۧ1\n•quello mostrato è uno stato nel quale il qubit può \neffettivamente trovarsi?\n–sì perché 3\n22\n+−1\n22\n=3\n4+1\n4=1\n•se verrà misurato, con che probabilità il risultato \ndella misura sarà |ۧ0?\n–3\n22\n=3\n4\n87\n8",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\10-quantum-un-qubit-04.pdf#4": "9/29/2021\n510-quantum -un-qubit -04\nqualche esempio sui qubit\n•considera il qubit|ۧ𝜓=1\n2|ۧ0−𝑖1\n2|ۧ1\n•quello mostrato è uno stato nel quale il qubit può \neffettivamente trovarsi?\n–sì perché 1\n22\n+−𝑖1\n22\n=1\n2+1\n2=1\n•se viene misurato, con che probabilità il risultato \ndella misura sarà |ۧ0?\n–1\n2\n9\nqubit –rappresentazione vettoriale\n•possiamo rappresentare lo stato descritto da \n𝛼0|0+𝛼1|1, in modo sintetico con  il vettore \ndi numeri complessi 𝛼0\n𝛼1\n•quindi lo spazio degli stati di un qubit è uno \nspazio bidimensionale complesso\n–detto spazio di Hilbert\n•il vincolo di normalizzazione ci dice che il \nvettore di un qubit è anche unitario\n–un vettore è unitario quando ha modulo (lunghezza) \nuguale a 1; si chiama anche versore 109\n10",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\10-quantum-un-qubit-04.pdf#5": "9/29/2021\n610-quantum -un-qubit -04\nqubit –stati di base\n•possiamo rappresentare lo stato descritto da 𝛼0=\n1, e 𝛼1=0con il vettore 1\n0\n–quindi scrivere |0è equivalente a scrivere 1\n0\n•inoltre possiamo rappresentare lo stato descritto \nda 𝛼0=0, e 𝛼1=1con il vettore 0\n1\n–quindi scrivere |1è equivalente a scrivere 0\n1\n11\nqubit –rappresentazione vettoriale\n•quindi possiamo scrivere 𝛼0|0+𝛼1|1in forma \nvettoriale come  𝛼01\n0+𝛼10\n1=𝛼0\n𝛼1\n–i vettori 1\n0e 0\n1sono le basi della \nrappresentazione\n•la notazione con le parentesi |𝑥non è che una \nforma sintetica per la rappresentazione vettoriale\n–si chiama ket-notation ed è stata concepita da Dirac\n–la forma |𝑥denota con il nome 𝑥un vettore colonna\n1211\n12",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\10-quantum-un-qubit-04.pdf#6": "9/29/2021\n710-quantum -un-qubit -04\nqubit –rappresentazione vettoriale\n•quindi\n–un qubit è quindi un vettore unitario in uno spazio \nvettoriale bidimensionale complesso\n–la notazione usata per descrivere qubit è una \nnotazione per descrivere vettori\n13\nes. sulla rappresentazione vettoriale\n•considera il qubit|ۧ𝜓=3\n2|ۧ0−1\n2|ۧ1\n•mostrane la reppresentazione vettoriale\n–|ۧ𝜓=3\n21\n0−1\n20\n1=3\n2\n−1\n2\n1413\n14",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\10-quantum-un-qubit-04.pdf#7": "9/29/2021\n810-quantum -un-qubit -04\nqubit –interpretazione geometrica\n•se assumiamo, per semplicità, che 𝛼0e 𝛼1siano \nnumeri reali , possiamo rappresentare 𝛼01\n0+\n𝛼10\n1con il disegno:\n150\n1= |1\n1\n0=|0circonferenza unitaria\n𝛼0𝛼1tutti i qubit con ampiezze reali\nsono un punto su questa\ncirconferenza\nqubit –interpretazione geometrica\n•ad esempio se 𝛼0=ൗ1\n2e 𝛼1=ൗ1\n2abbiamo\n160\n1= |1\n1\n0=|0ൗ𝜋4ൗ1\n2|0+ൗ1\n2|1\n𝛼0=cos𝜋\n4=ൗ1\n2𝛼1=sin𝜋\n4=ൗ1\n215\n16",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\10-quantum-un-qubit-04.pdf#8": "9/29/2021\n910-quantum -un-qubit -04\nqubit –interpretazione geometrica\n•consideriamo ora un generico stato |𝜓con \nampiezze (per semplicità) reali ed osserviamo gli \nangoli della sua rappresentazione geometrica\n170\n1= |1\n1\n0=|0𝜃|𝜓\nqubit –interpretazione geometrica\n•possiamo esprimere le componenti di |𝜓usando \ngli angoli che forma con gli assi\n•abbiamo che |𝜓=cos𝜃|0+sin𝜃|1=cos𝜃\nsin𝜃\n180\n1= |1\n1\n0=|0𝜃|𝜓17\n18",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\10-quantum-un-qubit-04.pdf#9": "9/29/2021\n1010-quantum -un-qubit -04\nqubit –interpretazione geometrica\n•se misuriamo |𝜓=cos𝜃|0+sin𝜃|1\notteniamo |0con probabilità cos𝜃2e |1con \nprobabilità sin𝜃2\n190\n1= |1\n1\n0=|0𝜃|𝜓\nqubit –interpretazione geometrica\n•possiamo riscrivere sin𝜃2=cosΤ𝜋2−𝜃2\n•quindi la probabilità di misurare uno |0o un  |1\nè data dal coseno al quadrato dell’angolo che lo \nstato ha con ciascuno di essi \n200\n1= |1\n1\n0=|0𝜃|𝜓\nൗ𝜋2−𝜃19\n20",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\15-quantum-un-qubit-heisenberg-02.pdf#0": "10/6/2021\n115-quantum -un-qubit -Heisenberg -02\n1Next Generation Computing Models\nQuantum Computing\nIl principio di indeterminazione di Heisenberg \ne un qubit\nprincipio di indeterminazione  di \nHeisenberg\n•nella meccanica quantistica il principio stabilisce \nl'impossibilità di determinare con precisione a \npriori illimitata i valori di due variabili \nincompatibili, che specificano lo stato di una \nparticella\n–es. posizione e velocità\n•indaghiamo il principio usando il quantum \ncomputing\n21\n2",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\15-quantum-un-qubit-heisenberg-02.pdf#1": "10/6/2021\n215-quantum -un-qubit -Heisenberg -02\ndue basi\n•usiamo due basi per descrivere lo stesso qubit\n–la base costituita dai vettori |0e|1\n–e la base costituita da |ۧ+=ൗ1\n2|0+ൗ1\n2|1e \n|ۧ−=ൗ1\n2|0−ൗ1\n2|1\n30\n1= |1\n1\n0=|0|+\nൗ𝜋4\n|−\n|ۧ+e |ۧ−è una base\n•in primo luogo |ۧ+=ൗ1\n2|0+ൗ1\n2|1è \neffettivamente uno stato\n–infatti ൗ1\n22\n+ൗ1\n22\n=Τ12+Τ12=1\n•e anche |ۧ−=ൗ1\n2|0−ൗ1\n2|1è \neffettivamente uno stato\n–infatti ൗ1\n22\n+−ൗ1\n22\n=Τ12+Τ12=1\n43\n4",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\15-quantum-un-qubit-heisenberg-02.pdf#2": "10/6/2021\n315-quantum -un-qubit -Heisenberg -02\n|ۧ+e |ۧ−è una base\n•inoltre |ۧ+e |ۧ−sono perpendicolari tra loro\n•per dimostrarlo basta calcolare il loro prodotto \nscalare +−=ൗ1\n2ൗ1\n2ൗ1\n2\n−ൗ1\n2e osservare \nche ha valore nullo\n5\ndue misure\n•dato un qubit|𝜓, possiamo misurarlo sia usando \nla base |0e|1sia usando la base |ۧ+e |ۧ−\n•la prima misura la chiamiamo bit-value e la \nseconda sign -value\n6|1\n|0|+\nൗ𝜋4\n|−|𝜓5\n6",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\15-quantum-un-qubit-heisenberg-02.pdf#3": "10/6/2021\n415-quantum -un-qubit -Heisenberg -02\nposizione e velocità\n•immaginiamo ora che il bit -value corrisponda \nalla posizione e che il sign-value corrisponda alla \nvelocità\n7|1\n|0|+\nൗ𝜋4\n|−|𝜓\nposizione e velocità\n•è possibile in un certo istante conoscere \nposizione e velocità di un qubit ?\n8|1\n|0|+\nൗ𝜋4\n|−|𝜓7\n8",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\15-quantum-un-qubit-heisenberg-02.pdf#4": "10/6/2021\n515-quantum -un-qubit -Heisenberg -02\nconoscenza perfetta del bit -value\n•perchè si possa conoscere perfettamente il bit -\nvalue di |𝜓occorre che esso sia |0oppure |1\n9|1\n|0|+\nൗ𝜋4\n|−|𝜓\nconoscenza perfetta del sign-value\n•perchè si possa conoscere perfettamente il sign-\nvalue di |𝜓occorre che esso sia |ۧ+oppure |ۧ−\n10|1\n|0|+\nൗ𝜋4\n|−|𝜓9\n10",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\15-quantum-un-qubit-heisenberg-02.pdf#5": "10/6/2021\n615-quantum -un-qubit -Heisenberg -02\nconoscenza perfetta di entrambi\n•se possiamo conoscere perfettamente il sign-\nvalue di |𝜓, es. perchè esso è molto vicino a |0, \nallora abbiamo molta incertezza sul sign-value\n–è |ۧ+con probabilità Τ12e |ۧ−con probabilità Τ12\n11|1\n|0|+\nൗ𝜋4\n|−|𝜓\n11",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#0": "9/28/2021\n102-linguaggio -e-grammatiche -24\n1Linguaggi e Grammatiche\n2Linguaggi e informatica\n•ubiquitari nelle applicazioni\n–linguaggi di programmazione\n•compilatori ed interpreti\n–linguaggi di comunicazione\n•protocolli per il dialogo traentità omologhe\n–linguaggi per intefacce\n•specifica di sequenze di operazioni\n•paradigmatici nella teoria\n–molti importanti problemi teorici sono riconducibili a \nquello dell’appartenenza di una stringa ad un \nlinguaggio1\n2",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#1": "9/28/2021\n202-linguaggio -e-grammatiche -24\n3Tre approcci diversi\n•approccio insiemistico\n–utile per determinare le \nproprietà elementari dei\nlinguaggi\n•approccio generativo\n–grammatiche formali\n•approccio riconoscitivo\n–automi riconoscitori\n4Concetti matematici di base\n•Insiemi\n•Relazioni\n•Funzioni3\n4",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#10": "9/28/2021\n1102-linguaggio -e-grammatiche -24\n21Funzione\ndominiocodominioX1 … Xn-1 Xn\n22Funzione totale\ndominiocodominioX1 … Xn-1 Xn•una funzione f è totale se dom(f) = X1, …, Xn-121\n22",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#11": "9/28/2021\n1202-linguaggio -e-grammatiche -24\n23Funzione suriettiva\ndominiocodominioX1 … Xn-1 Xn•una funzione f è suriettiva se cod(f) = Xn\n24Funzione iniettiva\ndominiocodominioX1 … Xn-1 Xn•una funzione f è iniettiva se |f-1(xn)|=123\n24",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#12": "9/28/2021\n1302-linguaggio -e-grammatiche -24\n25Funzione biiettiva\ndominiocodominioX1 … Xn-1 Xn•una funzione f è biiettiva (biiezione) se è \niniettiva, suriettiva e totale\n26Alfabeto\n•un alfabeto è un insieme finito non vuoto di \nsimboli (caratteri)\n•esempi:\n{‘M’, ‘C’, ‘L’, ‘X’, ‘I’, ‘V’}\n{‘0’, ‘1’}\n{‘0’, ‘1’, ‘2’, ‘3’, ‘4’, ‘5’, ‘6’, ‘7’, ‘8’, ‘9’}\n{‘a’, ‘b’, ‘c’, ‘d’, ‘e’, ‘f’, ‘g’, ‘h’, ‘i’, ‘l’, ‘m’, \n‘n’, ‘o’, ‘p’, ‘q’, ‘r’, ‘s’, ‘t’, ‘u’, ‘v’, ‘z’}25\n26",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#13": "9/28/2021\n1402-linguaggio -e-grammatiche -24\n27Concatenazione\n•dato un alfabeto , definiamo l’operazione binaria \nconcatenazione (denotata con “ ◦”)\na◦b= abcon a, b\n•indichiamo con anla concatenazione di acon se stessa n \nvolte\nesempio: a4 = a◦a◦a◦a= aaaa\n•l’operazione “ ◦” è associativa ma non commutativa\n•dati e “◦” definiamo +come l’insieme delle stringhe \n(parole) di lunghezza finita\n•se a +aggiungiamo la stringa vuota = “” otteniamo *\n28Linguaggio\n•un linguaggio è un sottoinsieme di *\n•*è detto linguaggio universale\n•il linguaggio vuoto non contiene stringhe \n(nota che coincide con l’insieme vuoto )\n–attenzione:\n\n{}27\n28",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#14": "9/28/2021\n1502-linguaggio -e-grammatiche -24\n29Operazioni sui linguaggi\nL1e L2linguaggi\n•unione\nL1L2= {x*| xL1x L2}\nL1= L1\n•intersezione\nL1L2= {x*| xL1x L2}\nL1= \n•complementazione\nL1={x*| xL1}\n30Operazioni sui linguaggi\nL1e L2linguaggi\n•concatenazione o prodotto\nL1◦L2= {x*|\nx1L1x2L2tali che x = x1◦x2}\nL ◦{} = {} ◦L = L\nesempio :\nL1= {an | n1};  L2= {bm | m1};   L1◦L2= {an bm | n,m1}\n•potenza Lhdi un linguaggio L\nL0= {}\nLh= L ◦Lh-1, per h 129\n30",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#15": "9/28/2021\n1602-linguaggio -e-grammatiche -24\n31Operatore di Kleene\n•chiusura riflessiva e transitiva di un linguaggio\nL*= Lh\nL* *={}\nesempio : L={aa} L*={a2n|n0}\n•chiusura transitiva (non riflessiva) di un \nlinguaggio\nL+= Lh\nesempio : L={aa} L+={a2n|n1}\nL*=L+ {}\nh=0\n\nh=1\n32Espressioni regolari\n•è uno strumento per descrivere linguaggi (vedremo nel seguito quali)\n•dato un alfabeto , si definisce espressione regolare ogni stringa r\nr({+, *, (, ), ◦, })+\n•tale che:\n1.r=oppure\n2.roppure\n3.r=(s+t) oppure r=(s◦t) oppure r=s*, con se tespressioni regolari\nespressione linguaggio\n \na {a}\n(s+t) L(s)L(t)\n(s◦t) L(s)◦L(t)\ns*L(s)*semantica31\n32",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#16": "9/28/2021\n1702-linguaggio -e-grammatiche -24\n33Espressioni regolari\ni linguaggi rappresentabili con espressioni regolari sono una \ninteressante sottoclasse stè forma sintetica di s◦tforma sintetica\nespressioni sintetiche si ottengno definendo delle \nprecedenze tra gli operatori: *> ◦> +\nesempio : \n(a+(b(cd))) = a+bcdforma sinteticaesempio : \n(a+b)*rappresenta L=({ a}{b})*\nesempio : \n(a+b)*arappresenta L={x|x {a,b}*“x termina con a”}\n34Esercizio\ndata una mappa stradale, scrivere un’espressione regolare che \ndefinisca tutti i percorsi possibili tra A e B\nadec +adg+fec+fg= \n= ad(ec+g) + f(ec+g) = \n= (ad+f)(ec+g)A Ba d c e\nf g\n33\n34",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#17": "9/28/2021\n1802-linguaggio -e-grammatiche -24\n35Esercizio\ndata una mappa stradale, scrivere un’espressione regolare che \ndefinisca tutti i percorsi possibili tra A e B\nf(ebd)*gA Bd e\nf gb\n36Esercizio\ndata una mappa stradale, scrivere un’espressione regolare che \ndefinisca tutti i percorsi possibili tra A e B\na(deb)*decA Ba d c eb\n35\n36",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#18": "9/28/2021\n1902-linguaggio -e-grammatiche -24\n37Esercizio\ndata una mappa stradale, scrivere un’espressione regolare che \ndefinisca tutti i percorsi possibili tra A e B\na(deb)*dgA Ba d e\ngb\n38Esercizio\ndata una mappa stradale, scrivere un’espressione regolare che \ndefinisca tutti i percorsi possibili tra A e B\nf(edb)*ecA Bd c e\nfb\n37\n38",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#19": "9/28/2021\n2002-linguaggio -e-grammatiche -24\n39Esercizio\ndata una mappa stradale, scrivere un’espressione regolare che \ndefinisca tutti i percorsi possibili tra A e B\nf(ebd)*g+ f(ebd)*ec+ a(deb)*dec+ a(deb)*dg=\n= f(ebd)*(g+ec) + a(deb)*d(g+ec) =\n= (f(ebd)*+a(deb)*d) (g+ec) =\n= (f+ad)(ebd)*(g+ec)A Ba d c e\nf gb\n40Le grammatiche formali\n1940 Post e Markof, riscrittura e derivazione di \nstringhe\n1950 Chomsky, classificazione delle grammatiche \nnell’ambito degli studi sul linguaggio \nnaturale\n1960 Backus Naur Form per descrivere Algol•approccio generativo alla descrizione dei \nlinguaggi\n•metodo di costruzione delle stringhe basato sulla \nriscrittura39\n40",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#2": "9/28/2021\n302-linguaggio -e-grammatiche -24\n5Insiemi\n•consideriamo insiemi finiti e insiemi infiniti\n•|A| = cardinalità dell’insieme (finito ) A\n•alcuni insiemi infiniti di numeri:\nN naturali (contiene zero)\nN+ naturali positivi\nZ interi relativi\nZ+interi positivi\nZ- interi negativiQ razionali relativi\nQ+ razionali positivi\nQ-razionali negativi\nR reali\nR+ reali positivi\nR-reali negativi\n6Sottoinsiemi e insiemi uguali\n•datidue insiemi A e B, se\nx B x A\nallora B è sottoinsieme di A, e siscrive B A\n•ogni insieme è sottoinsieme di se stesso\n•l’insieme vuotoè sottoinsieme di ogni insieme\n•se A e B sono finiti , allora B A |B| |A|\n•A e B insiemi uguali\nA=B (x A x B)\nsipuòscrivere anche\nA=B (A B B A)\n•A è sottoinsieme proprio di B (A B) se \n(A B) (A B)5\n6",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#20": "9/28/2021\n2102-linguaggio -e-grammatiche -24\n41Grammatiche formali\n•grammatiche di Chomsky\n•-produzioni\n•riconoscimento di linguaggi\n42Grammatiche di Chomsky\nunagrammatica è una quadrupla \nG=<VT, VN, P, S>\n•VT è l’alfabeto (finito) di simboli terminali\n•VNè un insieme (finito) di simboli non terminali , o \ncategorie sintattiche , tale che VN= \n•P, detto insieme delle produzioni , è una relazione \nbinaria finita su\n(VTVN)*◦VN◦(VTVN)*(VTVN)*\n•SVNè l’assioma<,>P si indica generalmente con →forma sintetica41\n42",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#21": "9/28/2021\n2202-linguaggio -e-grammatiche -24\n43Esempio\nuna grammatica definisce implicitamente tutte le stringhe \ndi terminali generabili a partire dall’assioma tramite una \nsequenza di riscritture\nesempio:\nG=<{a, b, c}, {S, B, C}, P, S>, con P composto da:\nS → aSS → B B → bB\nB → bCC → cCC → c\ngenera L(G) = { anbmch| n0, m, h1}\n→ 1→ 2 …→ n\nviene anche indicato con\n→ 1| 2|…|nforma sintetica\n44Linguaggio generato\n•derivazione diretta : relazione su\n(V*◦VN◦V*) V*\n<,> appartiene alla relazione (si scrive  ) se\n V*◦VN◦V*ed ,,V*t.c. ==e →P\ne sono dette forme di frase\n•derivazione : chiusura riflessiva e transitiva della \nderivazione diretta, si rappresenta con *\n•il linguaggio generato da G è L(G) = {x|x VT*S*x}\n•due grammatiche G1e G2sono equivalenti se \nL(G1)=L(G2)\ntalvolta al posto di *forma sinteticaVTVNviene talvolta indicato con Vforma sintetica43\n44",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#22": "9/28/2021\n2302-linguaggio -e-grammatiche -24\n45Grammatiche formali\nesempio : generazione di { anbncn|n1}\ngrammatica G=<{ a, b, c},{S,B,C,F,G},P,S>\ncon P composto da\nS → aSBC CB → BC\nSB → bFFB → bF\nFC → cGGC → cG\nG → \nper generare aabbcc\nSaSBC aaSBCBC aaSBBCC\naabFBCC aabb FCC aabbc GC\naabbcc G aabbcc\n46Grammatiche formali\nosservazione : non è detto che una sequenza di derivazioni \nporti ad una stringa del linguaggio\nesempio : \nla grammatica G=<{ a, b, c}, {S, A}, P, S> con\nS → aSc| A\nA → bAc| \ngenera {anbmcn+m|n,m0}\nesempio : \nla grammatica G=<{a, b, c}, {S, A}, P, S> con\nS → Ab\nA → Sa\ngenera 45\n46",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#23": "9/28/2021\n2402-linguaggio -e-grammatiche -24\n47Grammatiche di Chomsky\n•di tipo 0, non limitate\n•di tipo 1, context sensitive, contestuali\n•di tipo 2, context free (CF), non contestuali\n•di tipo 3, lineari destre (RL), regolari\n48Grammatiche di Chomsky\ndi tipo 0, non limitate\n•sono le meno restrittive\n•produzioni del tipo\n→, V*◦VN◦V*, V*\nammettono anche derivazioni che accorciano stringhe\nlinguaggi di tipo 0\nesempio :\nil linguaggio { anbn|n1} è di tipo 0 in quanto generato da\nS → aAB B → b\naA → aaAbaAb→ ab\naAA → aA 47\n48",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#24": "9/28/2021\n2502-linguaggio -e-grammatiche -24\n49Grammatiche di Chomsky\ndi tipo 1, context sensitive, contestuali\n•produzioni che non riducano la lunghezza delle forme di frase\n→, ||≤||, V*◦VN◦V*, V*\nlinguaggi di tipo 1\nesempio :\nil linguaggio { anbncn|n1} è di tipo 0 in quanto generato da\nS → aSBC CB → BC \nSB → bF FB → bF\nFC → cG GC → cG\ncG → c\nma è anche di tipo 1, infatti è generato anche da\nS → aSBc| aBc\ncB → Bc\nbB → bb\naB → ab\n50Generazione di stringhe di anbncn\n(1)S → aSBc | aBc    (2)cB → Bc \n(3)bB → bb (4)aB → ab\nSaSBc\naaSBcBc\naaaSBcBcBc\naaaaBcBcB cBc\naaaaBcB cBBcc \naaaaBcBB cBcc \naaaaB cBBBccc \naaaaBB cBBccc \naaaaBBB cBccc aaaaBBBBcccc\naaaabBBBcccc\naaaab bBBcccc\naaaabb bBcccc\naaaabbbbcccc49\n50",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#25": "9/28/2021\n2602-linguaggio -e-grammatiche -24\n51Grammatiche di Chomsky\ndi tipo 2, context free (CF), non contestuali\n•produzioni del tipo\nA→, AVN, V+\nlinguaggi di tipo 2\nesempio :\nil linguaggio { anbn|n1} è di tipo 0 in quanto generato da\nS → aAb\naA → aaAb\nA → \nma è anche di tipo 2, infatti è generato anche da\nS → aSb| ab\n52Esempi di linguaggi di tipo 2\nlinguaggio delle espressioni aritmetiche con la variabile i (come per \nesempio “i*i+(i*i+(i))*i*i ”, oppure “((i+i)*i) ”). \nL’assioma è E. \nE → E+T | T\nT → T*F | F\nF → i| (E)\ngrammatica delle parentesi ben bilanciate (esempio “ (((())))() ”)\nS → ()| SS | (S)\nda quale sequenza di produzioni è generata “ ()((()())) ” ?\ngrammatica delle stringhe palindrome (esempio “elle”, “ereggere”)51\n52",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#26": "9/28/2021\n2702-linguaggio -e-grammatiche -24\n53Grammatiche di Chomsky\ndi tipo 3, lineari destre (RL), regolari\n•produzioni del tipo\nA→, AVN, (VT◦VN)VT\n•linguaggi di tipo 3\nesempio :\nil linguaggio {anb|n0} è di tipo 3 in quanto generato da\nS → aS\nS → b\nsi possono anche definire grammatiche lineari sinistre (LL) con \nA→, AVN, (VN◦VT)VT\nesempio : il linguaggio { anb|n0} è anche generato da\nS → Tb| b\nT → a| Ta\nteorema : i linguaggi generati da grammatiche LL e RL coincidono\n54Grammatiche di Chomsky\nun linguaggio è strettamente di tipo n se esiste una \ngrammatica di tipo n che lo genera e non esiste una \ngrammatica di tipo m>n che lo genera\nesempio : il linguaggio { anbn|n1} è generato da \nuna grammatica di tipo 2 e non è generato da \nnessuna grammatica di tipo 353\n54",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#27": "9/28/2021\n2802-linguaggio -e-grammatiche -24\n55Grammatiche di Chomsky\ncontenimento tra i linguaggitipo 0\ntipo 1\ntipo 2\ntipo 3\n56Grammatiche di Chomsky\nquadro riassuntivo della classificazione delle \ngrammatiche secondo Chomskytipo produzioni vincoli\ntipo 0\nnon limitate→ V*◦VN◦V*, V*\ntipo 1\ncontestuali→||≤||\nV*◦VN◦V*, V*\ntipo 2\nnon contestualiA→ AVN, V+\ntipo 3\nregolariA→ AVN, (VT◦VN)VT55\n56",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#28": "9/28/2021\n2902-linguaggio -e-grammatiche -24\n57-produzioni\n•con grammatiche di tipo1, 2, 3 non è possibile\ngenerare la stringa vuota\n–per generare occorre una produzione →che\nviene detta-produzione\n–per Chomsky tutti ilinguaggi checontengono -\nproduzioni sono linguaggi di tipo0\n•qual è l’impatto sui corrispondenti linguaggi\ndelle-produzioni nelle grammatiche ?\n–se ammettiamo -produzioni dobbiamo fare \nattenzione , altrimenti rischiamo di snaturare la \ngerarchia di Chomsky\n58-produzioni : variazione della gerarchia\ncon le seguenti modifiche , ilinguaggi generati dale \ndiverse tipologie di grammatiche rimangono inalterati , \nsalvo per la possibilità di generare la stringa vuota\ntipo-produzioni ammesse\n0 tutte (per definizione)\n1 solo sull’assioma quando quest’ultimo non \ncompare mai a destra di una produzione\n2 tutte\n3 tutte57\n58",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#29": "9/28/2021\n3002-linguaggio -e-grammatiche -24\n59Esempi di grammatiche\n•il linguaggio {w ◦w| w (a+b)*}\n•è generato dalla grammatica contestuale\nS → T | \nT → aAT | bBT | A0a| B0bAa→ aA\nAb→ bA\nBa→ aB\nBb→ bBAA0→ A0a\nBA0→ A0b\nAB0→ B0a\nBB0→ B0b(1) (2) (3)\nA0→ a\nB0→ b(4)\n•le (1) generano insieme caratteri della prima e della seconda \nstringa; A0(B0) è l’ultimo carattere della prima stringa\n•le (2) e le (3) separano la prima stringa dalla seconda\n•le (4) chiudono la generazione, se sono applicate troppo presto \nil processo diverge\n60Esempi di grammatiche\n•il linguaggio {(x #)*| x = permutazione di (a,b,c)} (che contiene \nper esempio le stringhe , abc# , acb# , bac#cab# , ecc)\n•ma è generato anche dalla grammatica CF:\nS → E#S |  E → abc | acb | cba | cab | bac | bca\n•ed anche dalla grammatica regolare:\nS → aX | bY | cZ | \nX → bX| cX\nX→ cR\nX→ bRR → #S\nY → aY| cY\nY→ cR\nY→ aRZ → aZ| bZ\nZ→ bR\nZ→ aRS → S’ |  A → a\nB → b\nC → cAB → BA\nAC → CA\nBC → CBS’ → ABC#\nS’ → ABC#S’è generato dalla grammatica contestuale:59\n60",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#3": "9/28/2021\n402-linguaggio -e-grammatiche -24\n7Insieme delle parti\nA\nP(A)l’insieme dei sottoinsiemi di A è detto l’ insieme delle parti di A e si \nindica con P(A) o 2A\nse A è finito e |A| = n allora |P(A)| = 2n\n8Operazioni tra insiemi\n•unione C = A B\n–se A e B sono finiti |C| |A|+|B|\n–commutativa e associativa\n•intersezione C=A B\n–se A e B sono finiti |C| min{|A|, |B|}\n–commutativa e associativa\n–l’intersezione è distributiva rispetto all’unione\n•partizione di A\n–insieme di n sottoinsiemi di A tali che \nA1A2… An= A\ni j AiAj= A B\nA B\nA7\n8",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#30": "9/28/2021\n3102-linguaggio -e-grammatiche -24\n61Forma normale di Backus\n•la BNF è una notazione CF con alcuni accorgimenti \nsintattici che ne aumentano la leggibilità\n<sequenza istruzioni> ::= <istruzione>; \n{<istruzione>;}\n<istruzione if> ::= if ( <condizione> ) \n<istruzione> [else <istruzione>]esempio\npuò essere riscritto:\nQ → I;| I;Q\npuò essere riscritto:\nF → if( C )I else I | if( C )I\n62Riconoscimento dei linguaggi\n•esistono linguaggi a cui non corrisponde alcun algoritmo \ndi decisione\n•i linguaggi di tipo 3 sono riconosciuti da dispositivi con \nmemoria costante in tempo lineare (automi a stati finiti)\n•i linguaggi strettamente di tipo 2 sono riconosciuti da \ndispositivi non deterministici con pila in tempo lineare \n(automi a pila non deterministici)problema : \nstabilire se una stringa appartiene ad un dato linguaggio61\n62",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#31": "9/28/2021\n3202-linguaggio -e-grammatiche -24\n63Riconoscimento dei linguaggi\n•i linguaggi strettamente di tipo 1 sono riconosciuti da \ndispositivi non deterministici con memoria che cresce \nlinearmente con la lunghezza della stringa da esaminare \n(automi non deterministici “linear bounded”)\n•i linguaggi strettamente di tipo 0 sono riconosciuti da \nmacchine di Turing con memoria e tempo illimitati\n–è possibile che non esista un algoritmo di decisione ma un \nprocesso semidecisionale, in cui, se la stringa non fa parte del \nlinguaggio non è detto che la computazione termini\n63",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#4": "9/28/2021\n502-linguaggio -e-grammatiche -24\n9Operazioni tra insiemi\n•complemento di B rispetto ad A\nC = A -B = {x| xA xB}\n•differenza simmetrica o somma disgiunta\nA+B=AB-(A B)\n•prodotto cartesiano C=A B\nC= {x,y| xA yB}\n–insieme di tutte le possibili coppie ordinate\n–il prodotto cartesiano è associativo ma non commutativoA BA B\n10Relazioni\n•siano A1, A2, …, Ann insiemi \n(non necessariamente distinti)\n•una relazione n -aria è un sottoinsieme di \nesempio :\n–la relazione “ minore di ” definita sui naturali è l’insieme \nR NN = N2, dove R= {x,y| xy}A1A2…An\nR A1A2…An9\n10",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#5": "9/28/2021\n602-linguaggio -e-grammatiche -24\n11Relazione d’ordine\n•RA2=A A è una relazione d’ordine se valgono le \nseguenti proprietà:\n1.riflessività\nx,xR\n2.antisimmetria\nx,yRy,xRx=y\n3.transitività\nx,yRy,zRx,zR\nun insieme su cui è definita una relazione d’ordine si dice \nparzialmente ordinato o poset (“partially ordered set”)\nesempio : la relazione “ ” è una relazione d’ordine su N\n12Relazione d’ordine totale\n•una relazione d’ordine R A2è detta totale se\nx,yA2 x,yR y,xR\nesempio :\nla relazione “ ” è una relazione d’ordine totale su N\n1 2 3 4 5 6 7 8 …11\n12",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#6": "9/28/2021\n702-linguaggio -e-grammatiche -24\n13Relazione di equivalenza\n•RA2= AA è una relazione di equivalenza se valgono \nle seguenti proprietà:\n1.riflessività\nx,xR\n2.simmetria\nx,yRy,xR\n3.transitività\nx,yRy,zRx,zR \nesempio : la relazione “= ”è una relazione di equivalenza su R\n14Relazione di equivalenza\n•un insieme A su cui è definita una relazione di \nequivalenza si può partizionare in sottoinsiemi \nmassimali di equivalenza , detti classi di \nequivalenza\n•l’insieme delle classi di equivalenza di A è \ndetto insieme quoziente e si denota A/R \n•un elemento di A/R si denota con [a]\n•il numero di classi di A/R si chiama indice di R13\n14",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#7": "9/28/2021\n802-linguaggio -e-grammatiche -24\n15Esempio di relazione di equivalenza\n•consideriamo la relazione Eksu N\nn k m\nse esistono q, q ′, r (con r<k) tali che\nn=qk+r    e    m=q′k+r\n•Ekè una relazione di equivalenza\n•le sue classi sono le classi resto rispetto alla \ndivisione per k\n16Operazioni su relazioni\n•unione\nR1R2={x,y|x,yR1x,yR2}\n•complementazione\nR={x,y|x,yR}\n•chiusura transitiva\nR+  ={x,y|\ny1, …,ynA, n2, y1=x, yn=y\ntali che\nyi,yi+1R, i=1, …,n -1} \n•chiusura transitiva e riflessiva\nR*=R+{x,x|xA}15\n16",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#8": "9/28/2021\n902-linguaggio -e-grammatiche -24\n17Chiusure di relazioni\n2\n31\n54\n2\n31\n542\n31\n54chiusura transitivachiusura transitiva\ne riflessiva\n18Funzioni\nR X1 … Xn\nè una relazione funzionale se\nx1, …, xn-1X1 … Xn-1\nesiste al più un elemento xn Xntale che\nx1, …, xn-1, xnR\nsi chiama funzione la legge che associa x1, …, xn-1ad xn\nf(x1, …, xn-1) = xn\nf: X1 … Xn-1→Xn\nX1 … Xn-1è il tipodella funzione17\n18",
    "dataExtraction\\data_test\\rootfolder\\universita\\algoBigData\\primoEsonero\\020-linguaggi-e-grammatiche-24.pdf#9": "9/28/2021\n1002-linguaggio -e-grammatiche -24\n19Funzioni: dominio codominio\ndom(f) = dominio di f\nsottoinsieme di X1 … Xn-1\ndom(f) = { x1, …, xn-1X1 … Xn-1|\nxn Xnf(x1, …, xn-1) = xn}\ncod(f) = codominio di f\nsottoinsieme di Xn\ncod(f) = { xn Xn|\nx1, …, xn-1X1 … Xn-1\nf(x1, …, xn-1) = xn}\n20Funzioni: fibra\ndato un xn\nf-1(xn) = controimmagine o fibra di xn\nsottoinsieme di X1 … Xn-1\nf-1(xn) = {x1, …, xn-1X1 … Xn-1|\nx1, …, xn-1dom(f)\n\nf(x1, …, xn-1) = xn}19\n20",
    "dataExtraction\\data_test\\rootfolder\\universita\\analisiProgettazioneSoftware\\hofmeister2005.pdf#0": "Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . \nPittsburgh, PA, November 6-9, 2005.    Named one of the five best papers of the conference. \n1 Generalizing a Model of Soft ware Architecture Design  \nfrom Five Industrial Approaches \nChristine Hofmeister \nLehigh University \nBethlehem, PA, USA \ncrh@eecs.lehigh.edu Philippe Kruchten \nUniversity of British Columbia\nVancouver, B.C., Canada \npbk@ece.ubc.ca  Robert L. Nord \nSoftware Engineering Institute\nPittsburgh, PA, USA \nrn@sei.cmu.edu  \nHenk Obbink \nPhilips Research Labs \nEindhoven, The Netherlands \nhenk.obbink@philips.com Alexander Ran \nNokia \nBurlington, MA, USA \nalexander.ran@nokia.com Pierre America \nPhilips Research Labs \nEindhoven, The Netherlands \npierre.america@philips.com \n \nAbstract \nWe compare five industrial software architecture \ndesign methods and we extract from their commonal-ities a general software architecture design approach. \nUsing this general approach, we compare across the \nfive methods the artifacts and activities they use or recommend, and we pinpoint similarities and differ-\nences. Once we get beyond th e great variance in termi-\nnology and description, we find that the 5 approaches have a lot in common and match more or less the \n“ideal” pattern we introduced. \n1. Introduction  \nOver the last 15 years a number of organizations \nand individual researchers have developed and docu-\nmented techniques, processes, guidelines, and best \npractices for software architect ure design [4, 5, 6, 7, 8, \n12, 15]. Some of these were cast and published as ar-\nchitecture design methods or systems of concepts, \nprocesses and techniques for architecture design [16, 22, 26, 27].  \nSince many of the design methods were developed \nindependently, their descriptions use different vocabu-lary and appear quite different from each other. Some \nof the differences are essential. Architecture design \nmethods that were developed in different domains naturally exhibit domain characteristics and emphasize \ndifferent goals. For exampl e architectural design of \ninformation systems emphasizes data modeling, and architecture design of tel ecommunication software is \nconcerned with continuous operation, live upgrade and \ninteroperability. Other esse ntial differences may in-\nclude methods designed for large organization vs. \nmethods suitable for a team of a dozen software devel-opers, methods with explicit support for product fami-\nlies vs. methods for one of a kind systems, etc. \nOn the other hand, all software architecture design \nmethods must have much in common as they deal with \nthe same basic problem: maintaining intellectual con-trol over the design of larg e software systems that: re-\nquire involvement of and negotiation among multiple \nstakeholders; are developed by large, often distributed teams over extended periods of time; and have to ad-\ndress multiple possibly conflicting goals and concerns. \nIt is thus of significant interest to understand the \ncommonalities that exist between different methods \nand to develop a general model of architecture design. \nSuch a model would help us better understand the \nstrengths and weaknesses of different existing methods \nas well as provide a framework for developing new methods better suited to specific application domains. \nWith this goal in mind, we selected five different \nmethods: Attribute-Driven Design (ADD) Method  [4], developed at the SEI; Siemens’ 4 Views (S4V) method \n[16], developed at Siemens Corporate Research; the \nRational Unified Process 4 + 1 views (RUP 4+1) [21, 22] developed and commercialized by Rational Soft-\nware, now IBM; Business Architecture Process and \nOrganization (BAPO) developed primarily at Philips Research [1, 26], and Architectural Separation of Con-\ncerns (ASC) [27] developed at Nokia Research. We \nalso assembled a team of people who have made sig-nificant contributions to developing and documenting \nat least one of the methods. Through extensive discus-\nsions focused on how typical  architecture design tasks \nare accomplished by different  methods, we have ar-\nrived at a joint understanding of a general software \narchitecture design model that underlies the five meth-\nods.  In this paper we document our understanding of ",
    "dataExtraction\\data_test\\rootfolder\\universita\\analisiProgettazioneSoftware\\hofmeister2005.pdf#1": "Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . \nPittsburgh, PA, November 6-9, 2005.    Named one of the five best papers of the conference. \n2 what seems to be fundamental about architecture de-\nsign.  \nThis paper is organized as follows. We introduce \nthe five contributing methods in Section 2. Then in Section 3 we present a general model of architecture \ndesign. Section 4describes the five contributing meth-\nods using terms and concepts of the general model, and discusses the commonalities and differences between \nthe contributing methods. Section 5 discusses related \nwork, and Section 6 concludes the paper. \n2. Five Industrial Software Architecture \nDesign Methods \n2.1. Attribute-Driven Design \nThe Attribute-Driven Design (ADD) method [4], \ndeveloped at the SEI, is an approach to defining soft-\nware architectures by basing the design process on the \narchitecture’s quality attribute requirements. It follows \na recursive decomposition pro cess where, at each stage \nin the decomposition, architectural tactics and patterns are chosen to satisfy a set of quality attribute scenarios.  \nIn ADD, the architects, for each module to decom-\npose, 1) choose the architectural drivers, 2) choose an \narchitectural pattern that satis fies the drivers, 3) instan-\ntiate modules and allocate functionality from use cases, and represent the results using multiple views, 4) de-\nfine interfaces of the child modules, and 5) verify and \nrefine the use cases and quality scenarios, making them constraints for the child modules. \n \n2.2. Siemens’ 4 views \nThe Siemens Four-Views (S4V) method [16, 32],  \ndeveloped at Siemens Corporate Research, is based on \nbest architecture practices fo r industrial systems. The \nfour views (conceptual, execution, module and code \narchitecture view), separate  different engineering con-\ncerns, thus reducing the comp lexity of the architecture \ndesign task. \nThese views are developed in the context of a re-\ncurring Global Analysis act ivity. For Global Analysis, \nthe architect identifies the organizational, technologi-\ncal, and product factors that influence the architecture: \nrequirements, desired system qualities, organizational constraints, existing technology, etc. From these the \nkey architectural issues or challenges are identified; \ntypically they arise from a set of factors that, taken \ntogether, will be difficult to fulfill. Design strategies \nare proposed to solve the issu e, and they are applied to \none or more of the views. In addition to interleaving Global Analysis with the vi ew design, the architect is \nexpected to iterate among the design tasks of the four \nviews. \n 2.3. RUP’s 4+1 Views \nThe Rational Unified Process (RUP) is a software \ndevelopment process developed and commercialized \nby Rational Software, now IBM. RUP includes an ar-chitectural design method, using the concept of 4+1 \nviews (RUP 4+1) [21, 22]; four views to describe the \ndesign: logical view, process view, implementation view and deployment view, using a use-case view to \nrelate the design to the context and goals. \nIn RUP, architectural design is spread over several \niterations in an elaboration phase, iteratively populating \nthe 4 views, driven by ar chitecturally significant use \ncases, nonfunctional requirements in the supplementary specification, and risks. Each iteration results in an \nexecutable architectural prot otype, which is used to \nvalidate the architectural design.  \n2.4. Business Architecture Process and Organi-\nzation \nThe BAPO/CAFCR approach [1, 24, 26, 33], de-\nveloped primarily by Philips Research, aims at devel-\noping an architecture (the A in BAPO) for software-\nintensive systems that fits optimally in the context of \nbusiness (B), process (P), and organization (O). For \nthat purpose, the five CAFCR views are described: Customer, Application, Functional, Conceptual, and \nRealization. These views bridge the gap between cus-\ntomer needs, wishes, and ob jectives on the one hand \nand technological realization on the other hand.  \nIn BAPO/CAFCR, the architect iteratively: 1) fills \nin information in one of the CAFCR views, possibly in the form of one of the sugges ted artifacts; 2) analyzes a \nparticular quality attribute across the views to establish \na link between the views and with the surrounding business, processes and orga nization. The architecture \nis complete when there is sufficient information to real-\nize the system and the quality attribute analysis shows no discrepancies. \n \n2.5. Architectural Separation of Concerns \nArchitectural Separation of Concerns (ASC) or \nARES System of Concepts [27], developed primarily \nby Nokia, is a conceptual framework based on separa-tion of concerns to manage complexity of architecture \ndesign. ASC relies on the fact that concerns related to \ndifferent segments of the so ftware transformation cycle \n(typically including design, build, upgrade, load, and \nrun time) are often separable.   In addition to design of \narchitectural structures fo r each segment, ASC pays \nspecial attention to design of texture – replicated mi-\ncrostructure that addresses concerns that cannot be lo-\ncalized within the main structure. ",
    "dataExtraction\\data_test\\rootfolder\\universita\\analisiProgettazioneSoftware\\hofmeister2005.pdf#2": "Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . \nPittsburgh, PA, November 6-9, 2005.    Named one of the five best papers of the conference. \n3 In ASC, the architect analyses design inputs, such \nas preferred technology platforms, road maps, func-\ntional and quality requirements for the product family \nand the product, and using a palette of techniques, pro-duces and prioritizes ASR (architecturally significant \nrequirements), groups ASR by segments of the soft-\nware transformation cycle that they address. Implemen-tation (write-time) design addresses the ASR con-\ncerned with the write-time se gment. Design decisions \nmake implementation technology choices, partition functional requirements betw een different architectural \nscopes of product portfolio, product family, or single \nproduct, establish portability  layers for multiplatform \nproducts, allocate classes of functional requirements to \ndifferent subsystems, and develop description of the API facilitating work division and outsourcing. Per-\nformance (run-time) design deals with run-time ASR \naddressing concurrency and protection, develops per-formance models and makes decisions regarding task \nand process partitions, scheduling policies, resource \nsharing and allocation. Finally, delivery/installation/ upgrade design decisions addr ess the ASR of the corre-\nsponding segments. Typical decisions address parti-\ntions into separately loadable/executable units, installa-tion support, configuration data, upgrade/downgrade \npolicies and mechanisms, management of shared com-\nponents, external dependencies and compatibility re-quirements. \n3. A General Model for Software Architec-\nture Design  \nThe general model for software architecture design \nwe developed first classifies the kinds of activities per-\nformed during design. Architect ural analysis articulates \narchitecturally significant requirements (ASRs) based \non the architectural concerns and context. Architectural \nsynthesis results in candidate architectural solutions \nthat address these requirem ents. Architectural evalua-\ntion ensures that the architectural decisions used are the right ones (see Figure 1).  \nBecause of the complexity of the design task, these \nactivities are not executed sequentially. Instead they \nare used repeatedly, at multiple levels of granularity, until the architecture is complete and validated. Thus \nthe second part of the general model is a characteriza-\ntion of its workflow. \nThe key requirement of our model was that it be \ngeneral enough to fit our fi ve architecture design meth-\nods, and provide a useful framework for comparing them. One strong influence on the activities in our \nmodel was Gero’s Function-Behavior-Structure \nframework for engineering design [13, 14], which \nKruchten applies to software design in [23]. \n \n3.1. Architectural Design Activities & Artifacts \nFirst we describe the main activities of the model, \nand their related artifacts. \nArchitectural concerns:  The IEEE 1471 standard \ndefines architectural concerns as “those interests which \npertain to the system’s development, its operation or \nany other aspects that are critical or otherwise impor-\ntant to one or more stakeholders. Concerns include \nsystem considerations such as performance, reliability, \nsecurity, distribution, and evolvability” [18]. Most ar-\nchitectural concerns are expressed as requirements on \nthe system, but they can also  include mandated design \ndecisions (e.g., use of existing standards). Regulatory \nrequirements may also in troduce architectural con-\ncerns. \nContext:  According to IEEE 1471, “a system’s … \nenvironment, or context, determines the setting and \ncircumstances of developmental, operational, political, and other influences upon that system” [18]. This in-\ncludes things like business goals (e.g., buy vs. build), \ncharacteristics of the organization (e.g., skills of devel-opers, development tools available), and the state of \ntechnology. Note that sometimes the only distinction \nbetween a concern and a context is whether it is spe-cifically desired for this system (a concern) or is in-\n \n \nFigure 1: Architectural design activities ",
    "dataExtraction\\data_test\\rootfolder\\universita\\analisiProgettazioneSoftware\\hofmeister2005.pdf#3": "Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . \nPittsburgh, PA, November 6-9, 2005.    Named one of the five best papers of the conference. \n4 stead a general characteristic or goal of the organiza-\ntion or a stakeholder (context). For example, a business \ngoal of the architecture is a concern, whereas a busi-\nness goal of the enterprise is context. \nArchitecturally-Significant Requirements:  An \nASR is “a requirement upon a software system which \ninfluences its architecture” [2 5]. Not all of the system’s \nrequirements will be relevant to the architecture. Con-\nversely, not all ASRs will have originally been ex-\npressed as requirements: they may arise from other architectural concerns or from the system context. \nArchitectural analysis: Architectural analysis \nserves to define the prob lems the architecture must \nsolve. This activity examin es architectural concerns \nand context in order to come up with a set of ASRs.  \nCandidate architectural solutions:  Candidate ar-\nchitectural solutions may present alternative solutions, \nand/or may be partial solutions (i.e., fragments of an architecture). They reflect design decisions about the \nstructure of software. The architectural solutions in-\nclude information about the design rationale, that is, commentary on why decisions where made, what deci-\nsions were considered and rejected, and traceability of \ndecisions to requirements. \nArchitectural synthesis: Architectural synthesis \nis the core of architectur e design. This activity pro-\nposes architecture solutions to a set of ASRs, thus it moves from the problem to the solution space.  \nValidated architecture:  The validated architec-\nture consists of those candidate architectural solutions that are consistent with the ASRs. These solutions must \nalso be mutually consistent. Only one of a set of alter-\nnative solutions can be present in the validated archi-\ntecture. The validated arch itecture, like the candidate \narchitectural solutions, incl udes information about the \ndesign rationale. \nArchitectural evaluation:  Architectural evalua-\ntion ensures that the archit ectural design decisions \nmade are the right ones. The candidate architectural \nsolutions are measured against the ASRs. Although \nmultiple iterations are expect ed, the eventual result of \narchitectural evaluation is the validated architecture. \nIntermediate results would be the validation or invali-\ndation of candidate ar chitectural solutions. \nIn addition to the above-described artifacts used in \nthe design activities, there are some less explicit inputs \nthat are critical to the design process: \n Design knowledge comes fr om the architect, from \norganizational memory, or from the architecture \ncommunity.  It can take the form of styles, patterns, frameworks, reference architectures, ADLs, product-\nline technologies, etc.  \n Analysis knowledge is needed to define the problem \nand evaluate the solution.  Some work exists in \nanalysis patterns [11] and analytic models associated with design fragments [2].  Knowledge of the evalua-\ntion process itself (e.g., workflow, methods and \ntechniques) [25] can also be an important input. \n Knowledge necessary to pr oduce the system (tech-\nnologies, components, project management). In \nmany cases analysis knowledge is not sufficient to \nevaluate the architecture.  One example is when a \npartial implementation is needed upon which to do \nexperimentation. In general the design must be \nevaluated using realization knowledge, in order to ensure that the system can be built.  \n \n3.2. Workflow \nIn all five of the architectural methods on which \nour model is based, the three main activities in Figure 1 \n(architectural analysis, arch itectural synthesis, and ar-\nchitectural evaluation) do not proceed sequentially, but \nrather proceed in small l eaps and bounds as architects \nmove constantly from one to another, “growing” the architecture progressively over  time. This is primarily \nbecause it is not possible to an alyze, resolve, find solu-\ntions and evaluate the archit ecture for all architectural \nconcerns simultaneously: the range and number of in-\nterrelated issues is just too overwhelming for the hu-man mind, and moreover the inputs (goals, constraints, \netc) are usually ill-defined and only get better under-\nstood or discovered as the architecture starts to emerge. \nTo drive this apparently  haphazard process, archi-\ntects maintain, implicitly or explicitly, a backlog  of \nsmaller needs, issues, problem s they need to tackle and \nideas they might want to us e. The backlog drives the \nworkflow, helping the architect determine what to do \nnext. It is not an externally visible, persistent artifact; on small projects it may only be a list in the architect’s \nnotebook, while for larger projects it might be an elec-\ntronic, shared spreadsheet. See Figure 2. \nThe backlog is fed by: a) selecting some architec-\ntural concern and/or ASR fr om architectural analysis, \nb) negative feedback in the form of issues or problems arising from architectural evaluation, and to a lesser \nextent, c) ideas from the architect’s experience, discus-\nsions, readings, etc. A backlog item can be thought of \nas a statement of the form: \n “We need to make a decision about X.” \n or “We should look at Y in order to address Z.” \nThe backlog is constantly prioritized, bringing to \nthe front the items that seem most urgent. The tactics for prioritization will vary, mostly based on external \nforces. These forces include risks to mitigate, upcom-\ning milestones, team pressure to start work on a part of the system, or simply perception of greater difficulty. \nVery often it is simply the need to relieve pressure \nfrom a stakeholder that drives  an item to the top of the \nbacklog.",
    "dataExtraction\\data_test\\rootfolder\\universita\\analisiProgettazioneSoftware\\hofmeister2005.pdf#4": "Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . Pittsburgh, PA, November 6-9, \n2005.    Named one of the five be st papers of the conference. \n5 Table 1 – Comparing methods: Activities \nActivity ADD S4V RUP 4+1 BAPO/CAFCR ASC \nArchitectural \nanalysis Step 2a: Choose the architec-\ntural drivers. \nQuality attribute models help \nelicit and structure the re-quirements. Global Analysis involves 1) identifying \ninfluencing factors; 2) analyzing them \nto identify their im portance to the ar-\nchitecture, flexibility, and change-ability; 3) identifying key issues or \nproblems that arise from a set of factors  Build or extract a \nsubset of the use case \nmodel as key drivers \nfor architectural de-sign BAPO analysis identifies \nthose elements of the \nBAPO context that are \nrelevant for the architec-tural fit and determine the \nscope of the architecture Concept definition, identification \nand refinement of ASR, partition of \nASR by software segments: runtime, \ndevelopment, load, etc. Thus analy-sis results in a collection of semi \nseparable problems. \nArchitectural \nsynthesis Steps 2b: Choose an architec-\ntural pattern that satisfies the architectural drivers; 2c: In-\nstantiate modules and allocate \nfunctionality from the use cases using multiple views; 2d: Define interfaces of the child \nmodules. The fourth part of Global Analysis, \nidentifying solution strategies, is the \nbeginning of arch. synthesis. Then \nstrategies are instantiated as design \ndecisions that determine the number and type of design elements for one of the software architecture views. Design \ndecisions can be captured in a table.  Gradually build during \nthe elaboration phase architecture organized \nalong 4 different \nviews; in parallel implement an architec-tural prototype. Elaborate the five CAFCR \nviews, adding or refining artifacts suitable for the \nparticular system Address the ASR, segment by seg-\nment in an iterative process, resolv-ing conflicts between the ASR \nwithin the same segment and inte-\ngrating solutions from different segments. \nArchitectural evaluation Step 2e: Verify and refine use \ncases and quality scenarios and make them constraints for the \nchild modules.   Note: this step \nbridges evaluation and analy-sis, preparing for the next \niteration of ADD. S4V splits evaluation into global \nevaluation (done by the architect as the design progresses ) and architecture \nevaluation, led by a team of external \nreviewers, and done at major check-points (e.g. to validate arch. concepts \nand after design is complete). Build an executable \nprototype architecture to assess whether \narchitectural objec-\ntives have been met, and risks retired \n(elaboration phase). Evaluation of the CAFCR \nviews in the BAPO con-text and quality attribute \nanalysis across the \nCAFCR views Architectural decisions are evaluated \nwith respect to ASR that they ad-dress. Typical procedure of evalua-\ntion may include model-based analy-\nsis (LQN, Petri nets, Q nets) simula-tion, prototyping, and discussion of \nchange / use scenarios  \n \n \nTable 2: Comparing methods: Artifacts  \nArtifact ADD S4V RUP 4+1 BAPO/CAFCR ASC \nArchitectural \nconcerns Functional require-\nments, system quality \nattribute requirements, \ndesign constraints. Influencing factors are organizational, \ntechnological, and product factors. Prod-\nuct factors, describing required charac-\nteristics of the product, are always archi-tectural concerns, so are technological \nfactors (state of technology including \nstandards) that could affect the product.  Vision document, Supplemen-\ntary specification (for non func-\ntional requirements); the Risk \nList identifies, among others, technical issues: elements that \nare novel, unknown, or just \nperceived as challenging. These concerns are expressed \nin the Customer and Applica-\ntion views. The overriding \nmeta-concern is bridging the gap between customer needs, \nwishes, and objectives and \ntechnological realization. Each product family has lists of \ntypical concerns that need to be \naddressed by products in the \ndomain. Stakeholders contrib-ute product specific concerns \nduring product conception \nphase. \nContext Business quality goals \n(e.g., time to market, \ncost and benefit), \narchitecture qualities (e.g., conceptual integ-rity, buildability) Organizational factors (see above) are \nusually context, not concerns. Business case and Vision docu-\nment Business goals and con-\nstraints (including the scope \nof the market to be ad-\ndressed), process goals and constraints, organizational goals and constraints Preferred technology platforms \nTechnology/product road maps \nProduct family functional and \nquality requirements System / hardware architecture Implementation constraints \n ",
    "dataExtraction\\data_test\\rootfolder\\universita\\analisiProgettazioneSoftware\\hofmeister2005.pdf#5": "Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . Pittsburgh, PA, November 6-9, 2005.    \nNamed one of the five best papers of the conference. \n6 Artifact ADD S4V RUP 4+1 BAPO/CAFCR ASC \nArchitec-\nturally  \nsignificant requirements \n(ASR) Architectural drivers are the \ncombination of functional, \nquality attribute, and busi-ness requirements that \n“shape” the architecture. To \nidentify them, locate the \nquality attribute scenarios \nthat reflect the highest \npriority business goals and have the most impact on the \ndecomposition. Issue cards describe issues or \nproblems that arise from sets of \nfactors that, taken together, pose significant architectural chal-\nlenges. These issues and their \ninfluencing factors are equiva-lent to the architecturally signifi-\ncant requirements. ASR are identified out of \nthe requirements docu-\nments (Vision, use case model, supplementary \nspecification), and  the risk \nlist. Some of the ASR are expressed in the form of \nscenarios (use case in-\nstances) that are allocated as objectives in the upcom-\ning iteration; this forms a \nrequirements view (+1). Those elements of the BAPO context \nthat are relevant for the architectural fit \nand determine the scope of the architec-ture. Traditional types of requirements \nare represented in the Customer and \nApplication views, which can be influ-enced by the architect in order to obtain \na better BAPO fit. \n A specific process is used to \nidentify ASR based on stake-\nholder concerns, domain and product family specific check-\nlists, and patterns for analysis. \nASR are partitioned by seg-ments of software transforma-\ntion cycle to establish semi-\nseparable solution domains. ASR that are in the same seg-\nment are prioritized and ana-\nlyzed for potential conflicts. \nCandidate architectural solutions A collection of views, \npatterns, and architectural tactics.  The architecture also has associated with it \nrefined scenarios that show \nmapping from requirements to decisions and also aid the \nnext iteration of design. Part of the four views (concep-\ntual, module, execution, and code arch. views). These repre-sent design decisions taken in \naccordance with strategies that \nsolve one or more issues. Issue Cards capture th e issues, their \ninfluencing factors, and solution \nstrategies. Factors are listed and characterized in Factor Tables. Design decisions are in-\ncrementally captured in four views (logical, proc-ess, implementation, de-\nployment), supplemented \nwith a use-case view and with complementary texts, \nand plus  an architectural \nprototype.  Consistent and partially complete \nCAFCR views (Customer, Application, Functional, Conceptual, and Realiza-tion), filled with various artifacts (mod-\nels, scenarios, interfaces, etc.) A collection of patterns, frame-\nworks, and reference architec-tures constitute the source for alternative decisions. An often \nused practice is to analyze \nalternatives along with any proposed solutions. \nValidated architecture Architecture describes a \nsystem as containers for \nfunctionality and interac-\ntions among the containers, typically expressed in three \nviews: module decomposi-\ntion., concurrency, and deployment. The architec-\nture is validated for satis-\nfaction of require-ments/constraints with \nrespect to the decomposi-\ntion.   The description of the four \nviews, the Issue Cards, and the \nFactor Tables represent the \nvalidated architecture. Baseline a complete, ex-\necutable architectural \nprototype at the end of the \nelaboration phase. This prototype is complete \nenough to be tested, and to \nvalidate that major archi-tectural objectives (func-\ntional and non functional, \nsuch as performance) have been met, and major tech-\nnical risks mitigated. Consistent and complete CAFCR \nviews. Consistent in the sense that these \nartifacts are mutually corresponding \nand quality attribute analysis shows no discrepancies (for example, all quality \nrequirements from the Application view \nare satisfied by the Conceptual and Realization views).  Complete in the \nsense that artifacts have been suffi-\nciently elaborated to enable realization.  Concepts, structure and texture \nfor each significant segment of \nsoftware transformation cycle \n(development / load/ runtime) \nBacklog  Information to be processed \nin subsequent steps includ-ing:  \nrequirements to be ana-\nlyzed, decisions to be merged, patterns to be instantiated, requirements \nto be verified and refined. Supported in part by Issue \nCards, which  help the architect identify important issues to \naddress and drive the bigger \niterations through the activities.  Issue Cards are intended to be permanent artifacts. S4V also \nrecommends the capture of \ncertain inputs to the backlog: Issue Cards can capture strate-\ngies (ideas) that don’t work. In larger projects, an Issue \nList is maintained, which contains elements of the \nbacklog. Architectural \nobjectives are allocated to upcoming iterations, and captured in the form of \niteration objectives in the \niteration plan. Worry List contains: Artifacts to be \ncompleted; Quality attributes to be analyzed; Quality requirements to be \nsatisfied; BAPO analysis to be done; \nBAPO issues to be improved. Design knowledge comes from the architect (or organizational memory or community \nbest practice) and is recorded as an \ninfluencing factor. A large amount of general architectural knowledge is \ndocumented in the Gaudì website [24]. The initial backlog is a result of \nthe analysis. As the design progresses ASR are partitioned \ninto solvable problems and \nsome are left on the backlog to be addressed later while some are being addressed earlier. \nThus entries in the backlog \nrepresent finer and finer grained problems or issues. ",
    "dataExtraction\\data_test\\rootfolder\\universita\\analisiProgettazioneSoftware\\hofmeister2005.pdf#6": "Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . \nPittsburgh, PA, November 6-9, 2005.    Named one of the five best papers of the conference. \n7 Once a backlog item (or a small set of backlog \nitems) is picked by the architects, they will proceed to \nincrementally do architectural synthesis, making some \ndesign decisions and integrating them with the existing set of design decisions. Thus it serves to set the objec-\ntives for a particular iteration of architectural synthesis. \nLess frequently, backlog items will drive architectural analysis or architectural ev aluation. Once resolved, an \nitem is removed from the backlog, and the architects \nproceed to the next one. If they encounter some diffi-culty or some input is missing, the item is returned to \nthe backlog. \nThus the backlog is constantly changing. The cycle \nof adding to the backlog, reprioritizing, resolving an \nitem, and removing an item is happening at various periods: from a few hours, to a few days, or more.  \nThis backlog is similar to what some Agile meth-\nods use, in particular Scrum [29]. It guides the work-flow through the three kinds of activities and provides \nthe objectives for each iteration through the synthesis \nactivity. In addition to using some kind of backlog, the architect should also make sure that each iteration of \neach activity is preceded by th e setting of objectives for \nthat step. \n4. Method Comparison using the General \nModel \nThe five architectural methods have been devel-\noped independently but there are many commonalities \namong them.  \n  \n4.1. Side-by-side comparison \nSee Tables 1 & 2 for a comparison of activities and \nartifacts By putting the methods side by side, we are working to identify and understand this commonality \nas well as the important differences.  The rows of the \ntable are based on the activ ities and artifacts identified \nin the general model of the previous section. \nThis comparison has been an iterative process of \nproducing a common model of design activities and \nartifacts, seeing how well they relate to the methods, and adjusting the models.  We take a broad view of \narchitectural design activities and see that the methods \naddress interrelated activities centered on analysis, syn-thesis, and evaluation.   \nThe steps of ADD follow th e sequence of analysis, \nsynthesis, and evaluation activities.  Subsequent itera-\ntions of the activities follow the decomposition of the \narchitecture – the order of which will vary (e.g., depth-first, breadth-first) based on the business context, do-\nmain knowledge, or technology. \nGlobal Analysis from S4V plays a large role in \nanalysis and in driving iterations through the activities. \nThus it spans architectural analysis, architectural syn-\nthesis, the backlog, and describes how architectural concerns, context, ASRs, and some backlog items \nshould be recorded. The Glob al Analysis artifacts, de-\nsign decision table, and tabl es that record the relation-\nships among views support traceability from require-\nments to the code (at the file and module level). \n \n4.2. Commonalities \nElements the methods have in common  include: \n an emphasis on quality attribute requirements and the \nneed to aid the architect in  focusing on the important \nrequirements that impact  the architecture during \nanalysis, \n design elements organized into multiple views dur-\ning synthesis, \n and an iterative fine-grained evaluation activity (per-\nformed internally after each  synthesis result by the \narchitect) as distinct from  course-grained evaluation \n(architectural reviews perfor med at key stages in the \nsoftware development life-cycle). \n \n4.3. Variations \nThere are also important variations  between the meth-\nods: \n Intent  – ADD was developed as a design approach \nbased on making a series of design decisions (aided \nby the application of arch itectural tactics).  Other \nview-based approaches were initially centered on de-sign artifacts, with their dependencies suggesting a \nsequencing of activities.  4+1 embedded in RUP pro-\nvides full process support. BAPO/CAFCR has been especially developed to support the development of \nproduct families. \nIdeas\nContext, Constraints\nEvaluation results\nArchitectural\nAssets\nArchitecturally \nSignificant \nRequirements\nArchitecture\nBacklog\nArchitectural\nEvaluationArchitectural\nSynthesis\nArchitectural\nAnalysis\nIdeas\nContext, Constraints\nEvaluation results\nArchitectural\nAssets\nArchitecturally \nSignificant \nRequirements\nArchitecture\nBacklog\nArchitectural\nEvaluationArchitectural\nSynthesis\nArchitectural\nAnalysis\nFigure 2: Backlog ",
    "dataExtraction\\data_test\\rootfolder\\universita\\analisiProgettazioneSoftware\\hofmeister2005.pdf#7": "Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . \nPittsburgh, PA, November 6-9, 2005.    Named one of the five best papers of the conference. \n8  Emphasis  – RUP puts a strong emphasis on incre-\nmentally building an evolutionary prototype, forcing \nthe designers to a more experimental style of archi-\ntectural design.  BAPO/CAFCR is putting a strong emphasis on the scoping of the architecture and once \nthe scope of the architectur e using a BAPO analysis \nhas been established, the focus is on ensuring the consistency and the completeness of the CAFCR \nviews.  ADD puts its emphasis on constructing the \narchitecture by applying ar chitectural tactics (design \noptions for the architect that are influential in the \ncontrol of a quality attribute response). \n Driving forces  – ADD is quality attribute scenario \nfocused; experience suggests  that a handful of these \nshape the architecture and all other requirements are then mapped to this structure. This fact is also recog-\nnized in ASC, which ties architecture design to archi-\ntecturally significant requ irements. ASR are broader \nthan quality attributes and may include key func-\ntional requirements. RUP is mostly driven by risk \nmitigation. \n Architectural Scope  – ASC recognizes a hierarchy \nof architectural scopes like product portfolio, product \nfamily, a single product, and a product release. Each architecture design project uses enclosing scope as \nthe context of the design. \n Process Scope  – ADD provides a step for choosing \nthe architectural drivers but its scope is such that it \ndepends on more analysis types of activities from \nother methods, such as global analysis from S4V. However, S4V does no t recommend or advocate \nspecific evaluation techniques. Thus ADD and S4V \ncomplement each other in these respects. \n Description  – Although four specific views are rec-\nommended, the view-related  aspects of S4V are lim-\nited to the second part of arch synthesis. Thus other \nviews could be substituted or added while still using \nall the other parts of S4V. The views used for archi-tecture design in ASC are tied to architectural struc-\ntures that are important for the specific system, \nwhich in turn, are determined by the ASR. Thus ASC offers a process to determine which views should be \nused for architecture design of a specific system.  \nThe views used in ADD are determined by the ASR, though typically there is one for each of the three \nkinds of viewtypes: module, component & connec-\ntor, and allocation [6]. \n5. Related Work \nWe have found four main  approaches to compar-\ning design methods. Some  researchers compare the \nmethods by comparing their results or artifacts. Others \ncompare the activities done wh en following the meth-\nods. Each of these approaches breaks down further into comparisons based on applying the methods to a par-\nticular example application, or comparing the methods \nby classifying the artifacts or activities. \nThe first group compares the artifacts for an ex-\nample application. Bahill et al.  [3] first provide a \n“benchmark” application to  be used for comparing \ndesign methods. Then they provide a qualitative analy-sis of the results of applying eleven design methods to \nthe benchmark application. Sharble & Cohen  [30] use \ncomplexity metrics to compare the class diagrams that result from applying two different OO development \nmethods on a brewery application. \nThe next group also comp ares artifacts, but by \nclassifying them according to  what they can model. \nWieringa  [35] does this for a number of structured and OO specification methods, and Hong et al.  [17] do this \nas part of their comparison of six OO analysis and de-\nsign methods. \nThe third kind of compar ison examines the activi-\nties undertaken when designing particular applications. \nKim & Lerch [20] measure the cognitive activities of designers when using an OO design method versus a \nfunctional decomposition approach. Each participant in \nthis study designed two variants of a Towers of Hanoi application. \nThe approach we take in this paper falls into the \nfourth category, characteriz ing and classifying activi-\nties then comparing them across methods. Song & Os-\nterweil [31] use process modeling techniques to model \nthe activities and, to a lesser extent, the artifacts of the methodologies. Although this approach is similar to \nours, the approaches differ in the development of the \ncomparison model. They decompose the activities of \neach methodology, then classify and compare them. \nThus the classification and comparison is begun with the low-level elements. In contrast we create a general \nmodel where only one level of decomposition is done, \nresulting in the three activities of architectural analysis, synthesis, and evaluation and the corresponding arti-\nfacts. We then determine which elements of each \nmethodology map to these activities and artifacts, and compare to what extent each methodology covers the \nvarious aspects of the activities and artifacts. \nHong et al.  [17] also compare activities by first \ncharacterizing and classifyi ng them. They repeatedly \ndecompose the activities of each method, then create a \n“super-methodology” that is a union of all the finest \ngranularity of the subactiv ities. Each method is com-\npared to the super-methodology. Fichman & Kemerer \n[10] take a similar approach, comparing methods using the eleven analysis activities and ten design activities \nthat are the superset of the activities supported by \nmethods. Both of these approaches decompose the ac-\ntivities to very specific tasks that are tightly related to \nthe artifacts produced by the method (e.g. Identify ",
    "dataExtraction\\data_test\\rootfolder\\universita\\analisiProgettazioneSoftware\\hofmeister2005.pdf#8": "Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . \nPittsburgh, PA, November 6-9, 2005.    Named one of the five best papers of the conference. \n9 classes, Identify inheritance relationships). We did not \nwant our general model to be restricted by the kinds of \nartifacts our five methods produce (e.g. specific views \nused by the method), so we did not decompose activi-ties to the low level. \nDobrica & Niemela’s approach to comparing \nmethods is perhaps closest to ours [9]. However, rather than comparing architectural design methods, they are \ncomparing methods for software architecture evalua-\ntion. Thus the eight methods have a much narrower scope, and in addition a number of them are variants of \neach other. Like us they compare activities and work-\nflow at a fairly coarse granularity, but they add a few \nother dimensions for comparison, such as scope of \nmethod, stakeholders involved, etc. \nIn [23] Kruchten shows that if software engineers \nwere to use the term “design” analogously to the way \nother engineers use it, design would include “some requirements activities and all coding and testing ac-\ntivities.” In a similar spirit, our use of the term “archi-\ntecture design” encompasse s analysis and evaluation \nactivities. Architectural synthesis, the activity that goes \nfrom the problem space to the solution space is what \nothers might equate with the term “architecture de-sign.” In [11] Fowler discusses the importance of \nanalysis, or understanding the problem, in moving from \nthe problem space to the solution space. Roshandel et \nal. [28] reinforce our conviction that evaluation is an \nintegral part of architectur e design. They demonstrate \nthat the kinds of automated evaluation possible depend on the architectural view de scribed (where each of the \ntwo views studied is repres ented in a different ADL). \nFinally we note that our general model and the \nmethods it is derived from are for the architecture de-\nsign of new systems, not for evolving or reconstructing the architecture of existing sy stems. While parts of the \nmodel may be relevant for architecture evolution, when \ncomparing our model to the Symphony architecture reconstruction process [34] we see that the activities \nand artifacts are not related at all. In both cases the \nactivities can be categorized into 1) understand the problem, 2) solve it, and 3) evaluate the solution, but \nthe same can be said of nearly any problem-solving \nactivity. \n6. Conclusion \nIn this paper we have analyzed a number of indus-\ntrially validated architectural design methods. Using a \ngeneral model for architectural design activity, we have \nidentified the common and variable ingredients of these methods. Despite the different vocabulary used for the \nindividual methods they have a lot in common at the \nconceptual level. The basic architecting activities, like \narchitectural analysis, archit ectural synthesis and archi-tectural evaluation are present in all of the investigated \nmethods. The major variation can be observed in the \ndifferent details with respect to guidance and process \nfocus across the various methods. Here the concept of backlog is crucial to relate the various activities.   \nFor our general model many of the concepts we \nuse are already part of the IEEE 1471 [18] vocabulary: views, architectural concer ns, context, stakeholders, \netc. Our more process-oriented model introduces the \nfollowing concepts: backlog, analysis, synthesis and evaluation.  \nAn important part of our model is the inclusion of \nanalysis and evaluation activities as part of architecture \ndesign. While architecture ev aluation has been the fo-\ncus of much prior work, the emphasis is typically on identifying candidate archit ectures or evaluating the \ncompleted architecture. There has been far less work \non incremental or ongoing evaluation, and on architec-\ntural analysis. Our model reveals these to be important \nresearch topics. \nOur model also introduces the concept of a back-\nlog as the driving force behind the workflow. The \nbacklog is a much richer wo rkflow concept than simply \nnoting that iteration is expected. \nWe hope that our increased understanding of the \ncommonalities and differences of the various ap-\nproaches will contribute to future methods that com-bine the strong points of the existing ones and provide \nspecific support for software  architecture design in a \nlarge variety of different contexts. As an example, two of the authors looked at ways of combining ADD and \nRUP 4+1 by modeling ADD as a RUP activity, and \nfound that they complement each other well [19]. ADD \nfills a need within the RUP: it provides a step-by-step \napproach for defining a candidate architecture. The RUP fills a need in the ADD by placing it in a life-\ncycle context; the RUP provides guidance on how to \nproceed from the candidate architecture to an executa-\nble architecture, detailed design and implementation. \n \nReferences \n[1] P. America, H. Obbink, and E. Rommes, \"Multi-View \nVariation Modeling for Scenario Analysis,\" in Proceedings of \nFifth International Workshop on  Product Family Engineering \n(PFE-5) , Sienna, Italy, 2003, Springer-Verlag, pp. 44-65. \n[2] F. Bachmann, L. Bass, and M. Klein, Illuminating the \nFundamental Contributors to Software Architecture Quality , \nCMU/SEI-2002-TR-025, Software Engineering Institute, \nCarnegie Mellon University, 2002. \n[3] A.T. Bahill, M. Alford, K. Bharathan, J.R. Clymer, D.L. \nDean, J. Duke, G. Hill, E.V. La Budde, E.J. Taipale, and A.W. \nWymore, \"The design-methods comparison project,\" IEEE \nTransactions on Systems, Man and Cybernetics , vol. 28, no. \n1, 1998, pp. 80-103. ",
    "dataExtraction\\data_test\\rootfolder\\universita\\analisiProgettazioneSoftware\\hofmeister2005.pdf#9": "Proceedings of the 5th Working IEEE/IFIP Conference on Software Architecture (WICSA5) . \nPittsburgh, PA, November 6-9, 2005.    Named one of the five best papers of the conference. \n10 [4] L. Bass, P. Clements, and R. Kazman, Software Archi-\ntecture in Practice , 2nd ed., Reading, MA: Addison-Wesley, \n2003. \n[5] J. Bosch, Design and Use of Software Architecture: \nAdopting and Evolving a Product-Line Approach , Boston: \nAddison-Wesley, 2000. \n[6] P. Clements, F. Bachmann, L. Bass, D. Garlan, J. Ivers, \nR. Little, R. Nord, and J. Stafford, Documenting Software \nArchitectures: Views and Beyond , Boston: Addison-Wesley, \n2002. \n[7] P. Clements and L. Northrop, Software Product Lines: \nPractice and Patterns , Boston: Addison-Wesley, 2002. \n[8] D.M. Dikel, D. Ka ne, and J.R. Wilson, Software Archi-\ntecture: Organizational Principles and Patterns , Upper Sad-\ndle River, NJ: Prentice-Hall, 2001. \n[9] L. Dobrica and E. Niemela, \"A survey on software ar-\nchitecture analys is methods,\" IEEE Transactions on Software \nEngineering , vol. 28, no. 7, 2002, pp. 638-653. \n[10] R.G. Fichman and C.F. Ke merer, \"Object-oriented and \nconventional analysis a nd design methodologies,\" IEEE \nComputer , vol. 25, no. 10, 1992, pp. 22-39. \n[11] M. Fowler, Analysis Patterns: Re usable Object Models , \nAddison Wesley, 1997. \n[12] J. Garland and R. Anthony, Large-Scale Software Archi-\ntecture: A Practical Guide using UML , New York: John \nWiley & Sons, Inc., 2002. \n[13] J.S. Gero, \"Design prot otypes: A knowledge representa-\ntion scheme for design,\" AI Magazine , vol. 11, no. 4, 1990, \npp. 26-36. \n[14] J.S. Gero and U. Kannengi esser, \"The situated function–\nbehaviour–structure framework,\" Design Studies , vol. 25, no. \n4, 2004, pp. 373-391. \n[15] H. Gomaa, Designing Concurrent, Distributed and \nReal-time Applications with UML , Boston: Addison-Wesley, \n2000. \n[16] C. Hofmeister, R. Nord, and D. Soni, Applied Software \nArchitecture , Boston: Addison-Wesley, 2000. \n[17] S. Hong, G. van den Goor, and S. Brinkkemper, \"A \nformal approach to the comparison of object-oriented analy-\nsis anddesign methodologies,\" in Proceedings of Twenty-\nSixth Hawaii International C onference on System Sciences , \nWailea, HI, USA, 1993, pp. iv 689-698. \n[18] IEEE, IEEE 1471:2000--Recommended practice for \narchitectural description of software intensive systems. , Los \nAlamitos, CA: IEEE, 2000. \n[19] R. Kazman, P. Kruchten, R. Nord, and J. Tomayko, \nIntegrating Software Architectu re-Centric Methods into the \nRational Unified Process , Technical report CMU/SEI-2004-\nTR-011, Software Engineering Institute, 2004. \n[20] J. Kim and F.J. Lerch, \" Towards a model of cognitive \nprocess in logical design: comparing object-oriented and \ntraditional functional decom position software methodolo-\ngies,\" in Proceedings of SIGCHI c onference on human fac-\ntors in computing systems , Monterey, California, United \nStates, 1992, ACM Press, pp. 489-498. [21] P. Kruchten, \"The 4+1 View Model of Architecture,\" \nIEEE Software , vol. 12, no. 6, 1995, pp. 45-50. \n[22] P. Kruchten, The Rational Unified Process: An Intro-\nduction , 3 ed., Boston: Addison-Wesley, 2003. \n[23] P. Kruchten, \"Casting Software Design in the Function-\nBehavior-Structure (FBS) Framework,\" IEEE Software , vol. \n22, no. 2, 2005, pp. 52-58. \n[24] G. Muller, The Gaudi Project website, at \nhttp://www.extra.research.philips.com/natlab/sysarch/index.h\ntml, 2005. \n[25] H. Obbink, P. Kruchten, W. Kozaczynski, R. Hilliard, \nA. Ran, H. Postema, D. Lutz, R. Kazman, W. Tracz, and E. \nKahane, Report on Software Archite cture Review and As-\nsessment (SARA), Version 1.0 , February 2002. \n[26] H. Obbink, J.K. Müller, P. America, R. van Ommering, \nG. Muller, W. van der Sterren,  and J.G. Wijnstra, COPA: A \nComponent-Oriented Platform  Architecting Method for \nFamilies of Software-Intensive Electronic Products. Tutorial \nfor the First Software Produc t Line Conference, Denver, \nColorado, August 2000. 2000,  \n[27] A. Ran, \"ARES Conceptual Framework for Software \nArchitecture,\" in M. Jazayeri, A.  Ran, and F. van der Linden, \ned., Software Architecture for Pr oduct Families Principles \nand Practice , Boston: Addison-Wesley, 2000, pp. 1-29. \n[28] R. Roshandel, B. Schmer l, N. Medvidovic, D. Garlan, \nand D. Zhang, \"Understanding Tradeoffs among Different \nArchitectural Modeling Approaches,\" in Proceedings of 4th \nWorking IEEE/IFIP Conferen ce on Software Architecture \n(WICSA-04) , Oslo, Norway, 2004, pp. 47-56. \n[29] K. Schwaber and M. Beedle, Agile Software Develop-\nment with SCRUM , Upper Saddle River: Prentice-Hall, 2002. \n[30] R.C. Sharble and S.S. Cohen, \"The object-oriented \nbrewery: a comparison of two object-oriented development \nmethods,\" ACM SIGSOFT Software Engineering Notes , vol. \n18, no. 2, 1993, pp. 60-73. \n[31] X. Song and L.J. Osterweil, \"Experience with an ap-\nproach to comparing soft ware design methodologies,\" IEEE \nTransactions on Software Engineering , vol. 20, no. 5, 1994, \npp. 364-384. \n[32] D. Soni, R. Nord, and C. Hofmeister, \"Software Archi-\ntecture in Industrial Applications,\" in Proceedings of 17th \nInternational Conference on Software Engineering , 1995, \nACM Press, pp. 196-207. \n[33] F. van der Linden, J. Bosc h, E. Kamsteries, K. Känsälä, \nand H. Obbink, \"Software Product Family Evaluation,\" in \nProceedings of Software Product Lines, Third International \nConference, SPLC 2004 , Boston, MA, 2004, Springer-\nVerlag, pp. 110-129. \n[34] A. van Deursen, C. Hofm eister, R. Koschke, L. Moonen, \nand C. Riva, \"Symphony: View-Driven Software Architec-\nture Reconstruction,\" in Proceedings of 4th Working \nIEEE/IFIP Conference on Softw are Architecture (WICSA-\n04), Oslo, Norway, 2004, IEEE, pp. 122-134. \n[35] R. Wieringa, \"A Survey of Structured and Object-\nOriented Software Specificat ion Methods and Techniques,\" \nACM Computing Surveys , vol. 30, no. 4, 1998, pp. 459-527. \n ",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#0": "9/28/2021\n102-linguaggio -e-grammatiche -24\n1Linguaggi e Grammatiche\n2Linguaggi e informatica\n•ubiquitari nelle applicazioni\n–linguaggi di programmazione\n•compilatori ed interpreti\n–linguaggi di comunicazione\n•protocolli per il dialogo traentità omologhe\n–linguaggi per intefacce\n•specifica di sequenze di operazioni\n•paradigmatici nella teoria\n–molti importanti problemi teorici sono riconducibili a \nquello dell’appartenenza di una stringa ad un \nlinguaggio1\n2",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#1": "9/28/2021\n202-linguaggio -e-grammatiche -24\n3Tre approcci diversi\n•approccio insiemistico\n–utile per determinare le \nproprietà elementari dei\nlinguaggi\n•approccio generativo\n–grammatiche formali\n•approccio riconoscitivo\n–automi riconoscitori\n4Concetti matematici di base\n•Insiemi\n•Relazioni\n•Funzioni3\n4",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#10": "9/28/2021\n1102-linguaggio -e-grammatiche -24\n21Funzione\ndominiocodominioX1 … Xn-1 Xn\n22Funzione totale\ndominiocodominioX1 … Xn-1 Xn•una funzione f è totale se dom(f) = X1, …, Xn-121\n22",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#11": "9/28/2021\n1202-linguaggio -e-grammatiche -24\n23Funzione suriettiva\ndominiocodominioX1 … Xn-1 Xn•una funzione f è suriettiva se cod(f) = Xn\n24Funzione iniettiva\ndominiocodominioX1 … Xn-1 Xn•una funzione f è iniettiva se |f-1(xn)|=123\n24",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#12": "9/28/2021\n1302-linguaggio -e-grammatiche -24\n25Funzione biiettiva\ndominiocodominioX1 … Xn-1 Xn•una funzione f è biiettiva (biiezione) se è \niniettiva, suriettiva e totale\n26Alfabeto\n•un alfabeto è un insieme finito non vuoto di \nsimboli (caratteri)\n•esempi:\n{‘M’, ‘C’, ‘L’, ‘X’, ‘I’, ‘V’}\n{‘0’, ‘1’}\n{‘0’, ‘1’, ‘2’, ‘3’, ‘4’, ‘5’, ‘6’, ‘7’, ‘8’, ‘9’}\n{‘a’, ‘b’, ‘c’, ‘d’, ‘e’, ‘f’, ‘g’, ‘h’, ‘i’, ‘l’, ‘m’, \n‘n’, ‘o’, ‘p’, ‘q’, ‘r’, ‘s’, ‘t’, ‘u’, ‘v’, ‘z’}25\n26",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#13": "9/28/2021\n1402-linguaggio -e-grammatiche -24\n27Concatenazione\n•dato un alfabeto , definiamo l’operazione binaria \nconcatenazione (denotata con “ ◦”)\na◦b= abcon a, b\n•indichiamo con anla concatenazione di acon se stessa n \nvolte\nesempio: a4 = a◦a◦a◦a= aaaa\n•l’operazione “ ◦” è associativa ma non commutativa\n•dati e “◦” definiamo +come l’insieme delle stringhe \n(parole) di lunghezza finita\n•se a +aggiungiamo la stringa vuota = “” otteniamo *\n28Linguaggio\n•un linguaggio è un sottoinsieme di *\n•*è detto linguaggio universale\n•il linguaggio vuoto non contiene stringhe \n(nota che coincide con l’insieme vuoto )\n–attenzione:\n\n{}27\n28",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#14": "9/28/2021\n1502-linguaggio -e-grammatiche -24\n29Operazioni sui linguaggi\nL1e L2linguaggi\n•unione\nL1L2= {x*| xL1x L2}\nL1= L1\n•intersezione\nL1L2= {x*| xL1x L2}\nL1= \n•complementazione\nL1={x*| xL1}\n30Operazioni sui linguaggi\nL1e L2linguaggi\n•concatenazione o prodotto\nL1◦L2= {x*|\nx1L1x2L2tali che x = x1◦x2}\nL ◦{} = {} ◦L = L\nesempio :\nL1= {an | n1};  L2= {bm | m1};   L1◦L2= {an bm | n,m1}\n•potenza Lhdi un linguaggio L\nL0= {}\nLh= L ◦Lh-1, per h 129\n30",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#15": "9/28/2021\n1602-linguaggio -e-grammatiche -24\n31Operatore di Kleene\n•chiusura riflessiva e transitiva di un linguaggio\nL*= Lh\nL* *={}\nesempio : L={aa} L*={a2n|n0}\n•chiusura transitiva (non riflessiva) di un \nlinguaggio\nL+= Lh\nesempio : L={aa} L+={a2n|n1}\nL*=L+ {}\nh=0\n\nh=1\n32Espressioni regolari\n•è uno strumento per descrivere linguaggi (vedremo nel seguito quali)\n•dato un alfabeto , si definisce espressione regolare ogni stringa r\nr({+, *, (, ), ◦, })+\n•tale che:\n1.r=oppure\n2.roppure\n3.r=(s+t) oppure r=(s◦t) oppure r=s*, con se tespressioni regolari\nespressione linguaggio\n \na {a}\n(s+t) L(s)L(t)\n(s◦t) L(s)◦L(t)\ns*L(s)*semantica31\n32",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#16": "9/28/2021\n1702-linguaggio -e-grammatiche -24\n33Espressioni regolari\ni linguaggi rappresentabili con espressioni regolari sono una \ninteressante sottoclasse stè forma sintetica di s◦tforma sintetica\nespressioni sintetiche si ottengno definendo delle \nprecedenze tra gli operatori: *> ◦> +\nesempio : \n(a+(b(cd))) = a+bcdforma sinteticaesempio : \n(a+b)*rappresenta L=({ a}{b})*\nesempio : \n(a+b)*arappresenta L={x|x {a,b}*“x termina con a”}\n34Esercizio\ndata una mappa stradale, scrivere un’espressione regolare che \ndefinisca tutti i percorsi possibili tra A e B\nadec +adg+fec+fg= \n= ad(ec+g) + f(ec+g) = \n= (ad+f)(ec+g)A Ba d c e\nf g\n33\n34",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#17": "9/28/2021\n1802-linguaggio -e-grammatiche -24\n35Esercizio\ndata una mappa stradale, scrivere un’espressione regolare che \ndefinisca tutti i percorsi possibili tra A e B\nf(ebd)*gA Bd e\nf gb\n36Esercizio\ndata una mappa stradale, scrivere un’espressione regolare che \ndefinisca tutti i percorsi possibili tra A e B\na(deb)*decA Ba d c eb\n35\n36",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#18": "9/28/2021\n1902-linguaggio -e-grammatiche -24\n37Esercizio\ndata una mappa stradale, scrivere un’espressione regolare che \ndefinisca tutti i percorsi possibili tra A e B\na(deb)*dgA Ba d e\ngb\n38Esercizio\ndata una mappa stradale, scrivere un’espressione regolare che \ndefinisca tutti i percorsi possibili tra A e B\nf(edb)*ecA Bd c e\nfb\n37\n38",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#19": "9/28/2021\n2002-linguaggio -e-grammatiche -24\n39Esercizio\ndata una mappa stradale, scrivere un’espressione regolare che \ndefinisca tutti i percorsi possibili tra A e B\nf(ebd)*g+ f(ebd)*ec+ a(deb)*dec+ a(deb)*dg=\n= f(ebd)*(g+ec) + a(deb)*d(g+ec) =\n= (f(ebd)*+a(deb)*d) (g+ec) =\n= (f+ad)(ebd)*(g+ec)A Ba d c e\nf gb\n40Le grammatiche formali\n1940 Post e Markof, riscrittura e derivazione di \nstringhe\n1950 Chomsky, classificazione delle grammatiche \nnell’ambito degli studi sul linguaggio \nnaturale\n1960 Backus Naur Form per descrivere Algol•approccio generativo alla descrizione dei \nlinguaggi\n•metodo di costruzione delle stringhe basato sulla \nriscrittura39\n40",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#2": "9/28/2021\n302-linguaggio -e-grammatiche -24\n5Insiemi\n•consideriamo insiemi finiti e insiemi infiniti\n•|A| = cardinalità dell’insieme (finito ) A\n•alcuni insiemi infiniti di numeri:\nN naturali (contiene zero)\nN+ naturali positivi\nZ interi relativi\nZ+interi positivi\nZ- interi negativiQ razionali relativi\nQ+ razionali positivi\nQ-razionali negativi\nR reali\nR+ reali positivi\nR-reali negativi\n6Sottoinsiemi e insiemi uguali\n•datidue insiemi A e B, se\nx B x A\nallora B è sottoinsieme di A, e siscrive B A\n•ogni insieme è sottoinsieme di se stesso\n•l’insieme vuotoè sottoinsieme di ogni insieme\n•se A e B sono finiti , allora B A |B| |A|\n•A e B insiemi uguali\nA=B (x A x B)\nsipuòscrivere anche\nA=B (A B B A)\n•A è sottoinsieme proprio di B (A B) se \n(A B) (A B)5\n6",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#20": "9/28/2021\n2102-linguaggio -e-grammatiche -24\n41Grammatiche formali\n•grammatiche di Chomsky\n•-produzioni\n•riconoscimento di linguaggi\n42Grammatiche di Chomsky\nunagrammatica è una quadrupla \nG=<VT, VN, P, S>\n•VT è l’alfabeto (finito) di simboli terminali\n•VNè un insieme (finito) di simboli non terminali , o \ncategorie sintattiche , tale che VN= \n•P, detto insieme delle produzioni , è una relazione \nbinaria finita su\n(VTVN)*◦VN◦(VTVN)*(VTVN)*\n•SVNè l’assioma<,>P si indica generalmente con →forma sintetica41\n42",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#21": "9/28/2021\n2202-linguaggio -e-grammatiche -24\n43Esempio\nuna grammatica definisce implicitamente tutte le stringhe \ndi terminali generabili a partire dall’assioma tramite una \nsequenza di riscritture\nesempio:\nG=<{a, b, c}, {S, B, C}, P, S>, con P composto da:\nS → aSS → B B → bB\nB → bCC → cCC → c\ngenera L(G) = { anbmch| n0, m, h1}\n→ 1→ 2 …→ n\nviene anche indicato con\n→ 1| 2|…|nforma sintetica\n44Linguaggio generato\n•derivazione diretta : relazione su\n(V*◦VN◦V*) V*\n<,> appartiene alla relazione (si scrive  ) se\n V*◦VN◦V*ed ,,V*t.c. ==e →P\ne sono dette forme di frase\n•derivazione : chiusura riflessiva e transitiva della \nderivazione diretta, si rappresenta con *\n•il linguaggio generato da G è L(G) = {x|x VT*S*x}\n•due grammatiche G1e G2sono equivalenti se \nL(G1)=L(G2)\ntalvolta al posto di *forma sinteticaVTVNviene talvolta indicato con Vforma sintetica43\n44",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#22": "9/28/2021\n2302-linguaggio -e-grammatiche -24\n45Grammatiche formali\nesempio : generazione di { anbncn|n1}\ngrammatica G=<{ a, b, c},{S,B,C,F,G},P,S>\ncon P composto da\nS → aSBC CB → BC\nSB → bFFB → bF\nFC → cGGC → cG\nG → \nper generare aabbcc\nSaSBC aaSBCBC aaSBBCC\naabFBCC aabb FCC aabbc GC\naabbcc G aabbcc\n46Grammatiche formali\nosservazione : non è detto che una sequenza di derivazioni \nporti ad una stringa del linguaggio\nesempio : \nla grammatica G=<{ a, b, c}, {S, A}, P, S> con\nS → aSc| A\nA → bAc| \ngenera {anbmcn+m|n,m0}\nesempio : \nla grammatica G=<{a, b, c}, {S, A}, P, S> con\nS → Ab\nA → Sa\ngenera 45\n46",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#23": "9/28/2021\n2402-linguaggio -e-grammatiche -24\n47Grammatiche di Chomsky\n•di tipo 0, non limitate\n•di tipo 1, context sensitive, contestuali\n•di tipo 2, context free (CF), non contestuali\n•di tipo 3, lineari destre (RL), regolari\n48Grammatiche di Chomsky\ndi tipo 0, non limitate\n•sono le meno restrittive\n•produzioni del tipo\n→, V*◦VN◦V*, V*\nammettono anche derivazioni che accorciano stringhe\nlinguaggi di tipo 0\nesempio :\nil linguaggio { anbn|n1} è di tipo 0 in quanto generato da\nS → aAB B → b\naA → aaAbaAb→ ab\naAA → aA 47\n48",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#24": "9/28/2021\n2502-linguaggio -e-grammatiche -24\n49Grammatiche di Chomsky\ndi tipo 1, context sensitive, contestuali\n•produzioni che non riducano la lunghezza delle forme di frase\n→, ||≤||, V*◦VN◦V*, V*\nlinguaggi di tipo 1\nesempio :\nil linguaggio { anbncn|n1} è di tipo 0 in quanto generato da\nS → aSBC CB → BC \nSB → bF FB → bF\nFC → cG GC → cG\ncG → c\nma è anche di tipo 1, infatti è generato anche da\nS → aSBc| aBc\ncB → Bc\nbB → bb\naB → ab\n50Generazione di stringhe di anbncn\n(1)S → aSBc | aBc    (2)cB → Bc \n(3)bB → bb (4)aB → ab\nSaSBc\naaSBcBc\naaaSBcBcBc\naaaaBcBcB cBc\naaaaBcB cBBcc \naaaaBcBB cBcc \naaaaB cBBBccc \naaaaBB cBBccc \naaaaBBB cBccc aaaaBBBBcccc\naaaabBBBcccc\naaaab bBBcccc\naaaabb bBcccc\naaaabbbbcccc49\n50",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#25": "9/28/2021\n2602-linguaggio -e-grammatiche -24\n51Grammatiche di Chomsky\ndi tipo 2, context free (CF), non contestuali\n•produzioni del tipo\nA→, AVN, V+\nlinguaggi di tipo 2\nesempio :\nil linguaggio { anbn|n1} è di tipo 0 in quanto generato da\nS → aAb\naA → aaAb\nA → \nma è anche di tipo 2, infatti è generato anche da\nS → aSb| ab\n52Esempi di linguaggi di tipo 2\nlinguaggio delle espressioni aritmetiche con la variabile i (come per \nesempio “i*i+(i*i+(i))*i*i ”, oppure “((i+i)*i) ”). \nL’assioma è E. \nE → E+T | T\nT → T*F | F\nF → i| (E)\ngrammatica delle parentesi ben bilanciate (esempio “ (((())))() ”)\nS → ()| SS | (S)\nda quale sequenza di produzioni è generata “ ()((()())) ” ?\ngrammatica delle stringhe palindrome (esempio “elle”, “ereggere”)51\n52",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#26": "9/28/2021\n2702-linguaggio -e-grammatiche -24\n53Grammatiche di Chomsky\ndi tipo 3, lineari destre (RL), regolari\n•produzioni del tipo\nA→, AVN, (VT◦VN)VT\n•linguaggi di tipo 3\nesempio :\nil linguaggio {anb|n0} è di tipo 3 in quanto generato da\nS → aS\nS → b\nsi possono anche definire grammatiche lineari sinistre (LL) con \nA→, AVN, (VN◦VT)VT\nesempio : il linguaggio { anb|n0} è anche generato da\nS → Tb| b\nT → a| Ta\nteorema : i linguaggi generati da grammatiche LL e RL coincidono\n54Grammatiche di Chomsky\nun linguaggio è strettamente di tipo n se esiste una \ngrammatica di tipo n che lo genera e non esiste una \ngrammatica di tipo m>n che lo genera\nesempio : il linguaggio { anbn|n1} è generato da \nuna grammatica di tipo 2 e non è generato da \nnessuna grammatica di tipo 353\n54",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#27": "9/28/2021\n2802-linguaggio -e-grammatiche -24\n55Grammatiche di Chomsky\ncontenimento tra i linguaggitipo 0\ntipo 1\ntipo 2\ntipo 3\n56Grammatiche di Chomsky\nquadro riassuntivo della classificazione delle \ngrammatiche secondo Chomskytipo produzioni vincoli\ntipo 0\nnon limitate→ V*◦VN◦V*, V*\ntipo 1\ncontestuali→||≤||\nV*◦VN◦V*, V*\ntipo 2\nnon contestualiA→ AVN, V+\ntipo 3\nregolariA→ AVN, (VT◦VN)VT55\n56",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#28": "9/28/2021\n2902-linguaggio -e-grammatiche -24\n57-produzioni\n•con grammatiche di tipo1, 2, 3 non è possibile\ngenerare la stringa vuota\n–per generare occorre una produzione →che\nviene detta-produzione\n–per Chomsky tutti ilinguaggi checontengono -\nproduzioni sono linguaggi di tipo0\n•qual è l’impatto sui corrispondenti linguaggi\ndelle-produzioni nelle grammatiche ?\n–se ammettiamo -produzioni dobbiamo fare \nattenzione , altrimenti rischiamo di snaturare la \ngerarchia di Chomsky\n58-produzioni : variazione della gerarchia\ncon le seguenti modifiche , ilinguaggi generati dale \ndiverse tipologie di grammatiche rimangono inalterati , \nsalvo per la possibilità di generare la stringa vuota\ntipo-produzioni ammesse\n0 tutte (per definizione)\n1 solo sull’assioma quando quest’ultimo non \ncompare mai a destra di una produzione\n2 tutte\n3 tutte57\n58",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#29": "9/28/2021\n3002-linguaggio -e-grammatiche -24\n59Esempi di grammatiche\n•il linguaggio {w ◦w| w (a+b)*}\n•è generato dalla grammatica contestuale\nS → T | \nT → aAT | bBT | A0a| B0bAa→ aA\nAb→ bA\nBa→ aB\nBb→ bBAA0→ A0a\nBA0→ A0b\nAB0→ B0a\nBB0→ B0b(1) (2) (3)\nA0→ a\nB0→ b(4)\n•le (1) generano insieme caratteri della prima e della seconda \nstringa; A0(B0) è l’ultimo carattere della prima stringa\n•le (2) e le (3) separano la prima stringa dalla seconda\n•le (4) chiudono la generazione, se sono applicate troppo presto \nil processo diverge\n60Esempi di grammatiche\n•il linguaggio {(x #)*| x = permutazione di (a,b,c)} (che contiene \nper esempio le stringhe , abc# , acb# , bac#cab# , ecc)\n•ma è generato anche dalla grammatica CF:\nS → E#S |  E → abc | acb | cba | cab | bac | bca\n•ed anche dalla grammatica regolare:\nS → aX | bY | cZ | \nX → bX| cX\nX→ cR\nX→ bRR → #S\nY → aY| cY\nY→ cR\nY→ aRZ → aZ| bZ\nZ→ bR\nZ→ aRS → S’ |  A → a\nB → b\nC → cAB → BA\nAC → CA\nBC → CBS’ → ABC#\nS’ → ABC#S’è generato dalla grammatica contestuale:59\n60",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#3": "9/28/2021\n402-linguaggio -e-grammatiche -24\n7Insieme delle parti\nA\nP(A)l’insieme dei sottoinsiemi di A è detto l’ insieme delle parti di A e si \nindica con P(A) o 2A\nse A è finito e |A| = n allora |P(A)| = 2n\n8Operazioni tra insiemi\n•unione C = A B\n–se A e B sono finiti |C| |A|+|B|\n–commutativa e associativa\n•intersezione C=A B\n–se A e B sono finiti |C| min{|A|, |B|}\n–commutativa e associativa\n–l’intersezione è distributiva rispetto all’unione\n•partizione di A\n–insieme di n sottoinsiemi di A tali che \nA1A2… An= A\ni j AiAj= A B\nA B\nA7\n8",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#30": "9/28/2021\n3102-linguaggio -e-grammatiche -24\n61Forma normale di Backus\n•la BNF è una notazione CF con alcuni accorgimenti \nsintattici che ne aumentano la leggibilità\n<sequenza istruzioni> ::= <istruzione>; \n{<istruzione>;}\n<istruzione if> ::= if ( <condizione> ) \n<istruzione> [else <istruzione>]esempio\npuò essere riscritto:\nQ → I;| I;Q\npuò essere riscritto:\nF → if( C )I else I | if( C )I\n62Riconoscimento dei linguaggi\n•esistono linguaggi a cui non corrisponde alcun algoritmo \ndi decisione\n•i linguaggi di tipo 3 sono riconosciuti da dispositivi con \nmemoria costante in tempo lineare (automi a stati finiti)\n•i linguaggi strettamente di tipo 2 sono riconosciuti da \ndispositivi non deterministici con pila in tempo lineare \n(automi a pila non deterministici)problema : \nstabilire se una stringa appartiene ad un dato linguaggio61\n62",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#31": "9/28/2021\n3202-linguaggio -e-grammatiche -24\n63Riconoscimento dei linguaggi\n•i linguaggi strettamente di tipo 1 sono riconosciuti da \ndispositivi non deterministici con memoria che cresce \nlinearmente con la lunghezza della stringa da esaminare \n(automi non deterministici “linear bounded”)\n•i linguaggi strettamente di tipo 0 sono riconosciuti da \nmacchine di Turing con memoria e tempo illimitati\n–è possibile che non esista un algoritmo di decisione ma un \nprocesso semidecisionale, in cui, se la stringa non fa parte del \nlinguaggio non è detto che la computazione termini\n63",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#4": "9/28/2021\n502-linguaggio -e-grammatiche -24\n9Operazioni tra insiemi\n•complemento di B rispetto ad A\nC = A -B = {x| xA xB}\n•differenza simmetrica o somma disgiunta\nA+B=AB-(A B)\n•prodotto cartesiano C=A B\nC= {x,y| xA yB}\n–insieme di tutte le possibili coppie ordinate\n–il prodotto cartesiano è associativo ma non commutativoA BA B\n10Relazioni\n•siano A1, A2, …, Ann insiemi \n(non necessariamente distinti)\n•una relazione n -aria è un sottoinsieme di \nesempio :\n–la relazione “ minore di ” definita sui naturali è l’insieme \nR NN = N2, dove R= {x,y| xy}A1A2…An\nR A1A2…An9\n10",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#5": "9/28/2021\n602-linguaggio -e-grammatiche -24\n11Relazione d’ordine\n•RA2=A A è una relazione d’ordine se valgono le \nseguenti proprietà:\n1.riflessività\nx,xR\n2.antisimmetria\nx,yRy,xRx=y\n3.transitività\nx,yRy,zRx,zR\nun insieme su cui è definita una relazione d’ordine si dice \nparzialmente ordinato o poset (“partially ordered set”)\nesempio : la relazione “ ” è una relazione d’ordine su N\n12Relazione d’ordine totale\n•una relazione d’ordine R A2è detta totale se\nx,yA2 x,yR y,xR\nesempio :\nla relazione “ ” è una relazione d’ordine totale su N\n1 2 3 4 5 6 7 8 …11\n12",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#6": "9/28/2021\n702-linguaggio -e-grammatiche -24\n13Relazione di equivalenza\n•RA2= AA è una relazione di equivalenza se valgono \nle seguenti proprietà:\n1.riflessività\nx,xR\n2.simmetria\nx,yRy,xR\n3.transitività\nx,yRy,zRx,zR \nesempio : la relazione “= ”è una relazione di equivalenza su R\n14Relazione di equivalenza\n•un insieme A su cui è definita una relazione di \nequivalenza si può partizionare in sottoinsiemi \nmassimali di equivalenza , detti classi di \nequivalenza\n•l’insieme delle classi di equivalenza di A è \ndetto insieme quoziente e si denota A/R \n•un elemento di A/R si denota con [a]\n•il numero di classi di A/R si chiama indice di R13\n14",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#7": "9/28/2021\n802-linguaggio -e-grammatiche -24\n15Esempio di relazione di equivalenza\n•consideriamo la relazione Eksu N\nn k m\nse esistono q, q ′, r (con r<k) tali che\nn=qk+r    e    m=q′k+r\n•Ekè una relazione di equivalenza\n•le sue classi sono le classi resto rispetto alla \ndivisione per k\n16Operazioni su relazioni\n•unione\nR1R2={x,y|x,yR1x,yR2}\n•complementazione\nR={x,y|x,yR}\n•chiusura transitiva\nR+  ={x,y|\ny1, …,ynA, n2, y1=x, yn=y\ntali che\nyi,yi+1R, i=1, …,n -1} \n•chiusura transitiva e riflessiva\nR*=R+{x,x|xA}15\n16",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#8": "9/28/2021\n902-linguaggio -e-grammatiche -24\n17Chiusure di relazioni\n2\n31\n54\n2\n31\n542\n31\n54chiusura transitivachiusura transitiva\ne riflessiva\n18Funzioni\nR X1 … Xn\nè una relazione funzionale se\nx1, …, xn-1X1 … Xn-1\nesiste al più un elemento xn Xntale che\nx1, …, xn-1, xnR\nsi chiama funzione la legge che associa x1, …, xn-1ad xn\nf(x1, …, xn-1) = xn\nf: X1 … Xn-1→Xn\nX1 … Xn-1è il tipodella funzione17\n18",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\020-linguaggi-e-grammatiche-24.pdf#9": "9/28/2021\n1002-linguaggio -e-grammatiche -24\n19Funzioni: dominio codominio\ndom(f) = dominio di f\nsottoinsieme di X1 … Xn-1\ndom(f) = { x1, …, xn-1X1 … Xn-1|\nxn Xnf(x1, …, xn-1) = xn}\ncod(f) = codominio di f\nsottoinsieme di Xn\ncod(f) = { xn Xn|\nx1, …, xn-1X1 … Xn-1\nf(x1, …, xn-1) = xn}\n20Funzioni: fibra\ndato un xn\nf-1(xn) = controimmagine o fibra di xn\nsottoinsieme di X1 … Xn-1\nf-1(xn) = {x1, …, xn-1X1 … Xn-1|\nx1, …, xn-1dom(f)\n\nf(x1, …, xn-1) = xn}19\n20",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\022-espressioni-regolari-07.pdf#0": "1Esercizi di Informatica Teorica\nEspressioni regolari\nqueste esercitazioni sono il frutto del lavoro di molte persone, tra le quali \nLuca Cabibbo, Walter Didi mo e Giuseppe Di Battista",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\022-espressioni-regolari-07.pdf#1": "2\nNotazione sulla difficoltà degli esercizi\nfacile\nnon difficile\ndifficile\nmolto difficile\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\022-espressioni-regolari-07.pdf#10": "11Espressioni regolari\nesercizio 2\nquali linguaggi sono descritti dalle seguenti espressioni regolari? \n2.a 1(0+1)*\n2.b (0+1)*1(0+1)*\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\022-espressioni-regolari-07.pdf#11": "12Espressioni regolari\nesercizio 3\nscrivere le espressioni regolari corrispondenti ai seguenti linguaggi \nsu Σ=  { 0, 1}\n3.a tutte le sequenze alternate (cioè che non contengono né 00\nné11) di 0e 1che iniziano e finiscono per 1o che iniziano \ne finiscono per 0\n3.b tutte le sequenze con un numero pari di 0",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\022-espressioni-regolari-07.pdf#12": "13Espressioni regolari\nesercizio 4\nscrivere l’espressione regolare che descrive il complemento dei \nseguenti linguaggi su Σ=  { 0, 1}\n4.a 1(0+1)*\n4.b 0*+1*\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\022-espressioni-regolari-07.pdf#13": "14Espressioni regolari\nesercizio 5\nsemplificare le seguenti espressioni regolari su Σ={a, b, c}\n5.a (a*b+b*cb)*\n5.b ((a*b*)*(b*a*)*)*\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\022-espressioni-regolari-07.pdf#14": "15Espressioni regolari\nesercizio 6\ndeterminare le espressioni re golari per i seguenti linguaggi\n6.a i numeri naturali in notazione binaria \n6.b i numeri binari su 4 bit \n6.c i numeri naturali in base 10\n6.d i numeri naturali pari \n6.e i numeri pari in base 3\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\022-espressioni-regolari-07.pdf#15": "16Soluzioni\nsoluzione esercizio 3\n3.a (10)*1+(01)*0\n3.b 1*(01*01*)*\nsoluzione esercizio 4\n4.a (0(0+1)*)*\n4.b ((1+0)*0(1+0)*1(1+0)*)+((1+0)*1(1+0)*0(1+0)*) \noppure \n(0+1)*(01+10)(0+1)*",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\022-espressioni-regolari-07.pdf#16": "17Soluzioni\nsoluzione esercizio 6\n6.a i numeri naturali in notazione binaria \n0+1(0+1)*\n6.b i numeri binari su 4 bit \n(0+1) (0+1) (0+1) (0+1)\n6.c i numeri naturali in base 10\n0+(1+2+3+4+5+6+7+8+9)(0+1+2+3+4+\n5+6+7+8+9)*",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\022-espressioni-regolari-07.pdf#17": "18Soluzioni\n6.d i numeri naturali pari \n(0+2+4+6+8)+(1+2+..+9)(0+1+..+9)*(0+2+4+6\n+8)\n6.e i numeri pari in base 3\nsi noti che i numeri pari in base tre sono tutte e \nsole quelle sequenze di cifre in { 0,1,2} con un \nnumero pari di 1\nSia α= (2(0+2)*) e β= (1(0+2)*1(0+2)*)\nIl linguaggio è rappresentabile da:\nαα*β*+  α*ββ*+  0",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\022-espressioni-regolari-07.pdf#2": "3Espressioni regolari\nesercizio 1\ndire se le seguenti affermazioni sono vere o false:\n1.a L(∅*) = ∅\n1.b baa ∈L(a*b*a*b*)\n1.c abcd ∈L( (a (cd)*b)*)\n1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)\n1.e L((ab)*)∩L((cd)*)=  ∅\n1.f L((abb + a)*a) = L(a(bba + a)*)\n1.g L((a+b)*) = L((a*b*)*)\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\022-espressioni-regolari-07.pdf#3": "4Espressioni regolari\nesercizio 1\ndire se le seguenti affermazioni sono vere o false:\n1.a L(∅*) = ∅\n1.b baa ∈L(a*b*a*b*)\n1.c abcd ∈L( (a (cd)*b)*)\n1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)\n1.e L((ab)*)∩L((cd)*)=  ∅\n1.f L((abb + a)*a) = L(a(bba + a)*)\n1.g L((a+b)*) = L((a*b*)*)\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\022-espressioni-regolari-07.pdf#4": "5Espressioni regolari\nesercizio 1\ndire se le seguenti affermazioni sono vere o false:\n1.a L(∅*) = ∅\n1.b baa ∈L(a*b*a*b*)\n1.c abcd ∈L( (a (cd)*b)*)\n1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)\n1.e L((ab)*)∩L((cd)*)=  ∅\n1.f L((abb + a)*a) = L(a(bba + a)*)\n1.g L((a+b)*) = L((a*b*)*)\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\022-espressioni-regolari-07.pdf#5": "6Espressioni regolari\nesercizio 1\ndire se le seguenti affermazioni sono vere o false:\n1.a L(∅*) = ∅\n1.b baa ∈L(a*b*a*b*)\n1.c abcd ∈L( (a (cd)*b)*)\n1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)\n1.e L((ab)*)∩L((cd)*)=  ∅\n1.f L((abb + a)*a) = L(a(bba + a)*)\n1.g L((a+b)*) = L((a*b*)*)\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\022-espressioni-regolari-07.pdf#6": "7Espressioni regolari\nesercizio 1\ndire se le seguenti affermazioni sono vere o false:\n1.a L(∅*) = ∅\n1.b baa ∈L(a*b*a*b*)\n1.c abcd ∈L( (a (cd)*b)*)\n1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)\n1.e L((ab)*)∩L((cd)*)=  ∅\n1.f L((abb + a)*a) = L(a(bba + a)*)\n1.g L((a+b)*) = L((a*b*)*)\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\022-espressioni-regolari-07.pdf#7": "8Espressioni regolari\nesercizio 1\ndire se le seguenti affermazioni sono vere o false:\n1.a L(∅*) = ∅\n1.b baa ∈L(a*b*a*b*)\n1.c abcd ∈L( (a (cd)*b)*)\n1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)\n1.e L((ab)*)∩L((cd)*)=  ∅\n1.f L((abb + a)*a) = L(a(bba + a)*)\n1.g L((a+b)*) = L((a*b*)*)\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\022-espressioni-regolari-07.pdf#8": "9Espressioni regolari\nesercizio 1\ndire se le seguenti affermazioni sono vere o false:\n1.a L(∅*) = ∅\n1.b baa ∈L(a*b*a*b*)\n1.c abcd ∈L( (a (cd)*b)*)\n1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)\n1.e L((ab)*)∩L((cd)*)=  ∅\n1.f L((abb + a)*a) = L(a(bba + a)*)\n1.g L((a+b)*) = L((a*b*)*)\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\022-espressioni-regolari-07.pdf#9": "10Espressioni regolari\nesercizio 1\ndire se le seguenti affermazioni sono vere o false:\n1.a L(∅*) = ∅\n1.b baa ∈L(a*b*a*b*)\n1.c abcd ∈L( (a (cd)*b)*)\n1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)\n1.e L((ab)*)∩L((cd)*)=  ∅\n1.f L((abb + a)*a) = L(a(bba + a)*)\n1.g L((a+b)*) = L((a*b*)*)\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#0": "1Informatica Teorica\nCardinalità transfinite",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#1": "2Pidgeonhole principle\nteorema : \ndati due insiemi A e B tali che\n0 < |B| < |A| < ∞\nnon esiste una funzione f: A →B che sia totale e \niniettiva\ndimostrazione : \nbasata sulla cardinalità di B e per induzione",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#10": "11Numerabilità degli interi relativi\nteorema : \nl’insieme Z degli interi relativi è numerabile\ndimostrazione : \nbiiezione con N\nZ:01-12-23-34-4…\nN : 012345678…",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#11": "12Numerabilità dei numeri pari ( א0 + א0= א0)\nteorema : \nl’insieme P dei numeri pari è numerabile\ndimostrazione : \nbiiezione con N\nP:024681 0 1 2 1 4 1 6 …\nN : 012345678…",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#12": "13Numerabilità: א0×א0 = א0\nteorema : \nl’insieme N2delle coppie di naturali è numerabile\ndimostrazione : \ntecnica usata da Cantor per mostrare la \nnumerabilità di Q\n0    1    2    3    4\n00    1    3    6    10\n12    4    7    11\n25    8    12 \n39   13\n414osservazione : \nper ogni n ∈N, se A è numerabile, \nanche Anè numerabile",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#13": "14Insiemi non numerabili\nper dimostrare la non numerabilità di un insieme si \nusa la tecnica di diagonalizzazione di Cantor\nteorema :  R non è numerabile\ndimostrazione : \n1. dimostriamo che R è equinumeroso a (0,1)\n2. dimostriamo che (0,1) non è numerabile",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#14": "15Insiemi non numerabili\n(0,1) e R sono equinumerosi:  una biiezione è data, per\nesempio, dalla funzione y =\n00.10.20.30.40.50.60.70.80.91\n- 1 0 - 9- 8- 7- 6- 5- 4- 3- 2- 1 0 1 2 3 4 5 6 7 8 9 1 0(2x+1)1\ny\nx",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#15": "16Insiemi non numerabili\n• Supponiamo per assurdo che una enumerazione \ndi (0,1) esista, denotiamo con Φil’iesimo \nelemento di (0,1)\n• consideriamo r ∈(0,1) che ha come i-esima cifra \ndella mantissa (i=1, 2, …) un valore diverso da 0, \nda 9, e dal valore della i-esima cifra di Φi",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#16": "17Insiemi non numerabili\nr, detto elemento diagonale , non fa parte della \nenumerazione, in quanto differisce da ogni elemento della enumerazione in almeno una cifra, e ciò è\nassurdocifre delle mantisse di Φ\ni:\n1234567…\nΦ15104396…\nΦ22410000…\nΦ37985377…\nΦ40046031…\nr 6517 …………",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#17": "Nota sulla scelta delle cifre di r\n• le cifre dell’elemento diagonale rsono scelte in \nmodo da essere diverse da 0 e da 9\n– non si può generare la mantissa 0000… che non \nappartiene all’insieme\n– non si possono generare numeri terminanti con 9 \nperiodico che corrispondono ad una seconda \nrappresentazione di un numero non-periodico\n• 0.999… coincide con 1\n• 0.123999… coincide con 0.124\n18",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#18": "19Insiemi non numerabili\nteorema :  P(N) non è numerabile\ndimostrazione :\nsupponiamo per assurdo che lo sia\nsia P1, P2, …, Pi, … una sua enumerazione\na ciascun Piassociamo la sequenza\nbi0, bi1, bi2, …, dove\nbij=0 se j∉Pi\nbij=1 se j∈Pi",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#19": "20Insiemi non numerabili\ncostruiamo ora l’insieme P(diagonale) con \nsequenza p0, p1, …, pk,… dove\npk= 1 - bkk\nPdifferisce da ogni Pi, in quanto\ni∈P⇔i∉Pi\nosservazione : la non numerabilità di P(N) vale \nanche per l’insieme delle parti di ogni insieme di \ncardinalità א0",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#2": "3Pidgeonhole principle\nma questa \nassegnazione \nnon è totale!",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#20": "21Cardinalità transfinite\nteorema : R è equinumeroso a P(N) ed è quindi \ncontinuo\ndimostrazione : \nè sufficiente mostrare che la proprietà vale per i \nreali in (0,1), vista la biiezione tra R e (0,1)\nuso della rappresentazione binaria della mantissa e \ndel concetto di funzione caratteristica",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#21": "22Cardinalità transfinite – notazione aleph\n• se un insieme finito ha cardinalità n, il suo \ninsieme delle parti ha cardinalità 2n\n• analogamente, se un insieme infinito ha \ncardinalità א0denotiamo con 2א0la \ncardinalità del suo insieme delle parti\n• gli insiemi con cardinalità 2א0sono detti \ncontinui\n• Cantor ha dimostrato che esistono infiniti \ncardinali transfiniti ( א0, 2א0, 22א0, …)",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#22": "Conseguenze della teoria\n• vedremo come considerazioni relative alla cardinalità di \ninsiemi infiniti daranno interessanti spunti sull’idea di \ncalcolabilità\n• per il momento ci limitiamo alla seguente riflessione\n– un linguaggio è un sottoinsieme di Σ*\n• qual è la cardinalità di Σ*?\n• qual è la cardinalità di P( Σ*)?\n• quanti linguaggi esistono?\n– un programma in un linguaggio di programmazione qualsiasi \npuò essere considerato come una sequenza finita di caratteri\n• quanti sono i possibili progr ammi che possiamo scrivere?\n23",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#3": "4Pidgeonhole principle\n… e questa non \nè iniettiva!\na/1\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#4": "5Dimostrazione (pidgeonhole principle)\n• dimostrazione per induzione\n– passo base: |B|=1\n– passo induttivo: |B|>1\n• passo base (|B|=1)\nB={b}, |A|>1, es. A={a1,a2}\nse f è totale, allora f(a1)=b e f(a2)=b\nallora f non è iniettiva perché |f -1(b)|>1",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#5": "6Dimostrazione (pidgeonhole principle)\n• passo induttivo: |B|>1\nsupponiamo sia vero per |B| = n ed |A| ≥n+1\ndimostriamo che è vero per |B| = n+1 e |A| ≥n+2\nipotizziamo per assurdo che esista una funzione totale \niniettiva f e scegliamo un qualunque elemento b di B\nse |f -1(b)|≥2 ⇒contraddizione ⇒teorema dimostrato\nse |f -1(b)|≤1 consideriamo\nA′=A-{f -1(b)}   e    B ′=B-{b} \n|A′| ≥n+1 > |B′| = n\napplichiamo l’ipotesi induttiva ⇒contraddizione ",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#6": "Considerazioni sul pidgeonhole principle \n• il pidgeonhole principle mette in relazione la \nnumerosità degli insiemi con le proprietà delle funzioni che hanno gli insiemi come domini o codomini\n• in particolare se esiste una funzione biettiva \nf: A→B\n– esiste una funzione totale ed iniettiva f: A →B \n– esiste una funzione totale ed iniettiva f-1: B→A \n– per il pidgeonhole principle non può essere |B| > |A| \nné |A| > |B|\n7",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#7": "8Cardinalità di insiemi infiniti\n• due insiemi sono equinumerosi se esiste una \nbiiezione tra essi\n• la relazione di equinumerosità è una relazione \ndi equivalenza\n• possiamo ora dare una definizione rigorosa di \ncardinalità di un insieme finito A:\n|A|=0 se A= ∅\n|A|=n se A è equinumeroso a {0, 1, …, n-1}",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#8": "9Numerabilità\n• insiemi numerabili\n– un insieme è numerabile se è equinumeroso a N\n– un insieme ha cardinalità aleph zero (א0) se è\nequinumeroso a N, cioè se è numerabile\n• insiemi contabili\n– un insieme è contabile se è finito o numerabile\n– sottoinsiemi di insiemi contabili sono contabili",
    "dataExtraction\\data_test\\rootfolder\\universita\\automata\\025-cardinalita-transfinite-06.pdf#9": "10Numerabilità: א0+ k = א0\nteorema : \nper ogni intero k, l’insieme Nkdegli interi \nmaggiori o uguali a k è numerabile\ndimostrazione : \nbiiezione con N\nN : 01234…\nNk:k+0 k+1 k+2 k+3 k+4 …",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#0": "Basi di datiIntroduzione\n01/10/2020Basi di dati I ---12",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#1": "Dati•Da Repubblica di sabato e domenica\n01/10/2020Basi di dati I ---13",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#10": "01/10/2020Basi di dati I ---119Informazioni e dati •I dati, nei sistemi informatici (e non solo), servono a rappresentare le informazioni, rappresentandole in modo essenziale, spartano",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#11": "01/10/2020Basi di dati I ---120Gestione delle informazioni •In tante forme–idee confuse –a parole –disegni,grafici,schemi–numeriecodici•esuvari\"supporti\"–mente umana, carta, dispositivi elettronici",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#12": "Un esempio•Gli Inca usavano un supporto e un sistema di codifica molto particolari: il quipu http://it.wikipedia.org/wiki/Quipu\n01/10/2020Basi di dati I ---121\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#13": "Quipu•insieme di cordicelle annodate, distanziate in modo sistematico tra loro e legate a una corda più grossa e corta che le sorregge.•I quipu erano concepiti per rimanere inalterati. Erano infatti bagnati, fatti seccare e incollati con resine particolari.•I quipu, scoperti in antichi insediamenti in Perù, servivano per i calcoli matematici. I nodi delle corde sono di diversi colori, infatti rappresentavano dei numeri e dalla loro reciproca posizione se ne potevano ricavare le unità, le decine, le centinaia e le migliaia.•Si crede che i quipu venissero utilizzati per calcoli astronomici, fondamentali per la cultura inca, oppure per formule magiche ma anche per descrivere sommariamente avvenimenti storici ed economici.•Al momento attuale i quipu non sono stati ancora pienamente decifrati ed infatti esiste una grande varietà di teorie sul tipo di informazioni che essi in realtà veicolano.•Gli usi principali dei quipu finora conosciuti sono: conteggi per ilcenso, notazione delletasse, conteggio degli articoli comprati o venduti e dati numerici di base. 01/10/2020Basi di dati I ---122",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#14": "01/10/2020Basi di dati I ---123Informazioni e dati (definizioni dal Vocabolario della lingua italiana 1987)informazione: notizia, dato o elemento che consente di avere conoscenza più o meno esatta di fatti, situazioni, modi di essere. dato: ciò che è immediatamente presente alla conoscenza, prima di ogni elaborazione; (in informatica) elementi di informazione costituiti da simboli che debbono essere elaborati",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#15": "Interpretazione dei dati•I dati debbono spesso essere intrepretati•Talvolta senza interpretazione non significano niente (e non servono a niente)\n01/10/2020Basi di dati I ---124",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#16": "01/10/202025Interpretazione dei dati\nBasi di dati I ---1\nTorsdag: giovedì",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#17": "Il mio orologio\n01/10/202027\nBasi di dati I ---1",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#18": "Quando arrivo in ufficio, spesso mi dice …Pedalata fantastica! ma…\n01/10/202028\nBasi di dati I ---1",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#19": "01/10/2020Basi di dati I ---129Gestione delle informazioni•I dati sono spesso il risultato di forme di organizzazione e codifica delle informazioni•Ad esempio, nei servizi anagrafici e nel riferimento a persone–descrizioni discorsive –nome e cognome–estremianagrafici–codicefiscale",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#2": "01/10/2020Basi di dati I ---14\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#20": "01/10/2020Basi di dati I ---131Base di dati (accezionegenerica,metodologica)•Insieme organizzato di dati utilizzati per il supporto allo svolgimento delle attività di un ente (azienda, ufficio, persona)(accezione specifica, metodologicae tecnologica) •Insieme organizzato di dati [...] gestito da un DBMS ",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#21": "01/10/2020Basi di dati I ---134Sistema di gestione di basi di datiDataBase Management System (DBMS)•Sistemache gestisce collezioni di dati: –grandi–persistenti–condivisegarantendo –privatezza–affidabilità–efficienza–efficacia",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#22": "01/10/2020Basi di dati I ---135DBMS•Prodotti software (complessi) disponibili sul mercato; esempi:–DB2–Oracle–SQLServer–MySQL–PostgreSQL",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#23": "01/10/2020Basi di dati I ---139Le basi di dati sono ... condivise•Ad esempio, all'università, le informazioni sui professori interessano–all'ufficio del personale–per l'orario delle lezioni–per la verbalizzazione degli esami  ",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#24": "01/10/2020Basi di dati I ---187Personaggi e interpreti •progettistie realizzatori di DBMS•progettisti della base di datie amministratori della base di dati (DBA) •progettistie programmatori di applicazioni•utenti–utenti finali(terminalisti): eseguono programmi, applicazioni predefinite–utenti casuali: eseguono operazioni non previste a priori, usando linguaggi interattivi ",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#3": "01/10/2020Basi di dati I ---15\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#4": "01/10/2020Basi di dati I ---16\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#5": "01/10/2020Basi di dati I ---17Base di dati•Insieme organizzato di dati utilizzati per il supporto allo svolgimento di attività (di un ente, azienda, ufficio, persona)–Dietro a ciascuno dei ritagli che abbiamo visto ci può essere una base di dati•quotazioni di borsa•pensioni•graduatorie per le supplenze•epidemia•risultati sportivi•bollettino meteo",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#6": "01/10/2020Basi di dati I ---18Base di dati•Insieme organizzato di dati utilizzati per il supporto allo svolgimento di attività (di un ente, azienda, ufficio, persona)•Forse non lo sappiamo ma quasi tutte le nostre attività coinvolgono una base di dati–proviamo a cercarne qualcuna•Carriere degli studenti•Sistema bibliotecario•Campagna pubblicitaria•Lista della spesa (e-commerce)•Dati relativi al traffico•Orari bus, ferrovie, aerei•Bilancio dello stato, dati economico•Dati bancari•Traffico telefonico•Social network (Facebooke simili)",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#7": "01/10/2020Basi di dati I ---110Punti di vista•Metodologico•Tecnologico",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#8": "01/10/2020Basi di dati I ---111Che cos'è l'informatica?•Scienza del trattamento razionale, specialmente per mezzo di macchine automatiche, dell’informazione, considerata come supporto alla conoscenza umana e alla comunicazione(Accad. di Francia) Due anime:–metodologica–tecnologica",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.1-Intro.pdf#9": "01/10/2020Basi di dati I ---112Contenuti•modelli per l'organizzazione dei dati •linguaggi per l'utilizzo dei dati•sistemi per la gestione dei dati•metodologie di progettazione di basi di datiIl corso",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#0": "Basi di dati2IL MODELLO RELAZIONALE05/10/2020Basi di dati I ---22",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#1": "Organizzazione dei dati•Come sono organizzati i dati in una base di dati?\n05/10/2020Basi di dati I ---24",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#10": "05/10/2020Basi di dati I ---218Struttura non posizionale•A ciascun dominio si associa un nome: attributo(o colonna)32001021ManchesterArsenalManchesterChelseaArsenalLiverpoolChelseaLiverpoolRetiCasaRetiFuoriCasaFuori",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#11": "05/10/2020Basi di dati I ---221Il modello è basato su valori•I riferimenti fra dati in relazioni diverse sono rappresentati per mezzo di valori dei domini che compaiono nelle ennuple",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#12": "05/10/2020Basi di dati I ---222MatricolaCognomeNomeData di nascita6554RossiMario05/12/19788765NeriPaolo03/11/19763456RossiMaria01/02/19789283VerdiLuisa12/11/1979studenti\nCodiceTitoloDocente01AnalisiMario02ChimicaBruni04ChimicaVerdicorsiStudenteVotoCorso345630043456240292832801esami65542601",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#13": "05/10/2020Basi di dati I ---225MatricolaCognomeNomeData di nascita6554RossiMario05/12/19788765NeriPaolo03/11/19763456RossiMaria01/02/19789283VerdiLuisa12/11/1979studenti\nCodiceTitoloDocente01AnalisiMario02ChimicaBruni04ChimicaVerdicorsiStudenteVotoCorso302428esami26",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#14": "05/10/2020Basi di dati I ---227OrarioInsegnamentoDocenteAulaOraAnalisi matem. ILuigi NeriN18:00Basi di datiPiero RossiN210:00ChimicaNicola MoriN110:00Fisica IMario BruniN112:00Fisica IIMario BruniN310:00Sistemi inform.Piero RossiN38:00Basi di dati: schema e istanza",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#15": "05/10/2020Basi di dati I ---228Lo schemadella relazioneOrarioInsegnamentoDocenteAulaOraBasi di dati: schema e istanza",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#16": "05/10/2020Basi di dati I ---229L'istanzadella relazioneLo schemadella base di datiOrarioInsegnamentoDocenteAulaOraAnalisi matem. ILuigi NeriN18:00Basi di datiPiero RossiN210:00ChimicaNicola MoriN110:00Fisica IMario BruniN112:00Fisica IIMario BruniN310:00Sistemi inform.Piero RossiN38:00Basi di dati: schema e istanza",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#17": "05/10/2020Basi di dati I ---230Definizioni e notazioni (alla lavagna)•Schema di relazione•Ennupla su uno schema di relazione •Valore di una ennupla su un attributo•Relazione (“istanza di relazione“)•Schema di base di dati•(Istanza di) base di dati",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#18": "05/10/2020Basi di dati I ---231\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#19": "05/10/2020Basi di dati I ---232\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#2": "05/10/2020Basi di dati I ---25Modello dei dati•Insieme di costrutti secondo cui i dati di interesse sono organizzati e utilizzati•Esempio: •il modello relazionaleprevede il costrutto relazione(o tabella), che permette di definire insiemi di record (righe) omogenei ",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#20": "•Usiamot[A]per indiacreilvaloredella ennuplat sull'attributoA05/10/2020Basi di dati I ---235",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#21": "Altra osservazione•La stuttura è rigida e non sempre corrisponde ai dati:•\"informazione incompleta\"\n05/10/2020Basi di dati I ---238",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#22": "05/10/2020Basi di dati I ---239Informazione incompletaFranklinRooseveltDelanoNomeCognomeSecondoNomeWinstonChurchillCharlesDe GaulleJosipStalin",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#23": "05/10/2020Basi di dati I ---240Informazione incompletaMario34RomaNomeEtàUfficioLucaMilanoPiero42Firenze",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#24": "05/10/2020Basi di dati I ---241Informazione incompleta: soluzioni?•Potremmo pensare:•stringa nulla•\"0\"•\"99\"•Si può fare?•Meglio di no!!",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#25": "05/10/2020Basi di dati I ---242Informazione incompleta nel modello relazionale •Tecnicasemplice maefficace:•valorenullo(unvalorediversodaivaloridel dominio, indicatoquiconNULL)•t[A], per ogniattributoA,  è•unvaloredel dominiodom(A)  •oppureilvalorenulloNULL•Commenti•tecnicasemplice•attenzioneai troppivalorinulli",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#26": "05/10/2020Basi di dati I ---245MatricolaCognomeNomeData di nascita6554RossiMario05/12/1978NULLRossiMaria01/02/19789283VerdiLuisa12/11/1979studenti\nCodiceTitoloDocente01AnalisiMario02NULLNULL04ChimicaVerdicorsiStudenteVotoCorsoNULL30NULLNULL240292832801esamiTroppi valori nulli",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#27": "Un'anticipazione parziale•Riassumendo, quanto visto finora:•La definizione dello schema di una relazione in SQL (rivedremo più avanti)\n05/10/2020Basi di dati I ---246\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#28": "Seconda parte•Abbiamo visto la struttura•Per modellare bene non basta\n05/10/2020Basi di dati I ---247",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#29": "05/10/2020Basi di dati I ---248Vincoli di integrità•Non sempre le nostre basi di dati sono \"corrette\" ..",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#3": "05/10/2020Basi di dati I ---26I modelli logici dei dati •“Tradizionali“•... relazionale •Altri più recenti: •a oggetti, XML, \"NoSQL\" ",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#30": "05/10/2020Basi di dati I ---249Una base di dati \"scorretta\"StudenteVotoLodeCorso320127654527654530e lode0278764327e lode037394302404EsamiMatricola276545787643787643CognomeRossiNeriBianchiNomeMarioPieroLucaStudenti78764378764327e lode",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#4": "05/10/2020Basi di dati I ---28MatricolaCognomeNomeData di nascita6554RossiMario05/12/19788765NeriPaolo03/11/19763456RossiMaria01/02/19789283VerdiLuisa12/11/1979studenti\nCodiceTitoloDocente01AnalisiMario02ChimicaBruni04ChimicaVerdicorsiStudenteVotoCorso345630043456240292832801esami65542601",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#5": "05/10/2020Basi di dati I ---210Modello \"relazionale\"•relazione matematica ... (alla lavagna)",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#6": "05/10/2020Basi di dati I ---211",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#7": "05/10/2020Basi di dati I ---212",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#8": "Due osservazioni importanti•Struttura non posizionale•Modello basato su valori\n05/10/2020Basi di dati I ---216",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 1.pdf#9": "05/10/2020Basi di dati I ---217Struttura \"posizionale\" o \"non posizionale\"32001021ManchesterArsenalManchesterChelseaArsenalLiverpoolChelseaLiverpoolPartiteÍstring ×string×int×int",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#0": "Seconda parte•Abbiamo visto la struttura•Per modellare bene non basta\n08/10/2020Basi di dati I ---247",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#1": "08/10/2020Basi di dati I ---248Vincoli di integrità•Non sempre le nostre basi di dati sono \"corrette\" ..",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#10": "Verifica dei vincoli•Due prospettive•prima i vincoli, poi i dati•definiamo lo schema, con i vincoli•modifichiamo i dati (inserimenti, eliminazioni, …), il sistema controlla i vincoli•se un vincolo è violato, la modifica viene rifiutata(vediamosulsistema PostgresSQL, èimportante il concetto non i dettagli del linguaggio)08/10/2020Basi di dati I ---258",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#11": "08/10/2020Basi di dati I ---260\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#12": "08/10/2020Basi di dati I ---261\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#13": "Verifica dei vincoli•Due prospettive•prima i vincoli, poi i dati•definiamo lo schema, con i vincoli•modifichiamo i dati (inserimenti, eliminazioni, …), il sistema controlla i vincoli•se un vincolo è violato, la modifica viene rifiutata\n08/10/2020Basi di dati I ---262",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#14": "Verifica dei vincoli•Due prospettive•prima i vincoli, poi i dati•definiamo lo schema, con i vincoli•modifichiamo i dati (inserimenti, eliminazioni, …), il sistema controlla i vincoli•se un vincolo è violato, la modifica viene rifiutata•prima i dati, poi i vincoli•su una base di dati esistente•aggiungiamo un vincolo, il sistema controlla il soddisfacimento•se è violato, non permette di aggiungerlo08/10/2020Basi di dati I ---263",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#15": "08/10/2020Basi di dati I ---265",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#16": "08/10/2020Basi di dati I ---266\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#17": "08/10/2020Basi di dati I ---267\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#18": "08/10/2020Basi di dati I ---268Vincolo di ennupla •Esprime condizioni sui valori di ciascuna ennupla, indipendentemente dalle altre ennuple•Il vincolo di dominio è un caso particolare ",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#19": "08/10/2020Basi di dati I ---269Sintassi ed esempi•La sintassi: comeilvincolodi dominio, main generalesupiù attributi•combinazionebooleana•di condizionisemplicicheconfrontanounattributoconunacostanteNOT ((Voto<> 30) AND (Lode = \"elode\"))",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#2": "08/10/2020Basi di dati I ---249Una base di dati \"scorretta\"StudenteVotoLodeCorso320127654527654530e lode0278764327e lode037394302404EsamiMatricola276545787643787643CognomeRossiNeriBianchiNomeMarioPieroLucaStudenti78764378764327e lode",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#20": "08/10/2020Basi di dati I ---271Vincoli di ennupla, altro esempioImpiegatoRossiNeriBruniStipendiLordo55.00045.00047.000Netto42.50035.00036.000Ritenute12.50010.00011.000Ritenute>= 0 AND (Lordo= (Ritenute+ Netto))",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#21": "08/10/2020Basi di dati I ---272Vincoli di ennupla, violazioneImpiegatoRossiNeriBruniStipendiLordo55.00045.00050.000Netto42.50035.00036.000Ritenute12.50010.00011.000Lordo = (Ritenute + Netto)",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#22": "08/10/2020Basi di dati I ---273Identificazione delle ennuple\n•non ci sonodue ennupleconlostessovaloresull’attributoMatricola•Matricolaèla chiavedella relazioneMatricola276557876365432NomeMarioPieroMario8765467653MarioCognomeRossiNeriNeriRossiRossiPieroCorsoIng InfIng MeccIng InfIng InfIng MeccNascita5/12/9810/7/993/11/963/11/965/12/98",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#23": "Vincolo di chiave•Se un insieme K è chiave, •imponiamo che non ci siano due ennuple uguali fra loro su K\n08/10/2020Basi di dati I ---274",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#24": "08/10/2020Basi di dati I ---275Più chiaviMatricola276557876365432NomeMarioPieroMario8765467653MarioCognomeRossiNeriNeriRossiRossiPieroCorsoIng InfIngMeccIng InfIng InfIng MeccCFRSSMRI98...NRIPTR95...NRIMRI99...RSSMRI99...RSSPRI99...",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#25": "08/10/2020Basi di dati I ---276MatricolaCognomeNomeData di nascita6554RossiMario05/12/19988765NeriPaolo03/11/19963456RossiMaria01/02/19989283VerdiLuisa12/11/1999studenti\nCodiceTitoloDocente01AnalisiMario02ChimicaBruni04ChimicaVerdicorsiStudenteVotoCorso345630043456300292832601esami65542601",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#26": "08/10/2020Basi di dati I ---277Chiave su più attributiStudenteVotoCorso345630043456300292832601esami65542601",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#27": "\"Minimalità\" delle chiavi•Una chiave di una relazione  è un insieme di attributi che, insieme, permettono di identificare le ennuple e che è minimale rispetto a questa proprietà•Anche Matricola e Cognome identificano le ennuple della relazione studenti, ma non formano una chiave, perché l'insieme non è minimale:•Matricola identifica ed è sottoinsieme di Matricola, Cognome•Matricola, Cognome formano una superchiave•Una chiave è una superchiaveminimale 08/10/2020Basi di dati I ---278",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#28": "08/10/2020Basi di dati I ---287Esistenza delle chiavi•Ognirelazioneèuninsieme:•non puòconteneredue ennupleuguali•Ognirelazioneha comesuperchiavel’insiemedegliattributisucuièdefinita•equindiha (almeno) unachiave",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#29": "08/10/2020Basi di dati I ---289Chiavi e valori nulli•In presenza di valori nulli, i valori della chiave non permettono•di identificare le ennuple •di realizzare facilmente i riferimenti da altre relazioni",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#3": "08/10/2020Basi di dati I ---250Vincolo di integrità•Proprietàchedeveesseresoddisfattadalleistanzecherappresentanoinformazionicorretteper l’applicazione•Unvincoloèunafunzionebooleana(unpredicato):•associaad ogniistanzailvaloreveroo falso",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#30": "08/10/2020Basi di dati I ---290•La presenzadi valorinulli, soprattuttonellechiavi, deveesserelimitatao almenocontrollataMatricolaNULL7876365432NomeMarioNULLMarioNULL67653MarioCognomeRossiNeriNeriRossiRossiPieroCorsoIng InfIng MeccIng InfIng InfIng MeccCFRSSMRI93...NRIPTR95...NRIMRI99...NULLRSSPRI98...",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#31": "08/10/2020Basi di dati I ---292Chiave primaria•Chiave su cui non sono ammessi nulli•Notazione: sottolineaturaMatricola276557876365432NomeMarioNULLMario8765467653MarioCognomeRossiNeriNeriRossiRossiPieroCorsoIng InfIng MeccIng InfIng InfIng MeccCFRSSMRI93...NRIPTR95...NRIMRI99...NULLRSSPRI98...",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#32": "08/10/2020Basi di dati I ---293MatricolaCognomeNomeData di nascita6554RossiMario05/12/19988765NeriPaolo03/11/19963456RossiMaria01/02/19989283VerdiLuisa12/11/1999studenti\nCodiceTitoloDocente01AnalisiMario02ChimicaBruni04ChimicaVerdicorsiStudenteVotoCorso345630043456300292832601esami65542601",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#33": "Integrità referenziale\n08/10/2020Basi di dati I ---295Matricola398732959345VigiliCognomeRossiNeriNeriNomeLucaPieroMarioMoriGino7543InfrazioniCodice34321733216452153524Data1/2/20184/3/20205/4/20205/2/2020Vigile3987329532959345StatoNumeroIFEEAA954KKEE395BBBB395BBBB395BB329532953987398793453987\n93459345329532953295",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#34": "08/10/2020Basi di dati I ---296AutoStatoNumeroIFEAA954KKEE395BBBB395BBCognomeRossiRossiNeriNomeMarioMarioLucaInfrazioniCodice34321733216452153524Data1/2/20184/3/20205/4/20205/2/2020Vigile3987329532959345StatoNumeroIFEEAA954KKEE395BBBB395BBBB395BBIFEEAA954KKEE395BBBB395BBBB395BBIFEAA954KKEE395BBBB395BB",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#35": "08/10/2020Basi di dati I ---297•Vincolo di integrità referenziale(“foreignkey”) fra X  di R1 e  R2•impone ai valori su  X  in  R1di comparire come valori della chiave primaria di  R2Vincolo di integrità referenziale",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#36": "08/10/2020Basi di dati I ---298•vincoli di integrità referenziale fra: •l’attributo Vigile della relazione INFRAZIONI e la relazione VIGILI •gli attributi Stato e Numero di INFRAZIONI e la relazione AUTO ",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#37": "08/10/2020Basi di dati I ---299InfrazioniCodice34321733216452153524Data1/2/20184/3/20205/4/20205/2/2020Vigile3987329532959345StatoNumeroIFEEAA954KKEE395BBBB395BBBB395BBAutoStatoNumeroIFEEE395BBFF342BBBB395BBCognomeRossiRossiNeriNomeMarioMarioLucaFEE395BBFEE395BBViolazione di vincolo di integrità referenziale",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#38": "08/10/2020Basi di dati I ---2101Integrità referenziale e valori nulliImpiegatiMatricola343216452153524CognomeRossiNeriVerdiProgettoIDEAXYZNULLProgettiCodiceIDEABOHXYZInizio01/201907/202009/2019Durata362424Costo20012015073032BianchiIDEA",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#39": "08/10/2020Basi di dati I ---2105AutoStatoNumeroFIEAA954AKEE395ABBB395ABCognomeRossiRossiNeriNomeMarioMarioLucaIncidentiCodice3432164521Data1/2/195/4/20StatoBNumeroBFIAA954AKEE395ABStatoANumeroAIEEE954ABBB395ABVincoli multipli su più attributi",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#4": "08/10/2020Basi di dati I ---252Vincoli di integrità, nota•solo alcunitipidi vincolisono\"supportati\" daiDBMS:•...ilDBMS ne impediscela violazione,•per i vincoli\"non supportati\", la responsabilitàdella verificaèdell'utenteo del programmatore•Vediamoi vincolisuunDBMS (oggilomostroio, prossimamentedovreteusarlo)",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#40": "08/10/2020Basi di dati I ---2106Vincoli multipli su più attributi, 2•vincoli di integrità referenziale fra: •gli attributi StatoA e NumeroA di INCIDENTI e la relazione AUTO •gli attributi StatoB e NumeroB di INCIDENTI e la relazione AUTO •L'ordine degli attributi è significativo",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#41": "Esempi\n08/10/2020Basi di dati I ---2107",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#42": "08/10/2020Basi di dati I ---2108Relazioni su singoli attributiMatricolaCognomeNomeData di nascita6554RossiMario05/12/19988765NeriPaolo03/11/19963456RossiMaria01/02/19989283VerdiLuisa12/11/1999studenti\nMatricola65543456studenti lavoratori",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#43": "Strutture nidificate\n08/10/2020Basi di dati I ---2109",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#44": "08/10/2020Basi di dati I ---2110Strutture nidificateDa FilippoVia Roma 2, RomaRicevuta Fiscale1235del 12/10/20023Coperti3,002Bistecche18,003Primi12,002Antipasti6,20Totale39,20Da FilippoVia Roma 2, RomaRicevuta Fiscale1240del 13/10/20022Coperti2,002Orate20,002Primi8,002Antipasti7,002Caffè2,00Totale39,00",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#45": "Esercizio•Rappresentare in una base di dati relazionale i dati di interesse delle ricevute fiscali\n08/10/2020Basi di dati I ---2111",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#46": "08/10/2020Basi di dati I ---2112Strutture nidificateDa FilippoVia Roma 2, RomaRicevuta Fiscale1235del 12/10/20193Coperti3,002Bistecche18,003Primi12,002Antipasti6,20Totale39,20Da FilippoVia Roma 2, RomaRicevuta Fiscale1240del 13/10/20192Coperti2,002Orate20,002Primi8,002Antipasti7,002Caffè2,00Totale39,00",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#47": "08/10/2020Basi di dati I ---2113Strutture nidificateDa FilippoVia Roma 2, RomaRicevuta Fiscale1235del 12/10/20193Coperti3,002Bistecche18,003Primi12,002Antipasti6,20Totale39,20Da FilippoVia Roma 2, RomaRicevuta Fiscale1240del 13/10/20192Coperti2,002Orate20,002Primi8,002Antipasti7,002Caffè2,00Totale39,00",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#48": "\"Soluzione\"•alla lavagna\n08/10/2020Basi di dati I ---2114",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#49": "08/10/2020Basi di dati I ---2117Relazioni che rappresentano  strutture nidificate12353Coperti3,002Bistecche18,003Primi12,002Antipasti6,2039,2012/10/2019NumeroTotaleData124039,0013/10/2019RicevuteDettaglioQtàDescrizioneImporto1235Numero12401235123512352Coperti2,00…………",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#5": "Verifica dei vincoli•Vediamo fra poco con un esempio sul tipo più semplice di vincoli\n08/10/2020Basi di dati I ---253",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#50": "08/10/2020Basi di dati I ---2118Strutture nidificate, riflessione•Abbiamorappresentatoveramentetutti gliaspettidelle ricevute? •Dipendeda checosaci interessa! •l'ordinedelle righee' rilevante?•lineeripetute•al bar ... \"ditemile coseinsieme…\"",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#51": "\"Soluzione\"•alla lavagna\n08/10/2020Basi di dati I ---2119",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#6": "08/10/2020Basi di dati I ---254StudenteVotoLodeCorso320127654527654530e lode0278764327e lode037394302404EsamiMatricola276545787643787643CognomeRossiNeriBianchiNomeMarioPieroLucaStudenti78764378764327e lode",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#7": "08/10/2020Basi di dati I ---255Tipi di vincoli•vincoliintrarelazionali•vincolisuvalori(o di dominio) •vincolidi ennupla•Vincolidi chiave•vincoliinterrelazionali",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#8": "Vincolo di dominio•Pone condizioni sui valori ammissibili di un singolo attributo, ad esempio•il voto ha come tipo \"intero\" •ma deve essere compreso fra 18 e 30 (un sottoinsieme del dominio)\n08/10/2020Basi di dati I ---256",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.2-Modello Relazionale 2.pdf#9": "08/10/2020Basi di dati I ---257Vincolodi dominio, in concreto•Unapossibilesintassi: •combinazionebooleana(AND, OR eNOT)•di condizionisemplicicheconfrontanounattributoconunacostante(Voto³18) AND (Voto£30)",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#0": "ALGEBRA RELAZIONALE\n12/10/2020Atzeni --Basi di dati I --3 2",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#1": "Linguaggi per basi di dati•operazioni sullo schema•DDL•operazioni sui dati•DML•interrogazione (\"query\")•aggiornamento\n12/10/2020Atzeni --Basi di dati I --3 3",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#10": "Ridenominazione•operatore su una relazione•\"modifica lo schema\" lasciando inalterata l'istanza dell'operando•simbolo REN oppure RHO oppure ρ•sintassi ed esempio alla lavagna12/10/2020Atzeni --Basi di dati I --3 16",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#11": "RENSede, Retribuzione ¬Ufficio, Stipendio(Impiegati) REN Sede, Retribuzione ¬Fabbrica, Salario(Operai) ÈImpiegati CognomeNeriRossiUfficioMilanoRomaStipendio6455Operai CognomeVerdiBruniFabbricaLatinaMonzaSalario5545CognomeRetribuzioneSedeNeriRossi6455MilanoRomaVerdiBruniLatinaMonza554512/10/2020Atzeni --Basi di dati I --3 20",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#12": "Selezione•\"seleziona\" da una relazione le ennuple che soddisfano una condizione\n12/10/2020Atzeni --Basi di dati I --3 22",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#13": "Impiegati CognomeFilialeStipendioMatricolaNeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553•impiegati che •guadagnano più di 50 •guadagnano più di 50 e lavorano a Milano•hanno lo stesso nome della filiale presso cui lavorano12/10/2020Atzeni --Basi di dati I --3 23",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#14": "Selezione, sintassi e semantica\n•\n12/10/2020Atzeni --Basi di dati I --3 24",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#15": "CognomeFilialeStipendioMatricolaNeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553Impiegati MilanoMilano449553•impiegati che guadagnano più di 50 \nSELStipendio > 50(Impiegati) NeriNapoli645698SELStipendio > 50(Impiegati)\n12/10/2020Atzeni --Basi di dati I --3 26",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#16": "Impiegati CognomeFilialeStipendioMatricolaNeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553•impiegati che guadagnano più di 50 e lavorano a Milano\nSELStipendio > 50 AND Filiale = 'Milano'(Impiegati) RossiRoma557309NeriNapoli645698MilanoMilano449553NeriMilano645998SELStipendio > 50 AND Filiale = 'Milano'(Impiegati) \n12/10/2020Atzeni --Basi di dati I --3 27",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#17": "Impiegati CognomeFilialeStipendioMatricolaNeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553•impiegati che hanno lo stesso nome della filiale presso cui lavorano\nSEL Cognome= Filiale(Impiegati) NeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553SEL Cognome= Filiale(Impiegati) \n12/10/2020Atzeni --Basi di dati I --3 28",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#18": "Selezione e proiezione•operatori \"ortogonali\"•alla lavagna\n12/10/2020Atzeni --Basi di dati I --3 29",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#19": "Proiezione•decompone \"verticalmente\":•\"tutte\" le ennuple, alcuni attributi\n12/10/2020Atzeni --Basi di dati I --3 33",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#2": "Linguaggi di interrogazioneper basi di dati relazionali•Dichiarativi (\"che cosa\")•specificano le proprietà del risultato•Procedurali(\"come\") •costruiscono il risultato\n12/10/2020Atzeni --Basi di dati I --3 4",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#20": "Impiegati CognomeFilialeStipendioMatricolaNeriMilano645998NeriNapoli557309RossiRoma645698RossiRoma449553•per tutti gli impiegati:•matricola e cognome•cognome e filiale\n12/10/2020Atzeni --Basi di dati I --3 34",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#21": "Proiezione, sintassi e semantica•alla lavagna\n12/10/2020Atzeni --Basi di dati I --3 35",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#22": "CognomeFilialeStipendioMatricolaNeriMilano645998NeriNapoli557309RossiRoma645698RossiRoma449553•matricola e cognome  di tutti gli impiegati\nPROJ Matricola, Cognome(Impiegati)12/10/2020Atzeni --Basi di dati I --3 37",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#23": "CognomeFilialeStipendioMatricolaNeriMilano645998NeriNapoli557309RossiRoma645698RossiRoma449553•cognome e filiale  di tutti gli impiegati\nPROJ Cognome, Filiale(Impiegati)12/10/2020Atzeni --Basi di dati I --3 38",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#24": "Cardinalità delle proiezioni•Una proiezione•contiene al più tante ennuple quante l'operando•può contenerne di meno•Quando possiamo essere sicuri che non siano di meno?\n12/10/2020Atzeni --Basi di dati I --3 39",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#3": "Linguaggi di interrogazione•Algebra relazionale: procedurale•Calcolo relazionale: dichiarativo (teorico)•SQL(Structured Query Language): parzialmente dichiarativo (reale)•QBE(Query by Example): dichiarativo (reale)12/10/2020Atzeni --Basi di dati I --3 5",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#4": "Algebra relazionale•Insieme di operatori•su relazioni, producono relazioni•quindi possono essere composti\n12/10/2020Atzeni --Basi di dati I --3 6",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#5": "Un servizio online per esercitazioni in algebra relazionale•RelaX•http://dbis-uibk.github.io/relax/calc•Verrà proposto un “homework” il cui svolgimento sarà necessario per partecipare alla prova parziale•Oggi lo usiamo per vedere i risultati12/10/2020Atzeni --Basi di dati I --3 7",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#6": "Operatori dell'algebra relazionale•unione, intersezione, differenza•ridenominazione•selezione•proiezione•aggregazione•join (join naturale, prodotto cartesiano, theta-join)12/10/2020Atzeni --Basi di dati I --3 8",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#7": "Operatori insiemistici•le relazioni sono insiemi•i risultati debbono essere relazioni•quindi:•è possibile applicare unione, intersezione, differenzasolo a relazioni definite sugli stessi attributi•esempi alla lavagna e su Relax12/10/2020Atzeni --Basi di dati I --3 9",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#8": "LaureatiMatricola74329824Età5445NomeNeriVerdi727442RossiSpecialistiMatricola743298249297Età544533NomeNeriVerdiNeriBase di dati per l'esempio•La carichiamo in Relaxhttp://dbis-uibk.github.io/relax/calc/gist/1a9dc6cd0f3478388fc177dfc9b5a31412/10/2020Atzeni --Basi di dati I --3 10",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.5-Algebra Relazionale.pdf#9": "Paternità PadreFiglioAdamoCainoAbramoIsaccoAdamoAbeleMaternità MadreFiglioEvaSetSaraIsaccoEvaAbelePaternità  ÈMaternità?? Un'unione sensata ma impossibile\n12/10/2020Atzeni --Basi di dati I --3 14",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#0": "Operatori dell'algebra relazionale•unione, intersezione, differenza•ridenominazione•selezione•proiezione•aggregazione•join (join naturale, prodotto cartesiano, theta-join)12/10/2020Atzeni --Basi di dati I --3 8",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#1": "Operatori insiemistici•le relazioni sono insiemi•i risultati debbono essere relazioni•quindi:•è possibile applicare unione, intersezione, differenzasolo a relazioni definite sugli stessi attributi•esempi alla lavagna e su Relax12/10/2020Atzeni --Basi di dati I --3 9",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#10": "Impiegati CognomeFilialeStipendioMatricolaNeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553•impiegati che guadagnano più di 50 e lavorano a Milano\nSELStipendio > 50 AND Filiale = 'Milano'(Impiegati) RossiRoma557309NeriNapoli645698MilanoMilano449553NeriMilano645998SELStipendio > 50 AND Filiale = 'Milano'(Impiegati) \n12/10/2020Atzeni --Basi di dati I --3 27",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#11": "Impiegati CognomeFilialeStipendioMatricolaNeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553•impiegati che hanno lo stesso nome della filiale presso cui lavorano\nSEL Cognome= Filiale(Impiegati) NeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553SEL Cognome= Filiale(Impiegati) \n12/10/2020Atzeni --Basi di dati I --3 28",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#12": "Selezione e proiezione•operatori \"ortogonali\"•alla lavagna\n12/10/2020Atzeni --Basi di dati I --3 29",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#13": "Proiezione•decompone \"verticalmente\":•\"tutte\" le ennuple, alcuni attributi\n12/10/2020Atzeni --Basi di dati I --3 33",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#14": "Impiegati CognomeFilialeStipendioMatricolaNeriMilano645998NeriNapoli557309RossiRoma645698RossiRoma449553•per tutti gli impiegati:•matricola e cognome•cognome e filiale\n12/10/2020Atzeni --Basi di dati I --3 34",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#15": "Proiezione, sintassi e semantica•alla lavagna\n12/10/2020Atzeni --Basi di dati I --3 35",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#16": "CognomeFilialeStipendioMatricolaNeriMilano645998NeriNapoli557309RossiRoma645698RossiRoma449553•matricola e cognome  di tutti gli impiegati\nPROJ Matricola, Cognome(Impiegati)12/10/2020Atzeni --Basi di dati I --3 37",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#17": "CognomeFilialeStipendioMatricolaNeriMilano645998NeriNapoli557309RossiRoma645698RossiRoma449553•cognome e filiale  di tutti gli impiegati\nPROJ Cognome, Filiale(Impiegati)12/10/2020Atzeni --Basi di dati I --3 38",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#18": "Cardinalità delle proiezioni•Una proiezione•contiene al più tante ennuple quante l'operando•può contenerne di meno•Quando possiamo essere sicuri che non siano di meno?\n12/10/2020Atzeni --Basi di dati I --3 39",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#19": "Selezione con valori nulliCognomeFilialeEtàMatricolaNeriMilano455998RossiRoma327309BruniMilanoNULL9553Impiegati SELEtà > 40(Impiegati) •la condizione atomica è vera solo per valori non nulli12/10/2020Atzeni --Basi di dati I --3 41",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#2": "LaureatiMatricola74329824Età5445NomeNeriVerdi727442RossiSpecialistiMatricola743298249297Età544533NomeNeriVerdiNeriBase di dati per l'esempio•La carichiamo in Relaxhttp://dbis-uibk.github.io/relax/calc/gist/1a9dc6cd0f3478388fc177dfc9b5a31412/10/2020Atzeni --Basi di dati I --3 10",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#20": "Un risultato non desiderabileSELEtà>40 (Persone) ÈSELEtà£40 (Persone) ¹Persone•Perché? Perché le selezioni vengono valutate separatamente!•Ma anche SELEtà>40 ÚEtà£40 (Persone) ¹Persone•Perché? Perché anche le condizioni atomiche vengono valutate separatamente!12/10/2020Atzeni --Basi di dati I --3 42",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#21": "Selezione con valori nulli: soluzioneSELEtà > 40(Impiegati)•la condizione atomica è  vera solo per valori non nulli•per riferirsi ai valori nulli esistono forme apposite di condizioni:IS NULLIS NOT NULL•si potrebbe usare (ma non serve) una \"logica a tre valori\" (vero, falso, sconosciuto)12/10/2020Atzeni --Basi di dati I --3 43",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#22": "Nota bene•RelaXusa Età = null\n12/10/2020Atzeni --Basi di dati I --3 44",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#23": "•Quindi:SELEtà>40 (Persone) ÈSELEtà£40 (Persone) ÈSELEtà IS NULL (Persone) =SELEtà>40 ÚEtà£40 ÚEtà IS NULL(Persone) = Persone12/10/2020Atzeni --Basi di dati I --3 45",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#24": "CognomeFilialeEtàMatricolaNeriMilano455998BruniMilanoNULL9553Impiegati SEL(Età > 40) OR (Età IS NULL) (Impiegati) RossiRoma327309RossiRoma327309NeriMilano455998BruniMilanoNULL9553\n12/10/2020Atzeni --Basi di dati I --3 46",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#3": "Paternità PadreFiglioAdamoCainoAbramoIsaccoAdamoAbeleMaternità MadreFiglioEvaSetSaraIsaccoEvaAbelePaternità  ÈMaternità?? Un'unione sensata ma impossibile\n12/10/2020Atzeni --Basi di dati I --3 14",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#4": "Ridenominazione•operatore su una relazione•\"modifica lo schema\" lasciando inalterata l'istanza dell'operando•simbolo REN oppure RHO oppure ρ•sintassi ed esempio alla lavagna12/10/2020Atzeni --Basi di dati I --3 16",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#5": "RENSede, Retribuzione ¬Ufficio, Stipendio(Impiegati) REN Sede, Retribuzione ¬Fabbrica, Salario(Operai) ÈImpiegati CognomeNeriRossiUfficioMilanoRomaStipendio6455Operai CognomeVerdiBruniFabbricaLatinaMonzaSalario5545CognomeRetribuzioneSedeNeriRossi6455MilanoRomaVerdiBruniLatinaMonza554512/10/2020Atzeni --Basi di dati I --3 20",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#6": "Selezione•\"seleziona\" da una relazione le ennuple che soddisfano una condizione\n12/10/2020Atzeni --Basi di dati I --3 22",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#7": "Impiegati CognomeFilialeStipendioMatricolaNeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553•impiegati che •guadagnano più di 50 •guadagnano più di 50 e lavorano a Milano•hanno lo stesso nome della filiale presso cui lavorano12/10/2020Atzeni --Basi di dati I --3 23",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#8": "Selezione, sintassi e semantica\n•\n12/10/2020Atzeni --Basi di dati I --3 24",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.6-Algebra Relazionale.pdf#9": "CognomeFilialeStipendioMatricolaNeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553Impiegati MilanoMilano449553•impiegati che guadagnano più di 50 \nSELStipendio > 50(Impiegati) NeriNapoli645698SELStipendio > 50(Impiegati)\n12/10/2020Atzeni --Basi di dati I --3 26",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#0": "Selezione e proiezione•Combinando selezione e proiezione, possiamo estrarre interessanti informazioni da una relazione\n19/10/2020Atzeni --Basi di dati I --3 47",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#1": "CognomeFilialeStipendioMatricolaNeriMilano645998RossiRoma557309NeriNapoli645698MilanoMilano449553MilanoMilano449553NeriNapoli645698•matricola e cognome degli impiegati che guadagnano più di 50 \nSELStipendio > 50(Impiegati) PROJMatricola,Cognome(                                          ) 19/10/2020Atzeni --Basi di dati I --3 48",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#10": "19/10/2020Atzeni --Basi di dati I --3 58MatricolaVotoCodice345630043456260292832701esami6554260165542605•Numero esami e voto medio per ciascuno studenteAGGMatricola; avg(Voto) →Media, count(*) → NumEsami(esami)MatricolaMedia345628928327655426NumEsami212",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#11": "Valori nulli•vengono trattati correttamente (cioè ignorati nelle medie, nelle somme e nei conteggi)\n19/10/2020Atzeni --Basi di dati I --3 59",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#12": "count•count(*) conta le ennuple•count(A) conta le ennuple che hanno il valore di A •non i valori distinti di A•quindi in assenza di valori il risultato è lo stesso, in presenza di valori nulli per A•count(A) è il numero di ennuple che non hanno il valore nullo19/10/2020Atzeni --Basi di dati I --3 60",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#13": "19/10/2020Atzeni --Basi di dati I --3 61•Numero esami e voto medio per ciascuno studenteAGGMatricola; avg(Voto) →Media, count(*) → NumEsami(esami)MatricolaMedia345630928327655426NumEsami212MatricolaVotoCodice345630043456NULL0292832701esami6554260165542605•Numero voti e voto medio per ciascuno studenteAGGMatricola; avg(Voto) →Media, count(Voto) → NumVoti(esami)MatricolaMedia345630928327655426NumVoti112",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#14": "Join•il join è l'operatore più interessante dell'algebra relazionale•permette di correlare dati in relazioni diverse\n19/10/2020Atzeni --Basi di dati I --3 62",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#15": "Il solito esempio(con nomi di attributi modificati in \"esami\")\n19/10/2020Atzeni --Basi di dati I --3 63MatricolaCognomeNomeData di nascita6554RossiMario05/12/19788765NeriPaolo03/11/19763456RossiMaria01/02/19789283VerdiLuisa12/11/1979studenti\nCodiceTitoloDocente01AnalisiMario02ChimicaBruni04ChimicaVerdicorsiMatricolaVotoCodice345630043456240292832801esami65542601",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#16": "Join naturale•operatore binario (generalizzabile)•produce un risultato •sull'unione degli attributi degli operandi•con ennuple costruite ciascuna a partire da una ennupla di ognuno degli operandi\n19/10/2020Atzeni --Basi di dati I --3 66",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#17": "Join, sintassi e semantica•alla lavagna\n19/10/2020Atzeni --Basi di dati I --3 67",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#18": "Esempi•alla lavagna•join completo, non completo, vuoto, mxn \n19/10/2020Atzeni --Basi di dati I --3 69",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#19": "Cardinalità del join•Il join di R1e R2contiene un numero di ennuple …•alla lavagna (chiavi, vincoli integrità referenziale)\n19/10/2020Atzeni --Basi di dati I --3 74",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#2": "•Combinando selezione e proiezione, possiamo estrarreinformazioni da una relazione•Invece non possiamo•calcolare informazioni derivate•correlare informazioni presenti in relazioni diverse, né informazioni in ennuple diverse di una stessa relazione•Vediamo altri operatori che permettono queste attività19/10/2020Atzeni --Basi di dati I --3 49",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#3": "Aggregazione•Il contenuto delle basi di dati viene spesso aggregato:•Il voto massimo nell'esame di basi di dati•Il voto medio per ciascun esame•Il numero di CFU conseguiti da ciascuno studente\n19/10/2020Atzeni --Basi di dati I --3 50",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#4": "Aggregazione, sintassi e semantica\n•\n19/10/2020Atzeni --Basi di dati I --3 51",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#5": "Versione semplice•Senza attributo di raggruppamento•Calcolo sull'intera relazioneAGG Funzione (Attributo) (Operando)o meglioAGG Funzione (Attributo) → Nome (Operando)\n19/10/2020Atzeni --Basi di dati I --3 53",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#6": "19/10/2020Atzeni --Basi di dati I --3 54MatricolaVotoCodice345630043456260292832701esami6554260165542605AGGcount(*) → NumeroEsami(esami)•Il numero totale di esami NumeroEsami5",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#7": "19/10/2020Atzeni --Basi di dati I --3 55MatricolaVotoCodice345630043456260292832701esami6554260165542605AGGavg(Voto)→ MediaGenerale(esami)65542605•Il voto medio complessivoMediaGenerale27",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#8": "19/10/2020Atzeni --Basi di dati I --3 56MatricolaVotoCodice345630043456260292832701esami6554260165542605AGGcount(*)→ NumeroEsami,avg(Voto)→ MediaGenerale(esami)65542605•Il numero di esami e il voto medio complessivoMediaGenerale27NumeroEsami5γcount(*) → NumeroEsami, avg(Voto) → Media (Esami)",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.7-ALgebra Relazionale 2.pdf#9": "19/10/2020Atzeni --Basi di dati I --3 57MatricolaVotoCodice345630043456260292832701esami6554260165542605•Il voto medio per ciascuno studenteAGGMatricola; avg(Voto) → Media(esami)MatricolaMedia345628928327655426",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#0": "ImpiegatoRepartoRossiANeriBBianchiBRepartoCapoBMoriCBruniNeriBMoriImpiegatoRepartoCapoBianchiBMoriACJoin, una difficoltà\n•alcune ennuple non contribuiscono al risultato: vengono \"tagliate fuori\"19/10/2020Atzeni --Basi di dati I --3 77",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#1": "Join esterno•Il join esternoestende, con valori nulli, le ennuple che verrebbero tagliate fuori da un join (interno)•esiste in tre versioni:•sinistro, destro, completo\n19/10/2020Atzeni --Basi di dati I --3 78",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#10": "•Il prodotto cartesiano, in pratica, ha senso (quasi) solo se seguito da selezione:SELCondizione(R1JOINR2)•L'operazione viene chiamata theta-join e indicata con R1JOINCondizioneR2\n19/10/2020Atzeni --Basi di dati I --3 93",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#11": "Equi-join•Se l'operatore di confronto nel theta-join è sempre l'uguaglianza (=) allora si parla di equi-joinNota: ci interessa davvero l'equi-join, non il theta-join più generale\n19/10/2020Atzeni --Basi di dati I --3 95",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#12": "RossiANeriBBianchiBImpiegatoRepartoImpiegatiAMoriBBruniBBruniBBruniCodiceCapoRepartiImpiegati JOINReparto=CodiceReparti ImpiegatoRepartoCapoCodiceRossiAMoriAAARossiABBruniNeriBMoriANeriBBBruniBianchiBMoriABianchiBBBruniRossiAMoriAAANeriBBBruniBianchiBBBruni19/10/2020Atzeni --Basi di dati I --3 96",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#13": "Join naturale ed equi-join•In pratica, ciò che ci interessa è l'equi-join•Il join naturale lo abbiamo usato solo a fini didattici, perché i concetti sono più semplici•Nelle interrogazioni \"pratiche\" useremo l'equi-join\n19/10/2020Atzeni --Basi di dati I --3 100",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#14": "Equivalenza di espressioni•Due espressioni sono equivalentise producono risultati uguali fra loro  qualunque su ogni istanza della base di dati•L'equivalenza è importante in pratica perché i DBMS cercano di eseguire espressioni equivalenti a quelle date, ma meno \"costose\"19/10/2020Atzeni --Basi di dati I --3 101",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#15": "Un'equivalenza importante•Pushselections(se A è attributo di R1 )SELA=10 (R1JOINR2) = SELA=10 (R1) JOINR2\n19/10/2020Atzeni --Basi di dati I --3 103",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#16": "Nota•In questo corso, ci preoccupiamo poco dell’efficienza: •l’obiettivo è di scrivere interrogazioni corrette e leggibili•Motivazione:•I DBMS si preoccupano di scegliere le strategie realizzative efficienti19/10/2020Atzeni --Basi di dati I --3 104",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#17": "Viste (relazioni derivate)•Relazioni di base:contenuto autonomo, le relazioni nella base di dati•Relazioni derivate:•relazioni il cui contenuto è funzione del contenuto di altre relazioni (definito per mezzo di interrogazioni)•Le relazioni derivate possono essere definite su altre derivate, ma …19/10/2020Atzeni --Basi di dati I --3 106",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#18": "Viste, esempio•una vista:Supervisione = PROJImpiegato,  Capo(Afferenza JOIN Direzione)AMoriBBruniRepartoCapoRossiANeriBBianchiBImpiegatoRepartoAfferenzaDirezione\n19/10/2020Atzeni --Basi di dati I --3 108",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#19": "Interrogazioni sulle viste•Sono eseguite sostituendo alla vista la sua definizione:SELCapo='Leoni'(Supervisione)viene eseguita comeSELCapo='Leoni'(PROJImpiegato,  Capo(Afferenza JOIN Direzione))19/10/2020Atzeni --Basi di dati I --3 112",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#2": "ImpiegatoRepartoRossiANeriBBianchiBRepartoCapoBMoriCBruniACJoin, esterno\n•alla lavagna19/10/2020Atzeni --Basi di dati I --3 80",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#20": "Viste, motivazioniNota bene:•L'utilizzo di viste non influisce sull'efficienza delle interrogazioniVantaggi:•Soprattutto:•Strumento di programmazione: •si può semplificare la scrittura di interrogazioni: espressioni complesse e sottoespressioniripetute•Ogni utente vede solo  •ciò che gli interessa e nel modo in cui gli interessa, senza essere distratto dal resto•ciò che e'autorizzato a vedere (autorizzazioni)•Utilizzo di programmi esistenti su schemi ristrutturati19/10/2020Atzeni --Basi di dati I --3 113",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#21": "Viste come strumento di programmazione•Trovare gli impiegati che hanno lo stesso capo di Rossi•Senza vista:PROJ Impiegato((Afferenza JOIN Direzione) JOINREN ImpR,RepR ¬Imp,Reparto (SEL Impiegato='Rossi'(Afferenza JOIN Direzione))) •Con la vista:PROJ Impiegato(SupervisioneJOINREN ImpR¬Imp (SEL Impiegato='Rossi'(Supervisione))) 19/10/2020Atzeni --Basi di dati I --3 114",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#22": "Un servizio online per esercitazioni in algebra relazionale•RelaX•http://dbis-uibk.github.io/relax/calc•Verrà proposto un “homework” il cui svolgimento sarà necessario per partecipare alla prova parziale\n19/10/2020Atzeni --Basi di dati I --3 117",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#23": "RelaX•Utilizza una sintassi molto simile a quella vista a lezione e sul libro•L’editor aiuta nella scrittura degli operatori e dei nomi di relazione e di attributo (basta cliccare sul simbolo desiderato)•Talvolta è utile scrivere direttamente –allora attenzione a maiuscole e minuscole (è “case-sensitive”)•Le espressioni sono talvolta di lettura non semplice, perché tutto su una linea, senza “pedici”: •scriviamo σStipendio>40 (Impiegati) invecedi                   σStipendio>40 (Impiegati) •Attenzione agli spazi (talvolta il parsersi confonde) e spesso è utile qualche parentesi in più•Una differenza nella “assegnazione”; serve una “ridenominazione” esplicita della relazione; invece di Capi := Impiegatidobbiamo scrivereCapi= ρCapi(Impiegati)19/10/2020Atzeni --Basi di dati I --3 118",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#24": "Rappresentazione grafica•RelaX fornisce anche una rappresentazione grafica delle espressioni sotto forma di albero, molto espressiva•Ogni operatore è un nodo, con uno o due nodi discendenti (a seconda che abbia uno o due operandi) e le foglie sono relazioni nella base di dati•Nei lucidi seguenti sono mostrate le interrogazioni discusse in aula e per ciascuna è mostrata la formulazione mostrata in aula, quelle in RelaX (molto simile) e l’albero generato da RelaX19/10/2020Atzeni --Basi di dati I --3 119",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#25": "Dati •Accedendo al servizio si possono specificare interrogazioni su una base di dati•fra quelle disponibili sul servizio, oppure•su una “caricata” dall’utente•Per i primi esempi (in questa presentazione), le basi di dati sono state predisposte e possono essere caricatrselezionando il bottone “Loada data-set” e inserendo nel campo “Loaddatasetstoredin a gist” il relativo link 1a9dc6cd0f3478388fc177dfc9b5a314(prima bd) b7a8eac38317e0d6a7f0b904a9a10bd3(seconda bd)•oppure, più semplicemente richiamando RelaXcon l’url:http://dbis-uibk.github.io/relax/calc/gist/1a9dc6cd0f3478388fc177dfc9b5a314http://dbis-uibk.github.io/relax/calc/gist/b7a8eac38317e0d6a7f0b904a9a10bd3•Ulteriori basi di dati (data-set nella terminologia di RelaX) possono essere predisposti con una sintassi molto semplice e caricati su github(vedere l’help)19/10/2020Atzeni --Basi di dati I --3 120",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#26": "Impiegati = {Matricola, Nome, Eta:number, Stipendio:number7309, Rossi, 34, 455998, Bianchi, 37, 389553, Neri, 42, 355698, Bruni, 43, 424076, Mori, 45, 508123, Lupi, 46, 60}Supervisione = {Impiegato, Capo7309, 56985998, 56989553, 40765698, 40764076, 8123}19/10/2020Atzeni --Basi di dati I --3 121",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#27": "EsempiImpiegati NomeEtàStipendioMatricolaBianchi37385998Rossi34457309Bruni43425698Neri42359553Mori45504076Lupi46608123Supervisione ImpiegatoCapo599873095698955340765698569840764076812319/10/2020Atzeni --Basi di dati I --3 123",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#28": "•Trovare matricola, nome, età e stipendio degli impiegati che guadagnano più di 40SELStipendio>40(Impiegati)σStipendio>40 (Impiegati))\n19/10/2020Atzeni --Basi di dati I --3 124\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#29": "•Trovare matricola, nome ed età degli impiegati che guadagnano più di 40PROJMatricola, Nome, Età (SELStipendio>40(Impiegati))π Matricola, Nome, Eta (σStipendio>40 (Impiegati))\n19/10/2020Atzeni --Basi di dati I --3 125\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#3": "Join e proiezioniImpiegatoRepartoRossiANeriBBianchiBRepartoCapoBMoriCBruni\n19/10/2020Atzeni --Basi di dati I --3 85•alla lavagna",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#30": "•Trovare le matricole dei capi degli impiegati che guadagnano più di 40PROJCapo(SupervisioneJOINImpiegato=Matricola(SELStipendio>40(Impiegati)))π Capo  ((Supervisione) ⨝Impiegato=Matricola(σStipendio>40 (Impiegati)))\n19/10/2020Atzeni --Basi di dati I --3 126\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#31": "•Trovare nome e stipendio dei capi degli impiegati che guadagnano più di 40PROJNome,Stipendio(ImpiegatiJOINMatricola=Capo PROJCapo(SupervisioneJOINImpiegato=Matricola(SELStipendio>40(Impiegati))))π Nome,Stipendio(Impiegati⨝Matricola= Capo (π Capo  ((Supervisione) ⨝Impiegato=Matricola(σStipendio>40 (Impiegati)))))19/10/2020Atzeni --Basi di dati I --3 127\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#32": "•Trovare matricola, nome e stipendio dei capi degli impiegati che guadagnano più di 40; per ciascuno, mostrare, matricola, nome e stipendio anche dell'impiegato\n19/10/2020Atzeni --Basi di dati I --3 128",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#33": "•Trovare matricola, nome e stipendio dei capi degli impiegati che guadagnano più di 40; per ciascuno, mostrare, matricola, nome e stipendio anche dell'impiegatoPROJMatr,Nome,Stip,MatrC,NomeC,StipC(RENMatrC,NomeC,StipC,EtàC¬Matr,Nome,Stip,Età(Impiegati)JOIN MatrC=Capo (SupervisioneJOIN Impiegato=MatricolaSELStipendio>40(Impiegati)))\n19/10/2020Atzeni --Basi di dati I --3 129\nπ Matricola, Nome, Stipendio, MatrC, NomeC, StipC(ρMatrC←Matricola, NomeC←Nome, StipC←Stipendio, EtaC←Eta(Impiegati)⨝MatrC= Capo(((Supervisione) ⨝Impiegato=Matricola(σStipendio>40 (Impiegati)))))",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#34": "•La notazione con le ridenominazioni, pur corretta, è un po’ troppo “verbosa\"•Ne vediamo un’altra, basata sulle viste\n19/10/2020Atzeni --Basi di dati I --3 130",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#35": "Una convenzione e notazione alternativa per i join•Nota: è sostanzialmente l'approccio usato in SQL•Ignoriamo il join naturale (cioè non consideriamo implicitamente condizioni su attributi con nomi uguali)•Per \"riconoscere\" attributi con lo stesso nome gli premettiamo il nome della relazione•Usiamo viste (o \"assegnazioni”) per ridenominare le relazioni •(ridenominiamo gli attributi solo quando serve per l'unione o per dare nomi significativi nel riusltato)19/10/2020Atzeni --Basi di dati I --3 131",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#36": "19/10/2020Atzeni --Basi di dati I --3 132•Trovare matricola, nome e stipendio dei capi degli impiegati che guadagnano più di 40; per ciascuno, mostrare, matricola, nome e stipendio anche dell'impiegatoPROJMatr,Nome,Stip,MatrC,NomeC,StipC (RENMatrC,NomeC,StipC,EtàC¬Matr,Nome,Stip,Età(Impiegati)JOIN MatrC=Capo (Supervisione JOIN Impiegato=Matricola SELStipendio>40(Impiegati)))",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#37": "RelaX•Utilizza una sintassi molto simile a quella vista a lezione e sul libro•L’editor aiuta nella scrittura degli operatori e dei nomi di relazione e di attributo (basta cliccare sul simbolo desiderato)•Talvolta è utile scrivere direttamente –allora attenzione a maiuscole e minuscole (è “case-sensitive”)•Le espressioni sono talvolta di lettura non semplice, perché tutto su una linea, senza “pedici”: •scriviamo σStipendio>40 (Impiegati) invecedi                   σStipendio>40 (Impiegati) •Attenzione agli spazi (talvolta il parsersi confonde) e spesso è utile qualche parentesi in più•Una differenza nella “assegnazione”; serve una “ridenominazione” esplicita della relazione; invece di Capi := Impiegatidobbiamo scrivereCapi= ρCapi(Impiegati)19/10/2020Atzeni --Basi di dati I --3 134",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#38": "PROJImp.Matr, Imp.Nome, Imp.Stip,Capi.Matr,Capi.Nome, Capi.Stip(CapiJOIN Capi.Matr=Capo(Sup JOIN Imp=Imp.MatrSELStipendio>40(Imp)))Capi := Imp\n19/10/2020Atzeni --Basi di dati I --3 135\nCapi= ρCapi(Impiegati)π Impiegati.Matricola, Impiegati.Nome, Impiegati.Stipendio, Capi.Matricola, Capi.Nome, Capi.Stipendio(Capi⨝Capi.Matricola= Capo(((Supervisione) ⨝Impiegato=Matricola(σStipendio>40 (Impiegati)))))",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#39": "•Trovare gli impiegati che guadagnano più del proprio capo, mostrando matricola, nome e stipendio dell'impiegato e del capo\n19/10/2020Atzeni --Basi di dati I --3 136",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#4": "Join e proiezioni•R1(X1),R2(X2) PROJX1 (R1JOIN R2 ) ÍR1\n19/10/2020Atzeni --Basi di dati I --3 86",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#40": "PROJMatr,Nome,Stip,MatrC,NomeC,StipC(SELStipendio>StipC(RENMatrC,NomeC,StipC,EtàC¬Matr,Nome,Stip,Età(Impiegati)JOIN MatrC=Capo (SupervisioneJOIN Impiegato=MatricolaImpiegati)))π Matricola, Nome, Stipendio, MatrC, NomeC, StipC(σStipendio>StipC(ρMatrC←Matricola, NomeC←Nome, StipC←Stipendio, EtaC←Eta(Impiegati)⨝MatrC= Capo((Supervisione) ⨝Impiegato=Matricola(Impiegati))))\n19/10/2020Atzeni --Basi di dati I --3 137\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#41": "•Trovare gli impiegati che guadagnano più del proprio capo, mostrando matricola, nome e stipendio dell'impiegato e del capoPROJMatr,Nome,Stip,MatrC,NomeC,StipC (SELStipendio>StipC(RENMatrC,NomeC,StipC,EtàC¬Matr,Nome,Stip,Età(Impiegati)JOIN MatrC=Capo (Supervisione JOIN Impiegato=Matricola Impiegati)))19/10/2020Atzeni --Basi di dati I --3 138",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#42": "PROJMatr,Nome,Stip,MatrC,NomeC,StipC(SELStip>StipC(RENMatrC,NomeC,StipC,EtàC¬Matr,Nome,Stip,Età(Imp)JOIN MatrC=Capo (Sup JOIN Imp=MatrImp)))PROJImp.Matr, Imp.Nome, Imp.Stip,Capi.Matr,Capi.Nome, Capi.Stip(SELImp.Stip>Capi.Stip( CapiJOIN Capi.Matr=Capo (Sup JOIN Imp=Imp.MatrImp)))Capi:= Imp\n19/10/2020Atzeni --Basi di dati I --3 139\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#43": "•Trovare le matricole dei capi i cui impiegati guadagnano tuttipiù di 40PROJCapo (Supervisione) -PROJCapo (Supervisione JOINImpiegato=Matricola (SELStipendio £40(Impiegati)))π Capo (Supervisione) –π Capo (Supervisione ⨝Impiegato=Matricola ( σ Stipendio ≤ 40 (Impiegati)))\n19/10/2020Atzeni --Basi di dati I --3 140\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#5": "Proiezioni e joinNeriBMoriImpiegatoRepartoCapoBianchiBBruniVerdiABini\n19/10/2020Atzeni --Basi di dati I --3 87•alla lavagna",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#6": "Proiezioni e joinNeriBMoriImpiegatoRepartoCapoBianchiBBruniVerdiABiniNeriBImpiegatoRepartoBianchiBVerdiABMoriRepartoCapoBBruniABiniVerdiABiniNeriBMoriImpiegatoRepartoCapoNeriBBruniBianchiBMoriBianchiBBruni19/10/2020Atzeni --Basi di dati I --3 89",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#7": "Join e proiezioni•R1(X1),R2(X2) PROJX1 (R1JOIN R2 ) ÍR1•R(X),  X = X1ÈX2(PROJX1 (R))JOIN (PROJX2 (R)) ÊR 19/10/2020Atzeni --Basi di dati I --3 90",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#8": "Prodotto cartesiano•un join naturale su relazioni senza attributi in comune•contiene sempre un numero di ennuple pari al prodotto delle cardinalità degli operandi (le ennuple sono tutte combinabili)19/10/2020Atzeni --Basi di dati I --3 91",
    "dataExtraction\\data_test\\rootfolder\\universita\\basiDiDati\\0.8-Algebra Relazionale 2.pdf#9": "RossiANeriBBianchiBImpiegatoRepartoImpiegatiAMoriBBruniBBruniBBruniCodiceCapoRepartiImpiegati JOINReparti ImpiegatoRepartoCapoCodiceRossiAMoriAAARossiABBruniNeriBMoriANeriBBBruniBianchiBMoriABianchiBBBruni19/10/2020Atzeni --Basi di dati I --3 92",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\00-introduzione-corso-01.pdf#0": "9/29/2021\n100-introduzione -corso -01\n1Next Generation Computing Models\nIntroduzione\n2obiettivi formativi\n•introduzione al modello di calcolo del \nquantum computing con un approccio \ninformatico\n•introduzione ai modelli di calcolo \ncentrati sui dati, di interesse per le \ntecnologie big data1\n2",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\00-introduzione-corso-01.pdf#1": "9/29/2021\n200-introduzione -corso -01\n3modelli di calcolo e informatica\n•macchina di Turing\n•lambda calcolo\n•modelli per il calcolo parallelo e \ndistribuito\n•modelli per gerarchie di memorie\n•molti altrimodell i\n4programma\n•quantum computing\n–qubit\n–coppie di qubit\n–registri\n–porte con uno o piu'qubit\n–no cloning theorem\n–l'operatore di Hadamard\n–computazioni reversibili\n–l'algoritmo di Bernstein Vazirani\n–l'algoritmo di Shor\n–teoria della complessità e quantum computing3\n4",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\00-introduzione-corso-01.pdf#2": "9/29/2021\n300-introduzione -corso -01\n5programma\n•teoria della complessità e big data\n–la classe Pspazio\n–Pspazio -completezza\n–teorema di Savitch\n–le classi L e NL\n–NL-completezza\n–NL e co -NL\n–algoritmi randomizzati e la classe BPP\n6testi consigliati (consultazione )\n•E. G. Rieffel , W. H. Polak\nQuantum Computing: a Gentle Introduction\nMIT Press \n•N. S. Yanofsky , M. A. Mannucci\nQuantum Computing for Computer Scientists\nCambridge \n•Michael Sipser\nIntroduction to the Theory of Computation\nThompson\n•lezioni suYoutube di Umesh Vazirani (notevoli!)5\n6",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\05-quantum-introduzione-03.pdf#0": "9/29/2021\n105-quantum -introduzione -03\n1Next Generation Computing Models\nQuantum Computing\nIntroduzione\nquantum computing\n•un nuovo modello di calcolo che\n–potrebbe essere fisicamente realizzabile\n–potrebbe avere un vantaggio esponenziale, in alcuni \ncasi, rispetto ai computer tradizionali \n•il modello pone una seria sfida alla strong \nChurch -Turing Thesis\n–che dice che qualunque modello di calcolo può essere \nsimulato da una Macchina di Turing con al più uno \nsvantaggio polinomiale in termini di tempo\n21\n2",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\05-quantum-introduzione-03.pdf#1": "9/29/2021\n205-quantum -introduzione -03\nquantum e non -quantum\n•anche se il quantum computing dovesse \naffermarsi è ipotizzabile che i computer \ntradizionali continuino ad essere usati per \nrisolvere la maggior parte dei problemi\n3\nun po’ di fisica\n•per capire le basi del quantum computing occorre \nun pizzico di fisica\n–i parametri fisici (energia, momento, spin, ….) di una \nparticella elementare (es. elettrone) sono quantizzati e \npossono assumere valori solo in un insieme discreto\n–gli stessi parametri ad un certo istante non hanno un \nvalore che è un singolo numero; un parametro è \ninvece associato a un’onda di probabilità \n(superposition )\n–un parametro assume un singolo valore (collassa a un \nsingolo numero) quando viene osservato \n43\n4",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\05-quantum-introduzione-03.pdf#2": "9/29/2021\n305-quantum -introduzione -03\nqubit\n•i computer tradizionali usano i bit, i cui valori \npossono essere 0 o 1\n•i quantum computer usano i qubit\n–normalmente particelle subatomiche come elettroni o \nfotoni in superposition\n•generare e manipolare qubit è difficile\n–IBM, Google, Rigetti Computing usano circuiti \nsuperconduttori raffreddati a temperature più fredde \ndello spazio profondo\n–IonQ imprigiona atomi in campi elettromagnetici in \ncamere ultra -high vacuum 5\ndue principali direzioni di lavoro\n•sperimentale\n–costruzione di computer che sfruttano i fenomeni \ndella meccanica quantistica\n•teorica\n–quantum algorithms\n•progetto di algoritmi che sfruttano il modello di calcolo \ndella meccanica quantistica\n–quantum protocols\n•progetto di protocolli per trasmettere e ricevere \ninformazioni sfruttando il modello di calcolo della \nmeccanica quantistica\n65\n6",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\05-quantum-introduzione-03.pdf#3": "9/29/2021\n405-quantum -introduzione -03\nassiomi\nstudiamo un modello di calcolo che consente di \nastrarre rispetto alla meccanica quantistica, basato \nsu tre assiomi\n1.superposition\n2.misura\n3.evoluzione unitaria\n7\nostacoli\n•vettori e matrici\n•numeri complessi\n•un po’ di trigonometria\n•pochissimo calcolo delle probabilità\n87\n8",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\10-quantum-un-qubit-04.pdf#0": "9/29/2021\n110-quantum -un-qubit -04\n1Next Generation Computing Models\nQuantum Computing\nUn qubit\nqubit\n•nel calcolo tradizionale un bit può essere in \nalternativa nello stato 0o nello stato 1\n•nel quantum computing si usano i qubit\n•un qubit può essere simultaneamente nello stato \n0e nello stato 1(una superposition dei due stati)\n21\n2",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\10-quantum-un-qubit-04.pdf#1": "9/29/2021\n210-quantum -un-qubit -04\nqubit –ampiezze\n•i due stati di base di un qubit si indicano di solito \ncon |0e |1\n•un qubit si trova in generale in uno stato descritto \nda 𝛼0|0+𝛼1|1, dove 𝛼0e 𝛼1sono numeri \ncomplessi ( 𝛼0,𝛼1∈𝕔) chiamati ampiezze\n–con il vincolo |𝛼0|2+|𝛼1|2=1\n–si ricorda che il modulo di un numero complesso z=\n𝑥+𝑦𝑖è definito come 𝑧=𝑥2+𝑦2\n–quindi 𝑧2=𝑥2+𝑦2\n3\nqubit –esempi \n•ad esempio un qubit può trovarsi nello \nstato(Τ12+Τ12𝑖)|ۧ0+ൗ1\n2|ۧ1\n–si noti come |(Τ12+Τ12𝑖)|2+|ൗ1\n2|2=(\n)Τ14+\nΤ14+Τ12=1\n•oppure un qubit può trovarsi nello stato \nൗ1\n2|0+ൗ1\n2|1\n43\n4",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\10-quantum-un-qubit-04.pdf#10": "9/29/2021\n1110-quantum -un-qubit -04\nqubit –interpretazione geometrica\n•negli esempi ci siamo riferiti finora a valori reali, \nma la proporzionalità con il coseno al quadrato \nrimane anche se i numeri sono complessi\n210\n1= |1\n1\n0=|0𝜃|𝜓\nൗ𝜋2−𝜃\nqubit –basi diverse\n•lo stato |𝜓di un qubit esiste indipendentemente \ndalla base nella quale lo esprimiamo\n•possiamo quindi scegliere due versori \n(perpendicolari) |𝑢e |𝑢⊥diversi da  |0e|1\ned esprimere |𝜓in funzione di |𝑢e |𝑢⊥\n220\n1= |1\n1\n0=|0𝜃|𝜓\nൗ𝜋2−𝜃\n|𝑢|𝑢⊥21\n22",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\10-quantum-un-qubit-04.pdf#11": "9/29/2021\n1210-quantum -un-qubit -04\nqubit –basi diverse\n•la regola che lega la probabilità di misurare uno \nstato di base o un altro in funzione del coseno \ndell’angolo che lo stato ha con ciascuno di essi \nvale anche per versori diversi da  |0e|1\n230\n1= |1\n1\n0=|0𝜃|𝜓\nൗ𝜋2−𝜃\n|𝑢|𝑢⊥\nqubit –basi diverse\n•nota: la misura può essere effettuata \nrelativamente a qualunque base\n24𝜃|𝜓\nൗ𝜋2−𝜃\n|𝑢|𝑢⊥23\n24",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\10-quantum-un-qubit-04.pdf#12": "9/29/2021\n1310-quantum -un-qubit -04\nqubit –basi diverse\n•quindi la misura di un qubit necessita della \nspecifica della base rispetto alla quale è effettuata\n•consideriamo ora il caso generale dei numeri \ncomplessi\n25𝜃|𝜓\nൗ𝜋2−𝜃\n|𝑢|𝑢⊥\nrichiamo –prodotto scalare\n•il prodotto scalare tra due vettori (il primo riga e \nil secondo colonna ) si calcola in questo modo\n•𝑎1𝑎2⋯𝑎𝑛𝑏1\n𝑏2\n⋮\n𝑏𝑛=\n=𝑎1𝑏1+𝑎2𝑏2+⋯+𝑎𝑛𝑏𝑛=෍\n𝑖=1𝑛\n𝑎𝑖𝑏𝑖\n2625\n26",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\10-quantum-un-qubit-04.pdf#13": "9/29/2021\n1410-quantum -un-qubit -04\nrichiamo –complesso coniugato\n•si ricorda che il complesso coniugato di un \nnumero complesso z=𝑥+𝑦𝑖è definito come \nതz=𝑥−𝑦𝑖\n27\nprodotto scalare tra vettori complessi\n•il prodotto scalare tra due vettori complessi |𝜑e \n|𝜓si calcola facendo il trasposto coniugato di \n|𝜑e calcolando il prodotto scalare con il \nsecondo\n•se |𝜑=𝑎1\n𝑎2\n⋮\n𝑎𝑛il suo trasposto coniugato è \nത𝑎1ത𝑎2⋯ത𝑎𝑛\n2827\n28",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\10-quantum-un-qubit-04.pdf#14": "9/29/2021\n1510-quantum -un-qubit -04\nun po’ di notazione\n•mentre |𝑥denota un vettore colonna\n•abbiamo che ۦ|𝑥denota un vettore riga\n29\nqubit –basi diverse\n•in generale, la probabilità che la misura di un \nqubit|𝜓dia un certo versore |𝑢la possiamo \ncalcolare come il quadrato del prodotto scalare \ntra il versore e il qubit\n–si calcola usando il complesso coniugato del versore\n30𝜃|𝜓\nൗ𝜋2−𝜃\n|𝑢|𝑢⊥29\n30",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\10-quantum-un-qubit-04.pdf#15": "9/29/2021\n1610-quantum -un-qubit -04\nqubit –basi diverse\n•il prodotto scalare tra |𝑢=𝛽0|0+𝛽1|1e |𝜓\n=𝛼0|0+𝛼1|1si calcola come\n–𝛽0𝛽1𝛼0\n𝛼1=𝛽0𝛼0+𝛽1𝛼1\n–si ricorda che il complesso coniugato di un numero \ncomplesso z=𝑥+𝑦𝑖è definito come തz=𝑥−𝑦𝑖\n31𝜃|𝜓\nൗ𝜋2−𝜃\n|𝑢|𝑢⊥\nqubit –basi diverse\n•il prodotto scalare tra |𝑢e |𝜓si denota anche \ncon 𝑢𝜓dove la prima parentesi angolata si \nchiama brae le seconda ket(bra-ketnotation , \ndovuta a Dirac)\n32𝜃|𝜓\nൗ𝜋2−𝜃\n|𝑢|𝑢⊥31\n32",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\10-quantum-un-qubit-04.pdf#16": "9/29/2021\n1710-quantum -un-qubit -04\nqubit –basi diverse\n•quindi la probabilità che la misura di un qubit|𝜓\ndia un certo versore |𝑢la possiamo denotare \ncome 𝑢𝜓2\n33𝜃|𝜓\nൗ𝜋2−𝜃\n|𝑢|𝑢⊥\nesempio sulla misura\n•calcola la probabilità che |0assuma il valore del \nversore |ۧ+=ൗ1\n2|0+ൗ1\n2|1\n•abbiamo che |0=1\n0\n•quindi 0+=10ൗ1\n2\nൗ1\n2=ൗ1\n2\n•e 0+2=1\n2\n3433\n34",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\10-quantum-un-qubit-04.pdf#17": "9/29/2021\n1810-quantum -un-qubit -04\nesempio sulla misura\n•calcola la probabilità che |0assuma il valore del \nversore |ۧ1\n•abbiamo che |0=1\n0e |1=0\n1\n•quindi 01=100\n1=0\n•e 012=0\n35\n35",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\10-quantum-un-qubit-04.pdf#2": "9/29/2021\n310-quantum -un-qubit -04\nqubit –misura\n•quando un qubit è isolato si trova in una \nsuperposition\n•quando viene misurato (osservato) collassa con \nprobabilità |𝛼0|2a |0e con probabilità |𝛼1|2a \n|1\n•dopo l’osservazione i valori di ampiezza sono \nirrimediabilmente perduti\n–la misura disturba lo stato del sistema\n5\nqualche esempio sui numeri complessi\nricorda che 𝑖=−1e che 𝑖2=−1\n•semplifica 𝑧=2+3𝑖−5𝑖+6\n–𝑧=8−2𝑖\n•semplifica 𝑧=(2+𝑖)2\n–𝑧=4+4𝑖+𝑖2=4+4𝑖−1=3+4𝑖\n•semplifica 𝑧=𝑖3(7+5𝑖)\n–𝑧=−i7+5i=−7i−5𝑖2=−7𝑖+5=5−7i\n65\n6",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\10-quantum-un-qubit-04.pdf#3": "9/29/2021\n410-quantum -un-qubit -04\nqualche esempio sui numeri complessi\nricorda che il complesso coniugato di un numero \ncomplesso z=𝑥+𝑦𝑖è definito come തz=𝑥−𝑦𝑖\n•calcola il complesso coniugato di 𝑧=2+3𝑖\n–ҧ𝑧=2−3𝑖\n•calcola il complesso coniugato di 𝑧=−𝑖\n–ҧ𝑧=𝑖\n7\nqualche esempio sui qubit\n•considera il qubit|ۧ𝜓=3\n2|ۧ0−1\n2|ۧ1\n•quello mostrato è uno stato nel quale il qubit può \neffettivamente trovarsi?\n–sì perché 3\n22\n+−1\n22\n=3\n4+1\n4=1\n•se verrà misurato, con che probabilità il risultato \ndella misura sarà |ۧ0?\n–3\n22\n=3\n4\n87\n8",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\10-quantum-un-qubit-04.pdf#4": "9/29/2021\n510-quantum -un-qubit -04\nqualche esempio sui qubit\n•considera il qubit|ۧ𝜓=1\n2|ۧ0−𝑖1\n2|ۧ1\n•quello mostrato è uno stato nel quale il qubit può \neffettivamente trovarsi?\n–sì perché 1\n22\n+−𝑖1\n22\n=1\n2+1\n2=1\n•se viene misurato, con che probabilità il risultato \ndella misura sarà |ۧ0?\n–1\n2\n9\nqubit –rappresentazione vettoriale\n•possiamo rappresentare lo stato descritto da \n𝛼0|0+𝛼1|1, in modo sintetico con  il vettore \ndi numeri complessi 𝛼0\n𝛼1\n•quindi lo spazio degli stati di un qubit è uno \nspazio bidimensionale complesso\n–detto spazio di Hilbert\n•il vincolo di normalizzazione ci dice che il \nvettore di un qubit è anche unitario\n–un vettore è unitario quando ha modulo (lunghezza) \nuguale a 1; si chiama anche versore 109\n10",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\10-quantum-un-qubit-04.pdf#5": "9/29/2021\n610-quantum -un-qubit -04\nqubit –stati di base\n•possiamo rappresentare lo stato descritto da 𝛼0=\n1, e 𝛼1=0con il vettore 1\n0\n–quindi scrivere |0è equivalente a scrivere 1\n0\n•inoltre possiamo rappresentare lo stato descritto \nda 𝛼0=0, e 𝛼1=1con il vettore 0\n1\n–quindi scrivere |1è equivalente a scrivere 0\n1\n11\nqubit –rappresentazione vettoriale\n•quindi possiamo scrivere 𝛼0|0+𝛼1|1in forma \nvettoriale come  𝛼01\n0+𝛼10\n1=𝛼0\n𝛼1\n–i vettori 1\n0e 0\n1sono le basi della \nrappresentazione\n•la notazione con le parentesi |𝑥non è che una \nforma sintetica per la rappresentazione vettoriale\n–si chiama ket-notation ed è stata concepita da Dirac\n–la forma |𝑥denota con il nome 𝑥un vettore colonna\n1211\n12",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\10-quantum-un-qubit-04.pdf#6": "9/29/2021\n710-quantum -un-qubit -04\nqubit –rappresentazione vettoriale\n•quindi\n–un qubit è quindi un vettore unitario in uno spazio \nvettoriale bidimensionale complesso\n–la notazione usata per descrivere qubit è una \nnotazione per descrivere vettori\n13\nes. sulla rappresentazione vettoriale\n•considera il qubit|ۧ𝜓=3\n2|ۧ0−1\n2|ۧ1\n•mostrane la reppresentazione vettoriale\n–|ۧ𝜓=3\n21\n0−1\n20\n1=3\n2\n−1\n2\n1413\n14",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\10-quantum-un-qubit-04.pdf#7": "9/29/2021\n810-quantum -un-qubit -04\nqubit –interpretazione geometrica\n•se assumiamo, per semplicità, che 𝛼0e 𝛼1siano \nnumeri reali , possiamo rappresentare 𝛼01\n0+\n𝛼10\n1con il disegno:\n150\n1= |1\n1\n0=|0circonferenza unitaria\n𝛼0𝛼1tutti i qubit con ampiezze reali\nsono un punto su questa\ncirconferenza\nqubit –interpretazione geometrica\n•ad esempio se 𝛼0=ൗ1\n2e 𝛼1=ൗ1\n2abbiamo\n160\n1= |1\n1\n0=|0ൗ𝜋4ൗ1\n2|0+ൗ1\n2|1\n𝛼0=cos𝜋\n4=ൗ1\n2𝛼1=sin𝜋\n4=ൗ1\n215\n16",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\10-quantum-un-qubit-04.pdf#8": "9/29/2021\n910-quantum -un-qubit -04\nqubit –interpretazione geometrica\n•consideriamo ora un generico stato |𝜓con \nampiezze (per semplicità) reali ed osserviamo gli \nangoli della sua rappresentazione geometrica\n170\n1= |1\n1\n0=|0𝜃|𝜓\nqubit –interpretazione geometrica\n•possiamo esprimere le componenti di |𝜓usando \ngli angoli che forma con gli assi\n•abbiamo che |𝜓=cos𝜃|0+sin𝜃|1=cos𝜃\nsin𝜃\n180\n1= |1\n1\n0=|0𝜃|𝜓17\n18",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\10-quantum-un-qubit-04.pdf#9": "9/29/2021\n1010-quantum -un-qubit -04\nqubit –interpretazione geometrica\n•se misuriamo |𝜓=cos𝜃|0+sin𝜃|1\notteniamo |0con probabilità cos𝜃2e |1con \nprobabilità sin𝜃2\n190\n1= |1\n1\n0=|0𝜃|𝜓\nqubit –interpretazione geometrica\n•possiamo riscrivere sin𝜃2=cosΤ𝜋2−𝜃2\n•quindi la probabilità di misurare uno |0o un  |1\nè data dal coseno al quadrato dell’angolo che lo \nstato ha con ciascuno di essi \n200\n1= |1\n1\n0=|0𝜃|𝜓\nൗ𝜋2−𝜃19\n20",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\15-quantum-un-qubit-heisenberg-02.pdf#0": "10/6/2021\n115-quantum -un-qubit -Heisenberg -02\n1Next Generation Computing Models\nQuantum Computing\nIl principio di indeterminazione di Heisenberg \ne un qubit\nprincipio di indeterminazione  di \nHeisenberg\n•nella meccanica quantistica il principio stabilisce \nl'impossibilità di determinare con precisione a \npriori illimitata i valori di due variabili \nincompatibili, che specificano lo stato di una \nparticella\n–es. posizione e velocità\n•indaghiamo il principio usando il quantum \ncomputing\n21\n2",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\15-quantum-un-qubit-heisenberg-02.pdf#1": "10/6/2021\n215-quantum -un-qubit -Heisenberg -02\ndue basi\n•usiamo due basi per descrivere lo stesso qubit\n–la base costituita dai vettori |0e|1\n–e la base costituita da |ۧ+=ൗ1\n2|0+ൗ1\n2|1e \n|ۧ−=ൗ1\n2|0−ൗ1\n2|1\n30\n1= |1\n1\n0=|0|+\nൗ𝜋4\n|−\n|ۧ+e |ۧ−è una base\n•in primo luogo |ۧ+=ൗ1\n2|0+ൗ1\n2|1è \neffettivamente uno stato\n–infatti ൗ1\n22\n+ൗ1\n22\n=Τ12+Τ12=1\n•e anche |ۧ−=ൗ1\n2|0−ൗ1\n2|1è \neffettivamente uno stato\n–infatti ൗ1\n22\n+−ൗ1\n22\n=Τ12+Τ12=1\n43\n4",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\15-quantum-un-qubit-heisenberg-02.pdf#2": "10/6/2021\n315-quantum -un-qubit -Heisenberg -02\n|ۧ+e |ۧ−è una base\n•inoltre |ۧ+e |ۧ−sono perpendicolari tra loro\n•per dimostrarlo basta calcolare il loro prodotto \nscalare +−=ൗ1\n2ൗ1\n2ൗ1\n2\n−ൗ1\n2e osservare \nche ha valore nullo\n5\ndue misure\n•dato un qubit|𝜓, possiamo misurarlo sia usando \nla base |0e|1sia usando la base |ۧ+e |ۧ−\n•la prima misura la chiamiamo bit-value e la \nseconda sign -value\n6|1\n|0|+\nൗ𝜋4\n|−|𝜓5\n6",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\15-quantum-un-qubit-heisenberg-02.pdf#3": "10/6/2021\n415-quantum -un-qubit -Heisenberg -02\nposizione e velocità\n•immaginiamo ora che il bit -value corrisponda \nalla posizione e che il sign-value corrisponda alla \nvelocità\n7|1\n|0|+\nൗ𝜋4\n|−|𝜓\nposizione e velocità\n•è possibile in un certo istante conoscere \nposizione e velocità di un qubit ?\n8|1\n|0|+\nൗ𝜋4\n|−|𝜓7\n8",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\15-quantum-un-qubit-heisenberg-02.pdf#4": "10/6/2021\n515-quantum -un-qubit -Heisenberg -02\nconoscenza perfetta del bit -value\n•perchè si possa conoscere perfettamente il bit -\nvalue di |𝜓occorre che esso sia |0oppure |1\n9|1\n|0|+\nൗ𝜋4\n|−|𝜓\nconoscenza perfetta del sign-value\n•perchè si possa conoscere perfettamente il sign-\nvalue di |𝜓occorre che esso sia |ۧ+oppure |ۧ−\n10|1\n|0|+\nൗ𝜋4\n|−|𝜓9\n10",
    "dataExtraction\\data_test\\rootfolder\\universita\\quantum computing\\15-quantum-un-qubit-heisenberg-02.pdf#5": "10/6/2021\n615-quantum -un-qubit -Heisenberg -02\nconoscenza perfetta di entrambi\n•se possiamo conoscere perfettamente il sign-\nvalue di |𝜓, es. perchè esso è molto vicino a |0, \nallora abbiamo molta incertezza sul sign-value\n–è |ۧ+con probabilità Τ12e |ۧ−con probabilità Τ12\n11|1\n|0|+\nൗ𝜋4\n|−|𝜓\n11",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\020-instradamento-01.pdf#0": "020-instradamento-01         copyright ©2021 g. di battista, m. patrignanialgoritmi di instradamento\nper l’infrastruttura di rete fissa\ng. di battista, m. patrignaniinternet and data centers\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\020-instradamento-01.pdf#1": "020-instradamento-01         copyright ©2021 g. di battista, m. patrignanicopyright notice\nall the pages/slides in this presentation, including but not \nlimited to, images, photos, animations, videos, sounds, music, and text (hereby referred to as “material”) are protected by copyright\nthis material, with the exception of some multimedia \nelements licensed by other organizations, is property of the authors and/or organizations appearing in the first slide\nthis material, or its parts, can be reproduced and used \nfor didactical purposes within universities and schools, \nprovided that this happens for non-profit purposes\nany other use is prohibited, unless explicitly authorized \nby the authors on the basis of an explicit agreement\nthis copyright notice must always be redistributed \ntogether with the material, or its portions",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\020-instradamento-01.pdf#10": "020-instradamento-01         copyright ©2021 g. di battista, m. patrignanistatic routing\nL1L2\nL3\nL4L5L6L7L8\nindirizzo prima scelta seconda scelta\n156.128.16.0/24 L1 L2\n128.201.0.0/16 L3\n145.200.0.0/16 L5 L3\n12. 0.0.0/8 L1\n0.0.0.0/0 L7 L8",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\020-instradamento-01.pdf#11": "020-instradamento-01         copyright ©2021 g. di battista, m. patrignanialgoritmi statici di instradamento\nflooding\nogni pacchetto viene ritrasmesso su tutte le linee, \nsalvo quella da cui è arrivato\nvarianti del flooding\nselective flooding: si ritrasmette solo su un insieme di \nlinee selezionato\n• is-is (iso 10598)\nscarto dei pacchetti troppo vecchi\n• pacchetti con “age counter” a bordo\nscarto di un pacchetto al suo secondo passaggio su \nun nodo\nle varianti necessitano di memorie estese e di \nidentificatori di pacchetto",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\020-instradamento-01.pdf#12": "020-instradamento-01         copyright ©2021 g. di battista, m. patrignanialgoritmi dinamici di instradamento\nrouting isolato\nogni intermediate system (is) calcola in modo \nindipendente le proprie tabelle, senza consultare gli altri is\nhot potato routing\n• il pacchetto viene inviato sulla linea con coda più breve\n• interesse solo teoricoalgoritmi dinamici\ndistance vector link state packetrouting isolato routing distribuito routing centralizzato\nhot potato backward learning",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\020-instradamento-01.pdf#13": "020-instradamento-01         copyright ©2021 g. di battista, m. patrignanialgoritmi dinamici di instradamento\nbackward learning\nla linea di uscita del pacche tto viene inferita in base \nagli indirizzi mittente dei pacchetti in ingresso\n• esempio: il filtering dei bridge ieee 802.1D al livello 2\nraffinamento\n• aggiunta di un campo nei pacchetti che specifica il costo, \nincrementato ad ogni attraversamento di is\n– in questo modo si possono mantenere in ogni is più alternative \nordinate per costo\n– svantaggio: si imparano solo le  migliorie e non i peggioramenti \n(perche? tempo di scadenza delle entry!)\nquando la destinazione è ignota si fa flooding\npuò generare cicli\n• si accoppia usualmente con il calcolo di uno spanning tree",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\020-instradamento-01.pdf#14": "020-instradamento-01         copyright ©2021 g. di battista, m. patrignanialgoritmi dinamici di instradamento\nrouting centralizzato\npresuppone l’esistenza di un routing control \ncenter (rcc) che conosce la topologia della \nrete\n• ipotesi spesso non realistica\nil routing control center \n• riceve da tutti i nodi informazioni sulla topologia\n• calcola le tabelle di instradamento• le distribuisce\nproblemi\n• traffico intenso intorno al rcc\n• affidabilità",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\020-instradamento-01.pdf#15": "020-instradamento-01         copyright ©2021 g. di battista, m. patrignanialgoritmi dinamici di instradamento\nrouting distribuito\nnon esiste un rcc, ma le sue funzionalità sono \nsvolte da tutti gli is \ndue principali paradigmi\n• distance vector\n– dico ai miei vicini tutto ciò che so del mondo\n• link state packet\n– dico a tutto il mondo ciò che so dei miei vicinidistance vector link state packetrouting distribuito",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\020-instradamento-01.pdf#2": "020-instradamento-01         copyright ©2021 g. di battista, m. patrignanipanoramica\ngeneralità\nqualità degli algoritmi di instradamento\ntipi di algoritmi\nalgoritmi di instradamento basati su \ndistance vector\nalgoritmi di instradamento basati su \nlink state packet",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\020-instradamento-01.pdf#3": "020-instradamento-01         copyright ©2021 g. di battista, m. patrignaniqualità degli algoritmi di instradamento\nefficienza\nper evitare che il calcolo dei cammini verso le \ndestinazioni abbia un peso eccessivo rispetto all’istradamento dei pacchetti\n• le cpu e le memorie attualmente dis ponibili sui router sono talvolta \ninsufficienti se confrontati con la complessità delle reti\nottimalità nella scelta dei cammini\nrispetto a qualche criterio che deve essere misurabile\nnormalmente si usa il numero di hop o il costo delle \nlinee, talvolta assunto inversamente proporzionale alla velocità\ncriteri che tengano in considerazione il carico corrente \ndella rete sono difficili da considerare",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\020-instradamento-01.pdf#4": "020-instradamento-01         copyright ©2021 g. di battista, m. patrignaniqualità degli algoritmi di instradamento\nrobustezza e adattabilità\nrispetto alle variazioni di topologia\n• in una rete di grandi dimensioni possono esserci \nfrequentemente guasti alle  linee e/o ai router\nstabilità\nse non cambia la topologia non devono cambiare i \ncammini\na fronte di una variazione di topologia occorre \nconvergere rapidamente ad  un nuovo instradamento \nstabile\nequità\nnessun nodo deve essere privilegiato o danneggiato\neconomicità\ncosti ridotti di configurazione e manutenzione dei \nprotocolli di routing",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\020-instradamento-01.pdf#5": "020-instradamento-01         copyright ©2021 g. di battista, m. patrignanialgoritmi di instradamento\ndifficoltà nella scelta di un algoritmo\ni criteri sono talvolta contrastanti\n• esempio: minimizzare il ritardo di pacchetti  e \nmassimizzare l’utilizzo delle linee\ngli algoritmi complessi possono comportare \nconfigurazioni difficili\n• le spese per il personale di gestione aumentano",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\020-instradamento-01.pdf#6": "020-instradamento-01         copyright ©2021 g. di battista, m. patrignanitipi di algoritmi di instradamento\nalgoritmi statici\ncriteri fissi di instradamento, indipendenti dallo \nstato della topologia\nalgoritmi dinamici\ninstradamento in funzione dello stato della \ntopologia e/o del carico\nalgoritmi di instradamento\nalgoritmi statici algoritmi dinamici",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\020-instradamento-01.pdf#7": "020-instradamento-01         copyright ©2021 g. di battista, m. patrignanirapporto tra routing statico e dinamico\nparte periferica\ntopologia ad alberorouting staticoparte centrale\ntopologia fortemente magliata\nrouting dinamico\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\020-instradamento-01.pdf#8": "020-instradamento-01         copyright ©2021 g. di battista, m. patrignanitassonomia degli algoritmi \ndi instradamento\nalgoritmi di instradamento\nalgoritmi statici algoritmi dinamici\nstatic \nroutingflooding\ndistance\nvectorlink state\npacketrouting\nisolatorouting\ndistribuitorouting\ncentralizzato\nhot\npotatobackward\nlearning",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\020-instradamento-01.pdf#9": "020-instradamento-01         copyright ©2021 g. di battista, m. patrignanialgoritmi statici di instradamento\nstatic routing\nsu ogni nodo c’è una tabella che contiene, per \nogni nodo da raggiungere, la linea da usare e \nla tabella è compilata dall’amministratore di \nsistema\n• che è chiamato ad intervenire in presenza di guasti\nvariante quasi-statica \nl’amministratore di sistema fornisce più\nalternative in ordine di priorità, che vengono \nscelte in funzione dello stato della rete\n• es: ibm sna",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#0": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanialgoritmi link state packet\ng. di battista, m. patrignaniinternet and data centers\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#1": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanicopyright notice\nall the pages/slides in this presentation, including but not \nlimited to, images, photos, animations, videos, sounds, music, and text (hereby referred to as “material”) are protected by copyright\nthis material, with the exception of some multimedia \nelements licensed by other organizations, is property of the authors and/or organizations appearing in the first slide\nthis material, or its parts, can be reproduced and used \nfor didactical purposes within universities and schools, \nprovided that this happens for non-profit purposes\nany other use is prohibited, unless explicitly authorized \nby the authors on the basis of an explicit agreement\nthis copyright notice must always be redistributed \ntogether with the material, or its portions",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#10": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanidimostrazione per assurdo\nsia jl’ultimo nodo di pappartenente ad S e \nkil nodo seguente\nk ≠ialtrimenti l’algoritmo avrebbe computato \nd[i] = |p| = m(i)\nS\nj 1 k i\np= cammino più cortocammino scelto",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#11": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanidimostrazione del lemma dell’invariante\n1.d[k] = m(k) , cioè d[k]è ottimo\ninfatti d[k]è calcolato da d[j] \n• per ipotesi d[j] = m(j)\n•l ’ a r c o  (j,k)è utilizzato da p\n2.m(k) ≤m(i) perché kè un nodo intermedio di p\nconcatenando 1., 2. e l’ipotesi assurda si ottiene\nd[k] = m(k) ≤m(i) < d[i]\ncioè d[k] < d[i]\nma questo è assurdo perché l’algoritmo avrebbe \nscelto ke non i",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#12": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanicorrettezza dell’algoritmo di Dijkstra\nl’algoritmo di Dijkstra trova un cammino di \ncosto minimo tra 1ed ogni altro nodo della \nrete\ninizializzazione \n• è vero quando S = {1}\nconservazione\n• per il lemma dell’invariante, rimane vero quando \naggiungo ogni nodo ad S\nconclusione \n• è vero quando S = V",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#13": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignaniDijkstra – efficienza (lavoro svolto dai router)\nsupponiamo che in una rete ci siano n\nnodi e mlink\nun’implementazione semplice richiede \ntempo O(n2 + m) = O( n2)\nun’implementazione più sofisticata ha \ncomplessità O(nlog n+ m)\ncomplessità ammortizzata\nrichiede l’implementazione di una coda di \npriorità con un heap",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#14": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanishortest-path spanning tree\nle distanze minime calcolate \ncorrispondono ad uno shortest-path spanning tree della rete\nin generale gli spanning tree sono diversi\n65\n282\n1 22\n65\n282\n1 22\n65\n282\n1 22",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#15": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanishortest-path spanning tree\nil viaggio di un pacchetto da 3 a 6\nogni router instrada in base al proprio \nspanning-tree\n65\n282\n1 22\n65\n282\n1 22\n65\n282\n1 22",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#16": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignaniarchitettura di un router lsp\nquando il receive process riceve un pacchetto \nse è in transito verso altre destinazioni lo passa al \nforwarding process, che lo trasmette sfruttando le informazioni del forwarding database\nse il pacchetto è di gestione viene passato ai \nprotocolli superiorireceive\nprocessforwarding\nprocessforwarding\ndatabase\nupdate\nprocesslsp\ndatabasedecision \nprocess\n(Dijkstra)livello di rete",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#17": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanipacchetti di gestione – neighbor greetings\npacchetto di neighbor greetings\nutilizzato per tenere aggiornate le adiacenze \ndirette\ninviato periodicamente su tutte le interfacce\nquando un is rileva una modifica di topologia\n• invia un lsp per far conoscere la modifica a tutti gli \nis della rete",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#18": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanipacchetti di gestione – lsp\npacchetto link-state-packet\ncontiene un numero di versione\nquando un is riceve un lsp \nse della stessa versione di quello posseduto \n• non compie alcuna azione\nse di versione più recente\n• aggiorna il suo database\n• ritrasmette il pacchetto in flooding su tutte le linee \n(eccetto quella di ricezione)\nse di versione precedente\n• trasmette quello posseduto al mittente (per un \nrapido allineamento dei database)",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#19": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanirouter lsp e lan\nuna lan su cui si affacciano \ndiversi router si presta molto male ad essere modellata come un grafo\ni router costruiscono un grafo \ncompleto con un numero \nquadratico di archi\nmodellazione tramite uno \npseudo nodo\nuno dei router sulla lan \n(designated router) si prende \nl’onere di rappresentare lo pseudo nodo\ntutti gli altri router vedranno la \nlan come una stella",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#2": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanialgoritmi link state packet\nogni intermediate system (is) ha una mappa \ncompleta della rete\nogni is calcola sulla mappa l'instradamento \nottimale\ncammini di costo minimo verso tutte le destinazioni\nalgoritmo di Dijkstra\nla tabella di instradamento si ottiene \nconsiderando il primo hop dei cammini minimi\nla mappa della rete viene costruita a partire dai \nlink state packet (lsp)\nun lsp contiene informazioni sui nodi e sui link \nadiacenti ad uno specifico is\ni lsp sono trasmessi in selective flooding da ogni is a \ntutti gli altri is della rete",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#3": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignaniesempio\nogni is trasmette un lsp (che arriva a tutti)\n65\n282\n122lsp di R1\nsono adiacente \nad R2 (costo 6) e \nad R6 (costo 2)\nogni is conserva in un database il lsp più\nrecente di ogni altro is della rete",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#4": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignaniesempio\nè importante che il database \ndei lsp sia identico su tutti gli is\nlsp database (su ogni is)\nR1: sono adiacente a R2/ 6R6/2\nR2: sono adiacente a R1/ 6R3/5R4/8 R6/2\nR3: sono adiacente a R2/ 5R4/2\nR4: sono adiacente a R2/ 8R3/2 R5/2\nR5: sono adiacente a R4/ 2R6/1\nR6: sono adiacente a R1/ 2R2/2 R5/1\n65\n282\n122",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#5": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanialgoritmi link state packet\ndifferenza con distance vector\nnegli algoritmi distance vector la collaborazione tra is \nè tesa a calcolare direttamente le tabelle di instradamento\nnegli algoritmi link state packet la collaborazione tra is \nè tesa a mantenere aggiornata la mappa della rete\npossono gestire reti anche con 10.000 nodi\nconvergono rapidamente",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#6": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanialgoritmo di Dijkstra\nV =insieme di vertici numerati 1, …, n \nil vertice 1è la sorgente del traffico\ngli archi sono orientati\nA(i) = adiacenti di i\ninsieme dei vertici jper cui c’è un arco orientato (i,j)\naij(≥0) =metrica dell’arco (i,j)\naij= ∞se l’arco (i,j)èa s s e n t e\nla lunghezza di un cammino è somma delle metriche \ndegli archi attraversati \nd[i] = distanza corrente dal vertice 1al vertice i\nm(i) = distanza minima dal vertice 1al vertice i\nS=insieme dei vertici i cui d[i] = m(i)",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#7": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanialgoritmo di Dijkstra\ncalcola il cammino di costo minimo tra il nodo 1\ned ogni altro nodo della rete\ni nodi sono inseriti in Sper valori crescenti della \ndistanza da 1\na) S=  { 1 }\nb) per ogni itra 2ed nponi d[i] = a1i\nc) finché V-Snon è vuoto\nscegli un nodo iin V-Stale che d[i]sia minimo\naggiungi iad S\nper ogni j in A(i)poni d[j] = min(d[j],d[i] + aij)",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#8": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignaniesempio\n65\n282\n12206∞∞∞2S = d =V-S = \n04∞∞32 d =123456\n04∞532 d =\n049532 d =\n047532 d =\n047532 d =",
    "dataExtraction\\data_test\\rootfolder\\universita\\retiDiCalcolatori\\040-algoritmi-link-state-packet-01.pdf#9": "040-algoritmi-link-state-packet-01         copyright ©2021 g. di battista, m. patrignanilemma dell’invariante\nse d[v] = m(v) per ogni nodo vdi S, allora \nquando iviene aggiunto ad S, anche per i\nsi ha d[i] = m(i)\ndimostrazione per assurdo\nsupponiamo per assurdo che d[i] > m(i)\nsia pil cammino minimo da 1ad i\n• necessariamente |p| = m(i) < d[i]",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#0": "9/28/2021\n102-linguaggio -e-grammatiche -24\n1Linguaggi e Grammatiche\n2Linguaggi e informatica\n•ubiquitari nelle applicazioni\n–linguaggi di programmazione\n•compilatori ed interpreti\n–linguaggi di comunicazione\n•protocolli per il dialogo traentità omologhe\n–linguaggi per intefacce\n•specifica di sequenze di operazioni\n•paradigmatici nella teoria\n–molti importanti problemi teorici sono riconducibili a \nquello dell’appartenenza di una stringa ad un \nlinguaggio1\n2",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#1": "9/28/2021\n202-linguaggio -e-grammatiche -24\n3Tre approcci diversi\n•approccio insiemistico\n–utile per determinare le \nproprietà elementari dei\nlinguaggi\n•approccio generativo\n–grammatiche formali\n•approccio riconoscitivo\n–automi riconoscitori\n4Concetti matematici di base\n•Insiemi\n•Relazioni\n•Funzioni3\n4",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#10": "9/28/2021\n1102-linguaggio -e-grammatiche -24\n21Funzione\ndominiocodominioX1 … Xn-1 Xn\n22Funzione totale\ndominiocodominioX1 … Xn-1 Xn•una funzione f è totale se dom(f) = X1, …, Xn-121\n22",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#11": "9/28/2021\n1202-linguaggio -e-grammatiche -24\n23Funzione suriettiva\ndominiocodominioX1 … Xn-1 Xn•una funzione f è suriettiva se cod(f) = Xn\n24Funzione iniettiva\ndominiocodominioX1 … Xn-1 Xn•una funzione f è iniettiva se |f-1(xn)|=123\n24",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#12": "9/28/2021\n1302-linguaggio -e-grammatiche -24\n25Funzione biiettiva\ndominiocodominioX1 … Xn-1 Xn•una funzione f è biiettiva (biiezione) se è \niniettiva, suriettiva e totale\n26Alfabeto\n•un alfabeto è un insieme finito non vuoto di \nsimboli (caratteri)\n•esempi:\n{‘M’, ‘C’, ‘L’, ‘X’, ‘I’, ‘V’}\n{‘0’, ‘1’}\n{‘0’, ‘1’, ‘2’, ‘3’, ‘4’, ‘5’, ‘6’, ‘7’, ‘8’, ‘9’}\n{‘a’, ‘b’, ‘c’, ‘d’, ‘e’, ‘f’, ‘g’, ‘h’, ‘i’, ‘l’, ‘m’, \n‘n’, ‘o’, ‘p’, ‘q’, ‘r’, ‘s’, ‘t’, ‘u’, ‘v’, ‘z’}25\n26",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#13": "9/28/2021\n1402-linguaggio -e-grammatiche -24\n27Concatenazione\n•dato un alfabeto , definiamo l’operazione binaria \nconcatenazione (denotata con “ ◦”)\na◦b= abcon a, b\n•indichiamo con anla concatenazione di acon se stessa n \nvolte\nesempio: a4 = a◦a◦a◦a= aaaa\n•l’operazione “ ◦” è associativa ma non commutativa\n•dati e “◦” definiamo +come l’insieme delle stringhe \n(parole) di lunghezza finita\n•se a +aggiungiamo la stringa vuota = “” otteniamo *\n28Linguaggio\n•un linguaggio è un sottoinsieme di *\n•*è detto linguaggio universale\n•il linguaggio vuoto non contiene stringhe \n(nota che coincide con l’insieme vuoto )\n–attenzione:\n\n{}27\n28",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#14": "9/28/2021\n1502-linguaggio -e-grammatiche -24\n29Operazioni sui linguaggi\nL1e L2linguaggi\n•unione\nL1L2= {x*| xL1x L2}\nL1= L1\n•intersezione\nL1L2= {x*| xL1x L2}\nL1= \n•complementazione\nL1={x*| xL1}\n30Operazioni sui linguaggi\nL1e L2linguaggi\n•concatenazione o prodotto\nL1◦L2= {x*|\nx1L1x2L2tali che x = x1◦x2}\nL ◦{} = {} ◦L = L\nesempio :\nL1= {an | n1};  L2= {bm | m1};   L1◦L2= {an bm | n,m1}\n•potenza Lhdi un linguaggio L\nL0= {}\nLh= L ◦Lh-1, per h 129\n30",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#15": "9/28/2021\n1602-linguaggio -e-grammatiche -24\n31Operatore di Kleene\n•chiusura riflessiva e transitiva di un linguaggio\nL*= Lh\nL* *={}\nesempio : L={aa} L*={a2n|n0}\n•chiusura transitiva (non riflessiva) di un \nlinguaggio\nL+= Lh\nesempio : L={aa} L+={a2n|n1}\nL*=L+ {}\nh=0\n\nh=1\n32Espressioni regolari\n•è uno strumento per descrivere linguaggi (vedremo nel seguito quali)\n•dato un alfabeto , si definisce espressione regolare ogni stringa r\nr({+, *, (, ), ◦, })+\n•tale che:\n1.r=oppure\n2.roppure\n3.r=(s+t) oppure r=(s◦t) oppure r=s*, con se tespressioni regolari\nespressione linguaggio\n \na {a}\n(s+t) L(s)L(t)\n(s◦t) L(s)◦L(t)\ns*L(s)*semantica31\n32",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#16": "9/28/2021\n1702-linguaggio -e-grammatiche -24\n33Espressioni regolari\ni linguaggi rappresentabili con espressioni regolari sono una \ninteressante sottoclasse stè forma sintetica di s◦tforma sintetica\nespressioni sintetiche si ottengno definendo delle \nprecedenze tra gli operatori: *> ◦> +\nesempio : \n(a+(b(cd))) = a+bcdforma sinteticaesempio : \n(a+b)*rappresenta L=({ a}{b})*\nesempio : \n(a+b)*arappresenta L={x|x {a,b}*“x termina con a”}\n34Esercizio\ndata una mappa stradale, scrivere un’espressione regolare che \ndefinisca tutti i percorsi possibili tra A e B\nadec +adg+fec+fg= \n= ad(ec+g) + f(ec+g) = \n= (ad+f)(ec+g)A Ba d c e\nf g\n33\n34",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#17": "9/28/2021\n1802-linguaggio -e-grammatiche -24\n35Esercizio\ndata una mappa stradale, scrivere un’espressione regolare che \ndefinisca tutti i percorsi possibili tra A e B\nf(ebd)*gA Bd e\nf gb\n36Esercizio\ndata una mappa stradale, scrivere un’espressione regolare che \ndefinisca tutti i percorsi possibili tra A e B\na(deb)*decA Ba d c eb\n35\n36",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#18": "9/28/2021\n1902-linguaggio -e-grammatiche -24\n37Esercizio\ndata una mappa stradale, scrivere un’espressione regolare che \ndefinisca tutti i percorsi possibili tra A e B\na(deb)*dgA Ba d e\ngb\n38Esercizio\ndata una mappa stradale, scrivere un’espressione regolare che \ndefinisca tutti i percorsi possibili tra A e B\nf(edb)*ecA Bd c e\nfb\n37\n38",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#19": "9/28/2021\n2002-linguaggio -e-grammatiche -24\n39Esercizio\ndata una mappa stradale, scrivere un’espressione regolare che \ndefinisca tutti i percorsi possibili tra A e B\nf(ebd)*g+ f(ebd)*ec+ a(deb)*dec+ a(deb)*dg=\n= f(ebd)*(g+ec) + a(deb)*d(g+ec) =\n= (f(ebd)*+a(deb)*d) (g+ec) =\n= (f+ad)(ebd)*(g+ec)A Ba d c e\nf gb\n40Le grammatiche formali\n1940 Post e Markof, riscrittura e derivazione di \nstringhe\n1950 Chomsky, classificazione delle grammatiche \nnell’ambito degli studi sul linguaggio \nnaturale\n1960 Backus Naur Form per descrivere Algol•approccio generativo alla descrizione dei \nlinguaggi\n•metodo di costruzione delle stringhe basato sulla \nriscrittura39\n40",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#2": "9/28/2021\n302-linguaggio -e-grammatiche -24\n5Insiemi\n•consideriamo insiemi finiti e insiemi infiniti\n•|A| = cardinalità dell’insieme (finito ) A\n•alcuni insiemi infiniti di numeri:\nN naturali (contiene zero)\nN+ naturali positivi\nZ interi relativi\nZ+interi positivi\nZ- interi negativiQ razionali relativi\nQ+ razionali positivi\nQ-razionali negativi\nR reali\nR+ reali positivi\nR-reali negativi\n6Sottoinsiemi e insiemi uguali\n•datidue insiemi A e B, se\nx B x A\nallora B è sottoinsieme di A, e siscrive B A\n•ogni insieme è sottoinsieme di se stesso\n•l’insieme vuotoè sottoinsieme di ogni insieme\n•se A e B sono finiti , allora B A |B| |A|\n•A e B insiemi uguali\nA=B (x A x B)\nsipuòscrivere anche\nA=B (A B B A)\n•A è sottoinsieme proprio di B (A B) se \n(A B) (A B)5\n6",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#20": "9/28/2021\n2102-linguaggio -e-grammatiche -24\n41Grammatiche formali\n•grammatiche di Chomsky\n•-produzioni\n•riconoscimento di linguaggi\n42Grammatiche di Chomsky\nunagrammatica è una quadrupla \nG=<VT, VN, P, S>\n•VT è l’alfabeto (finito) di simboli terminali\n•VNè un insieme (finito) di simboli non terminali , o \ncategorie sintattiche , tale che VN= \n•P, detto insieme delle produzioni , è una relazione \nbinaria finita su\n(VTVN)*◦VN◦(VTVN)*(VTVN)*\n•SVNè l’assioma<,>P si indica generalmente con →forma sintetica41\n42",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#21": "9/28/2021\n2202-linguaggio -e-grammatiche -24\n43Esempio\nuna grammatica definisce implicitamente tutte le stringhe \ndi terminali generabili a partire dall’assioma tramite una \nsequenza di riscritture\nesempio:\nG=<{a, b, c}, {S, B, C}, P, S>, con P composto da:\nS → aSS → B B → bB\nB → bCC → cCC → c\ngenera L(G) = { anbmch| n0, m, h1}\n→ 1→ 2 …→ n\nviene anche indicato con\n→ 1| 2|…|nforma sintetica\n44Linguaggio generato\n•derivazione diretta : relazione su\n(V*◦VN◦V*) V*\n<,> appartiene alla relazione (si scrive  ) se\n V*◦VN◦V*ed ,,V*t.c. ==e →P\ne sono dette forme di frase\n•derivazione : chiusura riflessiva e transitiva della \nderivazione diretta, si rappresenta con *\n•il linguaggio generato da G è L(G) = {x|x VT*S*x}\n•due grammatiche G1e G2sono equivalenti se \nL(G1)=L(G2)\ntalvolta al posto di *forma sinteticaVTVNviene talvolta indicato con Vforma sintetica43\n44",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#22": "9/28/2021\n2302-linguaggio -e-grammatiche -24\n45Grammatiche formali\nesempio : generazione di { anbncn|n1}\ngrammatica G=<{ a, b, c},{S,B,C,F,G},P,S>\ncon P composto da\nS → aSBC CB → BC\nSB → bFFB → bF\nFC → cGGC → cG\nG → \nper generare aabbcc\nSaSBC aaSBCBC aaSBBCC\naabFBCC aabb FCC aabbc GC\naabbcc G aabbcc\n46Grammatiche formali\nosservazione : non è detto che una sequenza di derivazioni \nporti ad una stringa del linguaggio\nesempio : \nla grammatica G=<{ a, b, c}, {S, A}, P, S> con\nS → aSc| A\nA → bAc| \ngenera {anbmcn+m|n,m0}\nesempio : \nla grammatica G=<{a, b, c}, {S, A}, P, S> con\nS → Ab\nA → Sa\ngenera 45\n46",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#23": "9/28/2021\n2402-linguaggio -e-grammatiche -24\n47Grammatiche di Chomsky\n•di tipo 0, non limitate\n•di tipo 1, context sensitive, contestuali\n•di tipo 2, context free (CF), non contestuali\n•di tipo 3, lineari destre (RL), regolari\n48Grammatiche di Chomsky\ndi tipo 0, non limitate\n•sono le meno restrittive\n•produzioni del tipo\n→, V*◦VN◦V*, V*\nammettono anche derivazioni che accorciano stringhe\nlinguaggi di tipo 0\nesempio :\nil linguaggio { anbn|n1} è di tipo 0 in quanto generato da\nS → aAB B → b\naA → aaAbaAb→ ab\naAA → aA 47\n48",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#24": "9/28/2021\n2502-linguaggio -e-grammatiche -24\n49Grammatiche di Chomsky\ndi tipo 1, context sensitive, contestuali\n•produzioni che non riducano la lunghezza delle forme di frase\n→, ||≤||, V*◦VN◦V*, V*\nlinguaggi di tipo 1\nesempio :\nil linguaggio { anbncn|n1} è di tipo 0 in quanto generato da\nS → aSBC CB → BC \nSB → bF FB → bF\nFC → cG GC → cG\ncG → c\nma è anche di tipo 1, infatti è generato anche da\nS → aSBc| aBc\ncB → Bc\nbB → bb\naB → ab\n50Generazione di stringhe di anbncn\n(1)S → aSBc | aBc    (2)cB → Bc \n(3)bB → bb (4)aB → ab\nSaSBc\naaSBcBc\naaaSBcBcBc\naaaaBcBcB cBc\naaaaBcB cBBcc \naaaaBcBB cBcc \naaaaB cBBBccc \naaaaBB cBBccc \naaaaBBB cBccc aaaaBBBBcccc\naaaabBBBcccc\naaaab bBBcccc\naaaabb bBcccc\naaaabbbbcccc49\n50",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#25": "9/28/2021\n2602-linguaggio -e-grammatiche -24\n51Grammatiche di Chomsky\ndi tipo 2, context free (CF), non contestuali\n•produzioni del tipo\nA→, AVN, V+\nlinguaggi di tipo 2\nesempio :\nil linguaggio { anbn|n1} è di tipo 0 in quanto generato da\nS → aAb\naA → aaAb\nA → \nma è anche di tipo 2, infatti è generato anche da\nS → aSb| ab\n52Esempi di linguaggi di tipo 2\nlinguaggio delle espressioni aritmetiche con la variabile i (come per \nesempio “i*i+(i*i+(i))*i*i ”, oppure “((i+i)*i) ”). \nL’assioma è E. \nE → E+T | T\nT → T*F | F\nF → i| (E)\ngrammatica delle parentesi ben bilanciate (esempio “ (((())))() ”)\nS → ()| SS | (S)\nda quale sequenza di produzioni è generata “ ()((()())) ” ?\ngrammatica delle stringhe palindrome (esempio “elle”, “ereggere”)51\n52",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#26": "9/28/2021\n2702-linguaggio -e-grammatiche -24\n53Grammatiche di Chomsky\ndi tipo 3, lineari destre (RL), regolari\n•produzioni del tipo\nA→, AVN, (VT◦VN)VT\n•linguaggi di tipo 3\nesempio :\nil linguaggio {anb|n0} è di tipo 3 in quanto generato da\nS → aS\nS → b\nsi possono anche definire grammatiche lineari sinistre (LL) con \nA→, AVN, (VN◦VT)VT\nesempio : il linguaggio { anb|n0} è anche generato da\nS → Tb| b\nT → a| Ta\nteorema : i linguaggi generati da grammatiche LL e RL coincidono\n54Grammatiche di Chomsky\nun linguaggio è strettamente di tipo n se esiste una \ngrammatica di tipo n che lo genera e non esiste una \ngrammatica di tipo m>n che lo genera\nesempio : il linguaggio { anbn|n1} è generato da \nuna grammatica di tipo 2 e non è generato da \nnessuna grammatica di tipo 353\n54",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#27": "9/28/2021\n2802-linguaggio -e-grammatiche -24\n55Grammatiche di Chomsky\ncontenimento tra i linguaggitipo 0\ntipo 1\ntipo 2\ntipo 3\n56Grammatiche di Chomsky\nquadro riassuntivo della classificazione delle \ngrammatiche secondo Chomskytipo produzioni vincoli\ntipo 0\nnon limitate→ V*◦VN◦V*, V*\ntipo 1\ncontestuali→||≤||\nV*◦VN◦V*, V*\ntipo 2\nnon contestualiA→ AVN, V+\ntipo 3\nregolariA→ AVN, (VT◦VN)VT55\n56",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#28": "9/28/2021\n2902-linguaggio -e-grammatiche -24\n57-produzioni\n•con grammatiche di tipo1, 2, 3 non è possibile\ngenerare la stringa vuota\n–per generare occorre una produzione →che\nviene detta-produzione\n–per Chomsky tutti ilinguaggi checontengono -\nproduzioni sono linguaggi di tipo0\n•qual è l’impatto sui corrispondenti linguaggi\ndelle-produzioni nelle grammatiche ?\n–se ammettiamo -produzioni dobbiamo fare \nattenzione , altrimenti rischiamo di snaturare la \ngerarchia di Chomsky\n58-produzioni : variazione della gerarchia\ncon le seguenti modifiche , ilinguaggi generati dale \ndiverse tipologie di grammatiche rimangono inalterati , \nsalvo per la possibilità di generare la stringa vuota\ntipo-produzioni ammesse\n0 tutte (per definizione)\n1 solo sull’assioma quando quest’ultimo non \ncompare mai a destra di una produzione\n2 tutte\n3 tutte57\n58",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#29": "9/28/2021\n3002-linguaggio -e-grammatiche -24\n59Esempi di grammatiche\n•il linguaggio {w ◦w| w (a+b)*}\n•è generato dalla grammatica contestuale\nS → T | \nT → aAT | bBT | A0a| B0bAa→ aA\nAb→ bA\nBa→ aB\nBb→ bBAA0→ A0a\nBA0→ A0b\nAB0→ B0a\nBB0→ B0b(1) (2) (3)\nA0→ a\nB0→ b(4)\n•le (1) generano insieme caratteri della prima e della seconda \nstringa; A0(B0) è l’ultimo carattere della prima stringa\n•le (2) e le (3) separano la prima stringa dalla seconda\n•le (4) chiudono la generazione, se sono applicate troppo presto \nil processo diverge\n60Esempi di grammatiche\n•il linguaggio {(x #)*| x = permutazione di (a,b,c)} (che contiene \nper esempio le stringhe , abc# , acb# , bac#cab# , ecc)\n•ma è generato anche dalla grammatica CF:\nS → E#S |  E → abc | acb | cba | cab | bac | bca\n•ed anche dalla grammatica regolare:\nS → aX | bY | cZ | \nX → bX| cX\nX→ cR\nX→ bRR → #S\nY → aY| cY\nY→ cR\nY→ aRZ → aZ| bZ\nZ→ bR\nZ→ aRS → S’ |  A → a\nB → b\nC → cAB → BA\nAC → CA\nBC → CBS’ → ABC#\nS’ → ABC#S’è generato dalla grammatica contestuale:59\n60",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#3": "9/28/2021\n402-linguaggio -e-grammatiche -24\n7Insieme delle parti\nA\nP(A)l’insieme dei sottoinsiemi di A è detto l’ insieme delle parti di A e si \nindica con P(A) o 2A\nse A è finito e |A| = n allora |P(A)| = 2n\n8Operazioni tra insiemi\n•unione C = A B\n–se A e B sono finiti |C| |A|+|B|\n–commutativa e associativa\n•intersezione C=A B\n–se A e B sono finiti |C| min{|A|, |B|}\n–commutativa e associativa\n–l’intersezione è distributiva rispetto all’unione\n•partizione di A\n–insieme di n sottoinsiemi di A tali che \nA1A2… An= A\ni j AiAj= A B\nA B\nA7\n8",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#30": "9/28/2021\n3102-linguaggio -e-grammatiche -24\n61Forma normale di Backus\n•la BNF è una notazione CF con alcuni accorgimenti \nsintattici che ne aumentano la leggibilità\n<sequenza istruzioni> ::= <istruzione>; \n{<istruzione>;}\n<istruzione if> ::= if ( <condizione> ) \n<istruzione> [else <istruzione>]esempio\npuò essere riscritto:\nQ → I;| I;Q\npuò essere riscritto:\nF → if( C )I else I | if( C )I\n62Riconoscimento dei linguaggi\n•esistono linguaggi a cui non corrisponde alcun algoritmo \ndi decisione\n•i linguaggi di tipo 3 sono riconosciuti da dispositivi con \nmemoria costante in tempo lineare (automi a stati finiti)\n•i linguaggi strettamente di tipo 2 sono riconosciuti da \ndispositivi non deterministici con pila in tempo lineare \n(automi a pila non deterministici)problema : \nstabilire se una stringa appartiene ad un dato linguaggio61\n62",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#31": "9/28/2021\n3202-linguaggio -e-grammatiche -24\n63Riconoscimento dei linguaggi\n•i linguaggi strettamente di tipo 1 sono riconosciuti da \ndispositivi non deterministici con memoria che cresce \nlinearmente con la lunghezza della stringa da esaminare \n(automi non deterministici “linear bounded”)\n•i linguaggi strettamente di tipo 0 sono riconosciuti da \nmacchine di Turing con memoria e tempo illimitati\n–è possibile che non esista un algoritmo di decisione ma un \nprocesso semidecisionale, in cui, se la stringa non fa parte del \nlinguaggio non è detto che la computazione termini\n63",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#4": "9/28/2021\n502-linguaggio -e-grammatiche -24\n9Operazioni tra insiemi\n•complemento di B rispetto ad A\nC = A -B = {x| xA xB}\n•differenza simmetrica o somma disgiunta\nA+B=AB-(A B)\n•prodotto cartesiano C=A B\nC= {x,y| xA yB}\n–insieme di tutte le possibili coppie ordinate\n–il prodotto cartesiano è associativo ma non commutativoA BA B\n10Relazioni\n•siano A1, A2, …, Ann insiemi \n(non necessariamente distinti)\n•una relazione n -aria è un sottoinsieme di \nesempio :\n–la relazione “ minore di ” definita sui naturali è l’insieme \nR NN = N2, dove R= {x,y| xy}A1A2…An\nR A1A2…An9\n10",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#5": "9/28/2021\n602-linguaggio -e-grammatiche -24\n11Relazione d’ordine\n•RA2=A A è una relazione d’ordine se valgono le \nseguenti proprietà:\n1.riflessività\nx,xR\n2.antisimmetria\nx,yRy,xRx=y\n3.transitività\nx,yRy,zRx,zR\nun insieme su cui è definita una relazione d’ordine si dice \nparzialmente ordinato o poset (“partially ordered set”)\nesempio : la relazione “ ” è una relazione d’ordine su N\n12Relazione d’ordine totale\n•una relazione d’ordine R A2è detta totale se\nx,yA2 x,yR y,xR\nesempio :\nla relazione “ ” è una relazione d’ordine totale su N\n1 2 3 4 5 6 7 8 …11\n12",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#6": "9/28/2021\n702-linguaggio -e-grammatiche -24\n13Relazione di equivalenza\n•RA2= AA è una relazione di equivalenza se valgono \nle seguenti proprietà:\n1.riflessività\nx,xR\n2.simmetria\nx,yRy,xR\n3.transitività\nx,yRy,zRx,zR \nesempio : la relazione “= ”è una relazione di equivalenza su R\n14Relazione di equivalenza\n•un insieme A su cui è definita una relazione di \nequivalenza si può partizionare in sottoinsiemi \nmassimali di equivalenza , detti classi di \nequivalenza\n•l’insieme delle classi di equivalenza di A è \ndetto insieme quoziente e si denota A/R \n•un elemento di A/R si denota con [a]\n•il numero di classi di A/R si chiama indice di R13\n14",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#7": "9/28/2021\n802-linguaggio -e-grammatiche -24\n15Esempio di relazione di equivalenza\n•consideriamo la relazione Eksu N\nn k m\nse esistono q, q ′, r (con r<k) tali che\nn=qk+r    e    m=q′k+r\n•Ekè una relazione di equivalenza\n•le sue classi sono le classi resto rispetto alla \ndivisione per k\n16Operazioni su relazioni\n•unione\nR1R2={x,y|x,yR1x,yR2}\n•complementazione\nR={x,y|x,yR}\n•chiusura transitiva\nR+  ={x,y|\ny1, …,ynA, n2, y1=x, yn=y\ntali che\nyi,yi+1R, i=1, …,n -1} \n•chiusura transitiva e riflessiva\nR*=R+{x,x|xA}15\n16",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#8": "9/28/2021\n902-linguaggio -e-grammatiche -24\n17Chiusure di relazioni\n2\n31\n54\n2\n31\n542\n31\n54chiusura transitivachiusura transitiva\ne riflessiva\n18Funzioni\nR X1 … Xn\nè una relazione funzionale se\nx1, …, xn-1X1 … Xn-1\nesiste al più un elemento xn Xntale che\nx1, …, xn-1, xnR\nsi chiama funzione la legge che associa x1, …, xn-1ad xn\nf(x1, …, xn-1) = xn\nf: X1 … Xn-1→Xn\nX1 … Xn-1è il tipodella funzione17\n18",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\020-linguaggi-e-grammatiche-24.pdf#9": "9/28/2021\n1002-linguaggio -e-grammatiche -24\n19Funzioni: dominio codominio\ndom(f) = dominio di f\nsottoinsieme di X1 … Xn-1\ndom(f) = { x1, …, xn-1X1 … Xn-1|\nxn Xnf(x1, …, xn-1) = xn}\ncod(f) = codominio di f\nsottoinsieme di Xn\ncod(f) = { xn Xn|\nx1, …, xn-1X1 … Xn-1\nf(x1, …, xn-1) = xn}\n20Funzioni: fibra\ndato un xn\nf-1(xn) = controimmagine o fibra di xn\nsottoinsieme di X1 … Xn-1\nf-1(xn) = {x1, …, xn-1X1 … Xn-1|\nx1, …, xn-1dom(f)\n\nf(x1, …, xn-1) = xn}19\n20",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\022-espressioni-regolari-07.pdf#0": "1Esercizi di Informatica Teorica\nEspressioni regolari\nqueste esercitazioni sono il frutto del lavoro di molte persone, tra le quali \nLuca Cabibbo, Walter Didi mo e Giuseppe Di Battista",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\022-espressioni-regolari-07.pdf#1": "2\nNotazione sulla difficoltà degli esercizi\nfacile\nnon difficile\ndifficile\nmolto difficile\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\022-espressioni-regolari-07.pdf#10": "11Espressioni regolari\nesercizio 2\nquali linguaggi sono descritti dalle seguenti espressioni regolari? \n2.a 1(0+1)*\n2.b (0+1)*1(0+1)*\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\022-espressioni-regolari-07.pdf#11": "12Espressioni regolari\nesercizio 3\nscrivere le espressioni regolari corrispondenti ai seguenti linguaggi \nsu Σ=  { 0, 1}\n3.a tutte le sequenze alternate (cioè che non contengono né 00\nné11) di 0e 1che iniziano e finiscono per 1o che iniziano \ne finiscono per 0\n3.b tutte le sequenze con un numero pari di 0",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\022-espressioni-regolari-07.pdf#12": "13Espressioni regolari\nesercizio 4\nscrivere l’espressione regolare che descrive il complemento dei \nseguenti linguaggi su Σ=  { 0, 1}\n4.a 1(0+1)*\n4.b 0*+1*\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\022-espressioni-regolari-07.pdf#13": "14Espressioni regolari\nesercizio 5\nsemplificare le seguenti espressioni regolari su Σ={a, b, c}\n5.a (a*b+b*cb)*\n5.b ((a*b*)*(b*a*)*)*\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\022-espressioni-regolari-07.pdf#14": "15Espressioni regolari\nesercizio 6\ndeterminare le espressioni re golari per i seguenti linguaggi\n6.a i numeri naturali in notazione binaria \n6.b i numeri binari su 4 bit \n6.c i numeri naturali in base 10\n6.d i numeri naturali pari \n6.e i numeri pari in base 3\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\022-espressioni-regolari-07.pdf#15": "16Soluzioni\nsoluzione esercizio 3\n3.a (10)*1+(01)*0\n3.b 1*(01*01*)*\nsoluzione esercizio 4\n4.a (0(0+1)*)*\n4.b ((1+0)*0(1+0)*1(1+0)*)+((1+0)*1(1+0)*0(1+0)*) \noppure \n(0+1)*(01+10)(0+1)*",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\022-espressioni-regolari-07.pdf#16": "17Soluzioni\nsoluzione esercizio 6\n6.a i numeri naturali in notazione binaria \n0+1(0+1)*\n6.b i numeri binari su 4 bit \n(0+1) (0+1) (0+1) (0+1)\n6.c i numeri naturali in base 10\n0+(1+2+3+4+5+6+7+8+9)(0+1+2+3+4+\n5+6+7+8+9)*",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\022-espressioni-regolari-07.pdf#17": "18Soluzioni\n6.d i numeri naturali pari \n(0+2+4+6+8)+(1+2+..+9)(0+1+..+9)*(0+2+4+6\n+8)\n6.e i numeri pari in base 3\nsi noti che i numeri pari in base tre sono tutte e \nsole quelle sequenze di cifre in { 0,1,2} con un \nnumero pari di 1\nSia α= (2(0+2)*) e β= (1(0+2)*1(0+2)*)\nIl linguaggio è rappresentabile da:\nαα*β*+  α*ββ*+  0",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\022-espressioni-regolari-07.pdf#2": "3Espressioni regolari\nesercizio 1\ndire se le seguenti affermazioni sono vere o false:\n1.a L(∅*) = ∅\n1.b baa ∈L(a*b*a*b*)\n1.c abcd ∈L( (a (cd)*b)*)\n1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)\n1.e L((ab)*)∩L((cd)*)=  ∅\n1.f L((abb + a)*a) = L(a(bba + a)*)\n1.g L((a+b)*) = L((a*b*)*)\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\022-espressioni-regolari-07.pdf#3": "4Espressioni regolari\nesercizio 1\ndire se le seguenti affermazioni sono vere o false:\n1.a L(∅*) = ∅\n1.b baa ∈L(a*b*a*b*)\n1.c abcd ∈L( (a (cd)*b)*)\n1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)\n1.e L((ab)*)∩L((cd)*)=  ∅\n1.f L((abb + a)*a) = L(a(bba + a)*)\n1.g L((a+b)*) = L((a*b*)*)\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\022-espressioni-regolari-07.pdf#4": "5Espressioni regolari\nesercizio 1\ndire se le seguenti affermazioni sono vere o false:\n1.a L(∅*) = ∅\n1.b baa ∈L(a*b*a*b*)\n1.c abcd ∈L( (a (cd)*b)*)\n1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)\n1.e L((ab)*)∩L((cd)*)=  ∅\n1.f L((abb + a)*a) = L(a(bba + a)*)\n1.g L((a+b)*) = L((a*b*)*)\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\022-espressioni-regolari-07.pdf#5": "6Espressioni regolari\nesercizio 1\ndire se le seguenti affermazioni sono vere o false:\n1.a L(∅*) = ∅\n1.b baa ∈L(a*b*a*b*)\n1.c abcd ∈L( (a (cd)*b)*)\n1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)\n1.e L((ab)*)∩L((cd)*)=  ∅\n1.f L((abb + a)*a) = L(a(bba + a)*)\n1.g L((a+b)*) = L((a*b*)*)\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\022-espressioni-regolari-07.pdf#6": "7Espressioni regolari\nesercizio 1\ndire se le seguenti affermazioni sono vere o false:\n1.a L(∅*) = ∅\n1.b baa ∈L(a*b*a*b*)\n1.c abcd ∈L( (a (cd)*b)*)\n1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)\n1.e L((ab)*)∩L((cd)*)=  ∅\n1.f L((abb + a)*a) = L(a(bba + a)*)\n1.g L((a+b)*) = L((a*b*)*)\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\022-espressioni-regolari-07.pdf#7": "8Espressioni regolari\nesercizio 1\ndire se le seguenti affermazioni sono vere o false:\n1.a L(∅*) = ∅\n1.b baa ∈L(a*b*a*b*)\n1.c abcd ∈L( (a (cd)*b)*)\n1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)\n1.e L((ab)*)∩L((cd)*)=  ∅\n1.f L((abb + a)*a) = L(a(bba + a)*)\n1.g L((a+b)*) = L((a*b*)*)\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\022-espressioni-regolari-07.pdf#8": "9Espressioni regolari\nesercizio 1\ndire se le seguenti affermazioni sono vere o false:\n1.a L(∅*) = ∅\n1.b baa ∈L(a*b*a*b*)\n1.c abcd ∈L( (a (cd)*b)*)\n1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)\n1.e L((ab)*)∩L((cd)*)=  ∅\n1.f L((abb + a)*a) = L(a(bba + a)*)\n1.g L((a+b)*) = L((a*b*)*)\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\022-espressioni-regolari-07.pdf#9": "10Espressioni regolari\nesercizio 1\ndire se le seguenti affermazioni sono vere o false:\n1.a L(∅*) = ∅\n1.b baa ∈L(a*b*a*b*)\n1.c abcd ∈L( (a (cd)*b)*)\n1.d L(a*b*)∩L(b*a*)=  L ( a*+b*)\n1.e L((ab)*)∩L((cd)*)=  ∅\n1.f L((abb + a)*a) = L(a(bba + a)*)\n1.g L((a+b)*) = L((a*b*)*)\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#0": "1Informatica Teorica\nCardinalità transfinite",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#1": "2Pidgeonhole principle\nteorema : \ndati due insiemi A e B tali che\n0 < |B| < |A| < ∞\nnon esiste una funzione f: A →B che sia totale e \niniettiva\ndimostrazione : \nbasata sulla cardinalità di B e per induzione",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#10": "11Numerabilità degli interi relativi\nteorema : \nl’insieme Z degli interi relativi è numerabile\ndimostrazione : \nbiiezione con N\nZ:01-12-23-34-4…\nN : 012345678…",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#11": "12Numerabilità dei numeri pari ( א0 + א0= א0)\nteorema : \nl’insieme P dei numeri pari è numerabile\ndimostrazione : \nbiiezione con N\nP:024681 0 1 2 1 4 1 6 …\nN : 012345678…",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#12": "13Numerabilità: א0×א0 = א0\nteorema : \nl’insieme N2delle coppie di naturali è numerabile\ndimostrazione : \ntecnica usata da Cantor per mostrare la \nnumerabilità di Q\n0    1    2    3    4\n00    1    3    6    10\n12    4    7    11\n25    8    12 \n39   13\n414osservazione : \nper ogni n ∈N, se A è numerabile, \nanche Anè numerabile",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#13": "14Insiemi non numerabili\nper dimostrare la non numerabilità di un insieme si \nusa la tecnica di diagonalizzazione di Cantor\nteorema :  R non è numerabile\ndimostrazione : \n1. dimostriamo che R è equinumeroso a (0,1)\n2. dimostriamo che (0,1) non è numerabile",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#14": "15Insiemi non numerabili\n(0,1) e R sono equinumerosi:  una biiezione è data, per\nesempio, dalla funzione y =\n00.10.20.30.40.50.60.70.80.91\n- 1 0 - 9- 8- 7- 6- 5- 4- 3- 2- 1 0 1 2 3 4 5 6 7 8 9 1 0(2x+1)1\ny\nx",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#15": "16Insiemi non numerabili\n• Supponiamo per assurdo che una enumerazione \ndi (0,1) esista, denotiamo con Φil’iesimo \nelemento di (0,1)\n• consideriamo r ∈(0,1) che ha come i-esima cifra \ndella mantissa (i=1, 2, …) un valore diverso da 0, \nda 9, e dal valore della i-esima cifra di Φi",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#16": "17Insiemi non numerabili\nr, detto elemento diagonale , non fa parte della \nenumerazione, in quanto differisce da ogni elemento della enumerazione in almeno una cifra, e ciò è\nassurdocifre delle mantisse di Φ\ni:\n1234567…\nΦ15104396…\nΦ22410000…\nΦ37985377…\nΦ40046031…\nr 6517 …………",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#17": "Nota sulla scelta delle cifre di r\n• le cifre dell’elemento diagonale rsono scelte in \nmodo da essere diverse da 0 e da 9\n– non si può generare la mantissa 0000… che non \nappartiene all’insieme\n– non si possono generare numeri terminanti con 9 \nperiodico che corrispondono ad una seconda \nrappresentazione di un numero non-periodico\n• 0.999… coincide con 1\n• 0.123999… coincide con 0.124\n18",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#18": "19Insiemi non numerabili\nteorema :  P(N) non è numerabile\ndimostrazione :\nsupponiamo per assurdo che lo sia\nsia P1, P2, …, Pi, … una sua enumerazione\na ciascun Piassociamo la sequenza\nbi0, bi1, bi2, …, dove\nbij=0 se j∉Pi\nbij=1 se j∈Pi",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#19": "20Insiemi non numerabili\ncostruiamo ora l’insieme P(diagonale) con \nsequenza p0, p1, …, pk,… dove\npk= 1 - bkk\nPdifferisce da ogni Pi, in quanto\ni∈P⇔i∉Pi\nosservazione : la non numerabilità di P(N) vale \nanche per l’insieme delle parti di ogni insieme di \ncardinalità א0",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#2": "3Pidgeonhole principle\nma questa \nassegnazione \nnon è totale!",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#20": "21Cardinalità transfinite\nteorema : R è equinumeroso a P(N) ed è quindi \ncontinuo\ndimostrazione : \nè sufficiente mostrare che la proprietà vale per i \nreali in (0,1), vista la biiezione tra R e (0,1)\nuso della rappresentazione binaria della mantissa e \ndel concetto di funzione caratteristica",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#21": "22Cardinalità transfinite – notazione aleph\n• se un insieme finito ha cardinalità n, il suo \ninsieme delle parti ha cardinalità 2n\n• analogamente, se un insieme infinito ha \ncardinalità א0denotiamo con 2א0la \ncardinalità del suo insieme delle parti\n• gli insiemi con cardinalità 2א0sono detti \ncontinui\n• Cantor ha dimostrato che esistono infiniti \ncardinali transfiniti ( א0, 2א0, 22א0, …)",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#22": "Conseguenze della teoria\n• vedremo come considerazioni relative alla cardinalità di \ninsiemi infiniti daranno interessanti spunti sull’idea di \ncalcolabilità\n• per il momento ci limitiamo alla seguente riflessione\n– un linguaggio è un sottoinsieme di Σ*\n• qual è la cardinalità di Σ*?\n• qual è la cardinalità di P( Σ*)?\n• quanti linguaggi esistono?\n– un programma in un linguaggio di programmazione qualsiasi \npuò essere considerato come una sequenza finita di caratteri\n• quanti sono i possibili progr ammi che possiamo scrivere?\n23",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#3": "4Pidgeonhole principle\n… e questa non \nè iniettiva!\na/1\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#4": "5Dimostrazione (pidgeonhole principle)\n• dimostrazione per induzione\n– passo base: |B|=1\n– passo induttivo: |B|>1\n• passo base (|B|=1)\nB={b}, |A|>1, es. A={a1,a2}\nse f è totale, allora f(a1)=b e f(a2)=b\nallora f non è iniettiva perché |f -1(b)|>1",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#5": "6Dimostrazione (pidgeonhole principle)\n• passo induttivo: |B|>1\nsupponiamo sia vero per |B| = n ed |A| ≥n+1\ndimostriamo che è vero per |B| = n+1 e |A| ≥n+2\nipotizziamo per assurdo che esista una funzione totale \niniettiva f e scegliamo un qualunque elemento b di B\nse |f -1(b)|≥2 ⇒contraddizione ⇒teorema dimostrato\nse |f -1(b)|≤1 consideriamo\nA′=A-{f -1(b)}   e    B ′=B-{b} \n|A′| ≥n+1 > |B′| = n\napplichiamo l’ipotesi induttiva ⇒contraddizione ",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#6": "Considerazioni sul pidgeonhole principle \n• il pidgeonhole principle mette in relazione la \nnumerosità degli insiemi con le proprietà delle funzioni che hanno gli insiemi come domini o codomini\n• in particolare se esiste una funzione biettiva \nf: A→B\n– esiste una funzione totale ed iniettiva f: A →B \n– esiste una funzione totale ed iniettiva f-1: B→A \n– per il pidgeonhole principle non può essere |B| > |A| \nné |A| > |B|\n7",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#7": "8Cardinalità di insiemi infiniti\n• due insiemi sono equinumerosi se esiste una \nbiiezione tra essi\n• la relazione di equinumerosità è una relazione \ndi equivalenza\n• possiamo ora dare una definizione rigorosa di \ncardinalità di un insieme finito A:\n|A|=0 se A= ∅\n|A|=n se A è equinumeroso a {0, 1, …, n-1}",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#8": "9Numerabilità\n• insiemi numerabili\n– un insieme è numerabile se è equinumeroso a N\n– un insieme ha cardinalità aleph zero (א0) se è\nequinumeroso a N, cioè se è numerabile\n• insiemi contabili\n– un insieme è contabile se è finito o numerabile\n– sottoinsiemi di insiemi contabili sono contabili",
    "dataExtraction\\data_test\\rootfolder\\universita\\sistemi_inteliggenti\\025-cardinalita-transfinite-06.pdf#9": "10Numerabilità: א0+ k = א0\nteorema : \nper ogni intero k, l’insieme Nkdegli interi \nmaggiori o uguali a k è numerabile\ndimostrazione : \nbiiezione con N\nN : 01234…\nNk:k+0 k+1 k+2 k+3 k+4 …",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#0": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniInformation Visualization\nG. Da Lozzo, V. Di Donato, M. PatrignaniInfovis on the Web\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#1": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniCopyright notice\nAll the pages/slides in this presentation, including but not limited \nto, images, photos, animations, videos, sounds, music, and text (hereby referred to as “materi al”) are protected by copyright\nThis material, with the exception of some multimedia elements \nlicensed by other organizations, is property of the authors and/or organizations appearing in the first slide\nThis material, or its parts, can be reproduced and used for \ndidactical purposes within universities and schools, provided \nthat this happens for non-profit purposes\nAny other use is prohibited, unless explicitly authorized by the\nauthors on the basis of an explicit agreement\nThis copyright notice must always be redistributed together with\nthe material, or its portions",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#10": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: History\n1995\nJS was created by Brendan Eich at Netscape\n1996\nMicrosoft releases \"JScript” for IE3\n1997\nJS was standardized in the \"ECMAScript\" specifications\n2010\nNode.js was released\n2017\nECMAScript 8 was released",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#11": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniECMAScript: Language Core\nVariables\ndeclaration, naming conventions\nData types\nprimitive types \nspecial values  \nloose/dynamic typing\nExpressions\nArrays\nmutator, accessor, and iterator methods\nObjects\nFunctions\nvariables scope, “window” object\nCall Stack\nblocking calls, asynchronous calls, concurrency and event loop",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#12": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Variables (until ECMAScript 5)\nUsed to store values\nDeclaration syntax \nkeyword “var”+ variable-name\nno data type required\nDeclare, then initialize in 2 statements\nOr declare and initialize in one statement\nRe-assign the value latervarx; \nx =5;\nvary =2;\nvarx = 5; \nx =2;",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#13": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Variables (from ECMAScript 6 on)\nThree types of variable declarations\nvar: only global or local (function) scope\n• assigned to object window if in global scope\n• assigned to function block otherwise\nlet: block scope “{ … }” and loop scope\nconst : for read-only variables\nvarx = 2; \n// here x is 2\n{\nletx =1;\n// here x is 1\n}\n// here x is 2 againvarx = 5; \nfor(let x=0; x<10; x++){\n// do something here\n}\n// here x is 5 again",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#14": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Variable names\nSyntax requirements\nbegin with letters, $ or _\n• a variable named “$” has been adopted by  the jQuery library as the shorthand \nglobal namespace reference\nonly contain letters, numbers, $ and _\ncase sensitive\navoid reserved words\n• e.g.: break, const, if, typeof, etc\nBest practices\nchoose clarity and meaning\nprefer camelCase for multipleWords (instead of under_score) ",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#15": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Variable scopes\nA variable with “ local/function ” scope:\nfunction addNumbers(num1, num2) { \nvarlocalResult =num1 +num2; \nconsole.log( \"Local result is: \" +localResult);\n} \naddNumbers( 5, 7); \nconsole.log(localResult); ÎReferenceError: localR esult is not defined\nvarglobalResult; \nfunction addNumbers(num1, num2) { \nglobalResult = num1 + num2;console.log( \"Global result is: \" +globalResult);\n} addNumbers( 5, 7); \nconsole.log(globalResult);A variable with “ global/program ” scope:",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#16": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Warning\nIn the browser the global scope is the window object\nall global variables belong to the window object (e.g., \nwindow.globalResult )\nIf you assign a value to a variable that has not been \ndeclared, it will automatically become a global variable\nthe usage of undeclared variables is discouraged\n// carName not defined\nfunction myFunction() { \ncarName =\"Punto\"; \n}myFunction();var carName;\nfunction myFunction() { \ncarName =\"Punto\"; \n}myFunction();=",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#17": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Expressions\nVariables can also store the result of any expression\nvarx = 28+ 38; \nvarhello = \"Hello \" ;\nvarworld = \"World”;\nvargreeting = hello + world;\nVariables can even store input from users using the prompt \nfunction\nvarname = prompt( \"What's your name?\" );\nconsole.log( 'Hello ' + name);",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#18": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Expressions\nVariables can also store the result of any expression\nvarx = 28+ 38; \nvarhello = \"Hello \" ;\nvarworld = \"World”;\nvargreeting = hello + world;\nVariables can even store input from users using the prompt \nfunction\nvarname = prompt( \"What's your name?\" );\nconsole.log( 'Hello ' + name);\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#19": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Primitive data types\nECMAScript defines six primitive data types\nboolean\nnumber \nstring\nnull\n• the value null represents the inte ntional absence of any object value\n• null is the unique value of type null\nundefined\n• a variable that has not been assigned a value has the value undefined of type \nundefined\nsymbol (new in ECMAScript 6)\n• can be used as a key in an object property",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#2": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniCredits\nParts of this matherial is inspired by \nTM, http://www.teaching-materials.org/\nThe first version of these slides were produced by\nValentino Di Donato Giordano Da Lozzo",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#20": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Non-primitive data types\nTwo data-types are not primitive\nobjects\nfunctions\nThey can be created by the user\nwe will se how to manage them in the following",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#21": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Loose typing\nJavaScript is dynamically typed\nvariables are not directly  associated a static type\nJS figures out the type based on the current value\nany variable can be assigned (and  reassigned) values of any type\n• the type changes as the value changes\ntypeof vname returns a string containing the current type of the \nvariable vname\n•typeof is an operator, not a function\nvarx; \nx = 2;\nconsole.log( typeofx); // yields “number”\nx = \"Hello\";\nconsole.log( typeofx); // yields “string”",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#22": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Loose typing\nAt any moment a variable has only one type\n‘2’ has been converted to string (type coercion) to perform a \nconcatentationvary = 2 + \" cats\"; \nconsole.log( typeofy); // yields “string”",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#23": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Primitive data types\nstring\nany immutable list of chars\nvargreeting = \"Hello world!\" ;\nvar show = \"Breaking bad!\" ;\nvarmyAge = 28; \nvarpi = 3.14;number\ninteger (3,-56) or floating point (5.45)\nboolean\nlogical values true or false (which are constants)\nvartrueValue = true; \nvarfalseValue = false;",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#24": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Special values\nundefined\na value that hasn’t been defined/declared yet\nvarnotDefined;\nconsole.log( typeofnotDefinied); // yields “undefined”\nnull \nan explicitly empty value\nthe operator typeof returns (erroneously) “object” instead of “null”\nvarnullVariable = null;\nconsole.log( typeofnullVariable); // yields “object”\nvar sym = Symbol(’ foo') symbol \nunique identifier created via factory method",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#25": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Type coercion\nType coercion is the automatic conversion of a value from one \ntype to another type in order to perform an operation (assignment, comparison, etc) \nJavaScript has two comparison operators, one with type \ncoercion (==) and one without it (===)\n2 == ‘2’ // type coercion ‐> true\n2 === ‘2’ // no type coercion ‐> false\nvarnotDefined; // type (and value) “undefined”\nvarnullVariable = null; // type “null”\nnotDefined ==nullVariable  // type coercion ‐> true\nnotDefined === nullVariable // no type coercion ‐> false",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#26": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Objects\nObjects are collections of key-value pairs of any type\nvarinstructor ={\nfirstName: \"Giordano\" , \nlastName: \"Da Lozzo\" , \nage: 34,\nfullname: function (){\nreturn this.firstName + \"\"+ this.lastName\n}\n};\nObjects are associative arrays\nbracket notation\ndot notationvar myName = instructor[firstName];\nvar myName = instructor.firstName; ",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#27": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Objects\nObjects inherit their prototype from Object\nloop using the keyword “in”\nfor(varprop ininstructor) { \nif (instructor. hasOwnProperty (prop)) {\nconsole.log( \"property: \" , prop); \nconsole.log( \"value: \" , instructor[ prop]); \n}\n}",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#28": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Objects access\nObject.keys(objectName)\nlists all the property names of objectName\nObject.values(objectName)\nlists all the property values of objectNameObject.keys(aboutMe)\n[\"hometown\", \"hair\"]\nObject.values(aboutMe)\n[\"Rome, IT\", \"brown\"]varaboutMe ={\nhometown: “Rome, IT\" , \nhair: “brown“\n};",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#29": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Arrays\nAn array can hold many ordered values\nthe property length gives you the number of such values \nAn array is actually a special objectvararrayName =[item1, item2, item3];\narrayName.length    // yields 3\ntypeof arrayName;  // yields \"object\"",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#3": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniWeb data visualization: motivations\nVisualizations aren’t truly visual unless they are \nseen. Getting your work out there for others to \nsee is critical, and publishing on the Web is the \nquickest way to reach a global audience\nInteractive Data Visualization for the Web,\nScott Murray ’13",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#30": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Looping within an array\nWe can loop either by using the classical “for”\nOr by using the method “forEach” with a callback function\nthis callback function takes up to three variablesfor(vari =0; i <arrayName. length; i++) {\nconsole.log(arrayName[i]); \n}\n[2, 5, 8, 9].forEach( function (element, index, array) {\nconsole.log( \"Current el: \" , element); \nconsole.log( \"Index of current el: \" , index); \nconsole.log( \"Whole array: \" , array); \n});",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#31": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Array iterators\nThese methods take as arguments functions to be called back \nwhile processing the array\narrayName.forEach\n• calls a function for each element in the array\narrayName.every\n• returns true if every element in this ar ray satisfies the provided testing callback \narrayName.filter\n• creates a new array with all of the elements  for which the provided filtering callback \nreturns true\nCallback functions have parameters: element, index, array",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#32": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Heterogeneous arrays\nAn array can hold values of different types\nprints to the console “boolean” , “string” , “object” , “number”, \n“object”, “function”var arrayName = [ true,\"ciao\",{},2,null, (x) => ‐x];\narrayName. forEach(\nfunction (el){\nconsole.log( typeof el)\n}\n);",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#33": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Array mutators (1/2)\nThese methods modify the array\narray.pop : remove the last element\narray.push : add one or more element to end\narray.shift : remove the first element\narray.unshift : add one or more in front\nvar fruits = [ \"Banana\" , \"Orange\" ];\nfruits.unshift( \"Lemon\");\n// fruits contains [\"Lem on\", \"Banana\", \"Orange”]var fruits = [ \"Banana\" , \"Orange\" ];\nfruits.push( \"Lemon\");\n// fruits contains [ \"Banana\", \"Orange”, \"Lemon\"]",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#34": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Array mutators (2/2)\nThese methods modify the array\narray.reverse : reverse the order\narray.splice : add/remove elements insidevar fruits = [ \"Banana\" , \"Orange\" , \"Lemon\"];\nfruits.reverse();// fruits contains [\"Lem on\", \"Orange\", \"Banana\"]\nvar firstArray = [ 1,2,3,4,5 ];\nvarsecondArray = firstArray.splice(1,3,7,8)\n// firstArray contains [1,7,8,5] // (from pos=1 removed 3 items and inserted 7,8)// secondArray contains [2,3,4] // (all the removed items)",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#35": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Arrays accessors\nThese methods do not modify the array\narray.concat : join the array with other arrays\narray.join : join elements into a string\narray.slice : returns a shallow copy of a portion of an \narray into a new arrayvar fruits = [ \"Banana\" , \"Orange\" , \"Lemon\"];\nfruits.join(); // returns \"Banana, Orange, Lemon\"\n[1,2,3,4,5].slice(1,3); \n// yields [2,3], first included, third excluded",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#36": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Arrays accessors\nThese methods do not modify the array\narray.map: creates a new array from calling a function \nfor every array element \narray.indexOf : find first occurrence\narray.lastIndexOf : find last occurrencevar numbers = [ 9, 4, 16, 25];\nvarnewArray = numbers.map(Math.sqrt); // [3, 2, 4, 5]",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#37": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Functions\nFunctions are re-usable collections of statements\nFirst declare the function\nAlternative declaration\n“arrow functions” were introduced in ECMAScript 6\nThen call itfunction sayMyName(name) { \nconsole.log(name); \n}\nsayMyName( \"Valentino\" );sayMyName = (name) => { \nconsole.log(name); \n}",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#38": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Function parameters\nFunctions can accept any number of named parameters\nOf course you can also pass variables and generic \nexpressionsfunction addNumbers(num1, num2) { \nvar result = num1 + num2;\nconsole.log(result);\n} addNumbers( 7, 20); // 22\naddNumbers( \"Hello\", \" Everybody\" ); // Hello Everybody\nvar number = 5;\naddNumbers(number, 12+ 3)",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#39": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Function parameters\nFunction parameters are passed by value\nchanges to the parameters are not visible outside \nthe function\nObjects are passed by reference\nactually , in JS object references are values\nthus, objects will behave like they are passed by \nreference\n• changes to object properties are visible (reflected) outside \nthe function",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#4": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniWeb data visualization: motivations\nWhy Web visualization services?\nquickest diffusion\nglobal reach\noperating system independency\nHowever we may have browser(s) dependency\nthis problem is more and more marginal",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#40": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Return values\nThe return keyword returns a value to whoever calls the \nfunction (and then exits)\nYou can call functions in expressions or inside function \ncalls:function addNumbers(num1, num2) { \nvarresult =num1 +num2; \nreturnresult; \n// Anything after this line won't be executed\n}; \nvarsum =addNumbers( 3, 7) + addNumbers( 1, 2);\nvarsum2 =addNumbers(addNumbers( 3, 2), addNumbers( 3, 7));",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#41": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniWhere to place your code (1/2)\nBetween the HTML tags <script> and </script>\n<!DOCTYPE html>\n<html><head><script>\nfunction myFunction () { \ndocument.getElementById( \"demo\").innerHTML =“Paragraph changed.\" ; \n} </script></head><body>\n<h1>My Web Page </h1>\n<pid=\"demo\">A paragraph </p>\n<button type=\"button\" onclick= \"myFunction() \">Try it</button>\n</body></html><script>function myFunction () { \ndocument.getElementById( \"demo\").innerHTML =“Paragraph changed.\" ; \n} </script>",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#42": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniWhere to place your code (2/2)\nNormally, scripts are placed in external files with .js \nextension\n<!DOCTYPE html>\n<html><body><script src=\"myScript.js\" >\n</script>\n</body></html>",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#43": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack\nJS is single-threaded\ni.e.: one call stack = one thing at a time\nThe call stack stores the active functions\nThe function at the top of the stack is the one that is \nexecuted\nwhen we step into a function, we push its call on top of the \nstack\nwhen we return from a function (or when it ends), we pop the \nstack",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#44": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack\nStack\nmain()function multiply (a, b) {\nreturn a * b;\n};\nfunction square (n) {\nreturn multiply(n, n);\n};\nfunction printSquare (n) {\nvar squared = square(n);\nconsole.log(squared);\n};\nprintSquare(4);JS is single-threaded\ni.e.: one call stack = one thing at a time",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#45": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack\nStack\nmain()printSquare(4)function multiply (a, b) {\nreturn a * b;\n};\nfunction square (n) {\nreturn multiply(n, n);\n};\nfunction printSquare (n) {\nvar squared = square(n);\nconsole.log(squared);\n};\nprintSquare(4);JS is single-threaded\ni.e.: one call stack = one thing at a time",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#46": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack\nStack\nmain()printSquare(4)square(4)function multiply (a, b) {\nreturn a * b;\n};\nfunction square (n) {\nreturn multiply(n, n);\n};\nfunction printSquare (n) {\nvar squared = square(n);\nconsole.log(squared);\n};\nprintSquare(4);JS is single-threaded\ni.e.: one call stack = one thing at a time",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#47": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack\nStack\nmain()printSquare(4)square(4)multiply(4, 4)function multiply (a, b) {\nreturn a * b;\n};\nfunction square (n) {\nreturn multiply(n, n);\n};\nfunction printSquare (n) {\nvar squared = square(n);\nconsole.log(squared);\n};\nprintSquare(4);JS is single-threaded\ni.e.: one call stack = one thing at a time",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#48": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack\nStack\nmain()printSquare(4)square(4)function multiply (a, b) {\nreturn a * b;\n};\nfunction square (n) {\nreturn multiply(n, n);\n};\nfunction printSquare (n) {\nvar squared = square(n);\nconsole.log(squared);\n};\nprintSquare(4);JS is single-threaded\ni.e.: one call stack = one thing at a time",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#49": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack\nStack\nmain()printSquare(4)function multiply (a, b) {\nreturn a * b;\n};\nfunction square (n) {\nreturn multiply(n, n);\n};\nfunction printSquare (n) {\nvar squared = square(n);\nconsole.log(squared);\n};\nprintSquare(4);JS is single-threaded\ni.e.: one call stack = one thing at a time",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#5": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJavaScript basic ingredients\nHTML CSS JavaScriptCore\nDOM\nBOM Language core\nbased on ECMAScript \nDocument Object Model (DOM)\nAPI for HTML/XML documents\nBrowser Object Model (BOM)\nbrowser window manipulationnot the subject of \nthese slides",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#50": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack\nStack\nmain()printSquare(4)console.log(16)function multiply (a, b) {\nreturn a * b;\n};\nfunction square (n) {\nreturn multiply(n, n);\n};\nfunction printSquare (n) {\nvar squared = square(n);\nconsole.log(squared);\n};\nprintSquare(4);JS is single-threaded\ni.e.: one call stack = one thing at a time",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#51": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack\nStack\nmain()printSquare(4)function multiply (a, b) {\nreturn a * b;\n};\nfunction square (n) {\nreturn multiply(n, n);\n};\nfunction printSquare (n) {\nvar squared = square(n);\nconsole.log(squared);\n};\nprintSquare(4);JS is single-threaded\ni.e.: one call stack = one thing at a time",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#52": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack\nStack\nmain()function multiply (a, b) {\nreturn a * b;\n};\nfunction square (n) {\nreturn multiply(n, n);\n};\nfunction printSquare (n) {\nvar squared = square(n);\nconsole.log(squared);\n};\nprintSquare(4);JS is single-threaded\ni.e.: one call stack = one thing at a time",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#53": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Call stack\nJS is single-threaded\ni.e.: one call stack = one thing at a time\nfunction multiply (a, b) {\nreturn a * b;\n};\nfunction square (n) {\nreturn multiply(n, n);\n};\nfunction printSquare (n) {\nvar squared = square(n);\nconsole.log(squared);\n};\nprintSquare(4);Stack",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#54": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Asynchronous callbacks\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);Stack\nmain()JavaScript is asynchronous\nevents can happen outside of the main flow of your program",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#55": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Asynchronous callbacks\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);\nmain()console.log(‘hi’);JavaScript is asynchronous\nevents can happen outside of the main flow of your program\nStack",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#56": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Asynchronous callbacks\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);\nmain()JavaScript is asynchronous\nevents can happen outside of the main flow of your program\nStack",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#57": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Asynchronous callbacks\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);\nmain()setTimeout(cb, 5000);JavaScript is asynchronous\nevents can happen outside of the main flow of your program\nStack",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#58": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Asynchronous callbacks\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);\nmain() setTimeout disappears \nfrom the stack!JavaScript is asynchronous\nevents can happen outside of the main flow of your program\nStack",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#59": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Asynchronous callbacks\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);\nmain()console.log(‘VIS’);JavaScript is asynchronous\nevents can happen outside of the main flow of your program\nStack",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#6": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJavaScript basic ingredients\nJavaScript core language\nbased on ECMAScript specification (standard ISO)\n• other dialects of ECMAScript include JavaScript, Microsoft Jscript, Adobe \nFlash ActionScript\nprovides core scripting capabilities for the browser\nDocument Object Model (DOM)\ndata model that is created for each page that is loaded\nHTML DOM provides also an API to manipulate the model \nBrowser Object Model (BOM)\nallows to perform actions that do not directly relate to the page content \n(window position, decorations, status bar text, etc)\nno official standards",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#60": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Asynchronous callbacks\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);\nmain()JavaScript is asynchronous\nevents can happen outside of the main flow of your program\nStack",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#61": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Asynchronous callbacks\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);JavaScript is asynchronous\nevents can happen outside of the main flow of your program\nStack",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#62": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Asynchronous callbacks\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);\nconsole.log(‘there’);\n…5 seconds later…JavaScript is asynchronous\nevents can happen outside of the main flow of your program\nStack",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#63": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniConcurrency and the event loop\nOne thing at a time, except not really!\nthe runtime environment (= stack + heap) can only \ndo one thing at a time\nthe reason we can do things concurrently is that the\nbrowser is more than just the runtime environment\n• the Web APIs of the browser (or C++ APIs in Node.js) \nallow us to do more things…",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#64": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);Stack\nmain()setTimeout(cb,5)Web APIs\nEvent loop\nTask queue",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#65": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);Stack\nmain()timer(cb)\nEvent loopsetTimeout(cb,5)\nTask queue• setTimeout disappears \nfrom the stack!Web APIs",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#66": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);Stack\nmain() • setTimeout disappears \nfrom the stack!timer(cb)\nconsole.log(‘VIS’)\nEvent loop\nTask queueWeb APIs",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#67": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);Stack\nmain()timer(cb)\nEvent loop\nTask queueWeb APIs",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#68": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);Stack\ntimer(cb)\nEvent loop\nTask queueWeb APIs",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#69": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);Stack\ntimer(cb)\nEvent loop\nTask queue• 5 seconds later…\n• …when the Web APIs \nare done, they push your callbacks onto\nthe task queueWeb APIs",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#7": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniGraphics basic ingredients\nBy using JavaScript it is possible to produce\nraster graphic contents\nvectorial graphic contents\nGraphics\nRaster VectorialWeb\nGraphics\nHTML5\nCanvasSVG",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#70": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);Stack\nEvent loop\nTask queue\ncb• 5 seconds later…\n• …when the Web APIs \nare done, they push your callbacks onto\nthe task queueWeb APIs",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#71": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);Stack\nTask queue• The event loop’s job is to \nconstantly monitor the stackand the task queue\n• i ft h e  s t a c ki se m p t y ,  i tt a k e s  \nthe first thing on the queue, and pushes it on to the stack, \nwhere it is executedEvent loopWeb APIs\ncb",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#72": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);Stack\nEvent loop• The event loop’s job is to \nconstantly monitor the stackand the task queue\n• i ft h e  s t a c ki se m p t y ,  i tt a k e s  \nthe first thing on the queue, and pushes it on to the stack, \nwhere it is executed\nTask queueWeb APIs\ncb",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#73": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);Stack\nEvent loopcblog(‘there’)\nTask queueWeb APIs",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#74": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: Async calls & Stack\nconsole.log( ‘hi’);\nsetTimeout( function () {\nconsole.log( ‘there’)\n}, 5000);\nconsole.log( ‘VIS’);Stack\nEvent loop\nTask queueWeb APIs",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#75": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignani\nBooks\nJavaScript: The Good Parts\nO'Reilly Media / Yahoo Press\nby Douglas Crockford\n• affiliation\nProfessional JavaScript for Web Developers\nWrox \nby Nicholas C. Zakas\n• affiliation\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#76": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniBibliography\n[Murray 13] Scott Murray, “ Interactive Data \nVisualization for the Web ”. O’Reilly Media, 1sted., \n2013\n[Judd 75] Deane B. Judd, “ Color in business, science \nand industry ”. Wiley-Interscience, 3rded., 1975\n[TM] http://www.teaching-materials.org/",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#8": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniCrash course JavaScript",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\100-web-dev-10.pdf#9": "100-web-dev-10         copyright ©2023  g da lozzo, v. di donato, m. patrignaniJS: What is it?\nIt is THE scripting language of the Web\nIt is not Java ☺\nnames: Mochan ÆLiveScript ÆJavaScript \nRunning environments\na browser (in these slides)\na JavaScript runtime environment \n• most renown is Node.js, built on  Chrome's V8 JavaScript engine\nDoes not need any special software\nit is just enabled within browser\nIt is the building block for very popular libraries such as \nJQuery and D3.js",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#0": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniInformation Visualization\nG. Da Lozzo, V. Di Donato, M. PatrignaniInfovis on the Web\nGraphics\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#1": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniCopyright notice\nAll the pages/slides in this presentation, including but not limited \nto, images, photos, animations, videos, sounds, music, and text (hereby referred to as “materi al”) are protected by copyright\nThis material, with the exception of some multimedia elements \nlicensed by other organizations, is property of the authors and/or organizations appearing in the first slide\nThis material, or its parts, can be reproduced and used for \ndidactical purposes within universities and schools, provided \nthat this happens for non-profit purposes\nAny other use is prohibited, unless explicitly authorized by the\nauthors on the basis of an explicit agreement\nThis copyright notice must always be redistributed together with\nthe material, or its portions",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#10": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignani\nA circle in Canvas\n<canvas id=\"myCanvas\" width=\"100\"height=\"100\"></canvas>\n<script>\nfunction drawCircle(radius) {\nvarcanvas =document.getElementById( 'myCanvas' ); \nvarcontext =canvas.getContext( '2d'); \nvarcenterX =canvas.width /2; \nvarcenterY =canvas.height /2; \ncontext.clearRect(0, 0, canvas.width, canvas.height);\ncontext.beginPath(); context.arc(centerX, centerY, radius, 0, 2* Math.PI); \ncontext.fillStyle ='red'; \ncontext.fill(); context.lineWidth =3; \ncontext.strokeStyle ='blue'; \ncontext.stroke(); \n}\ndrawCircle(40);\n</script>",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#11": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniA cycle in SVG\n<svgheight=\"100\"\nwidth=\"100“\nxmlns=\"http://www.w3.org/2000/svg\" >\n<circle cx=\"50\"\ncy=\"50\"\nr=\"40\"\nstroke=\"blue\"\nstroke‐width=\"3\"\nfill=\"red\">\n</circle>\n</svg>\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#12": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniA simple animation with Canvas\n<script>\nvari = 10;\nsetInterval(\nfunction (){ \ndrawCircle(i);\nif(i< 40) i++;\n}, 25);\n</script>\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#13": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniA simple animation with SVG\n<script>\nvari = 10;\nsetInterval(\nfunction (){ \ndocument.getElementById( \"myCircle\" )\n.setAttribute( \"r\", i);\nif(i< 40) i++;\n}, 25);\n</script>\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#14": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniSVG: basic example\nObjects are rendered in the order in which they are listed\n<svg width=\"300\"\nheight=\"200\"\nxmlns=\"http://www.w3.org/2000/svg\" >\n<rectwidth=\"100%\"height=\"100%\"fill=\"red\"/>\n<circle cx=\"150\"cy=\"100\"r=\"80\"fill=\"green\" />\n<textx=\"150\"\ny=\"125\"\nfont‐size=\"60\"\ntext‐anchor=\"middle\"\nfill=\"white\"> Text\n</text></svg>Text",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#15": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniPositions\nSVG uses a grid system\nThe top left corner of the \ndocument is (0,0)\nPositions are measured \nin pixels with\npositive x direction \nto the right +x\npositive y direction \nto the bottom +y\nOne pixel in SVG maps to one pixel on the output device\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#16": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniBasic shapes\n<svgwidth=\"200\"height=\"250\"version= \"1.1\"xmlns=\"http://www.w3.org/2000/svg\" >\n<rectx=\"10\"y=\"10\"width=\"30\"height=\"30\"stroke=\"black\" fill=\"transparent\"\nstroke‐width=\"5\"/>\n<rectx=\"60\"y=\"10\"rx=\"10\"ry=\"10\"width=\"30\"height=\"30\"stroke=\"black\"\nfill=\"transparent\" stroke‐width=\"5\"/>\n<circle cx=\"25\"cy=\"75\"r=\"20\"stroke=\"red\"fill=\"transparent\"\nstroke‐width=\"5\"/>\n<ellipse cx=\"75\"cy=\"75\"rx=\"20\"ry=\"5\"stroke=\"red\"fill=\"transparent\"\nstroke‐width=\"5\"/>orange\n<linex1=\"10\"x2=\"50\"y1=\"110\"y2=\"150\"stroke=\"\"fill=\"transparent\"\nstroke‐width=\"5\"/>\n<polyline points=\"60 110, 65 120, 70 115, 75 130, 80 125, 85 140, 90 135, \n95 150\" stroke=\"orange\" fill=\"transparent\" stroke‐width=\"5\"/>\n<polygon points=\"50 160 55 180 70 180 60 190 65 205 50 195 35 205 40 190 30 \n180 45 180\" stroke=\"green\" fill=\"transparent\" stroke‐width=\"5\"/>\n<pathd=\"M20,230 Q40,205 50,230 T90,230\" fill=\"none\"stroke=\"blue\"\nstroke‐width=\"5\"/>\n</svg>\nSVG Path Commands\n[MDNP, https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths]",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#17": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniPaths: Line Commands                  \nM x y: “move to”\nit does not draw anything \nit moves the cursor\nL x y: “line to”\nit draws a line from the current position to (x, y)\nH x or V y: “horizontal to” or “vertical to”\nit draws horizontal and vertical lines\nZ: “close path”\nit draws a line from the current position \nback to the first pointCOORDINATES:\nup case Æabsolute\nlw case Ærelatives",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#18": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniPaths: quadratic bezier curves (Q)\nQx1 y1, x y\nIt requires one control point\nwhich determines the slope of the curve at both the start \npoint and at the end point\nIt is simpler than the cubic one\n<pathd=\"M10 80 Q 95 10, 180 80 \"\nstroke=\"black\"\nfill=\"transparent\" />\n(10,80) (180,80)(95,10)",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#19": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniPaths: cubic bezier curves (C)\nCx1 y1, x2 y2, x y\nIt requires two \ncontrol points \nwhich determines the \nslope of the curve at \nboth the start point and at the end point\n<pathd=\"M10 10 C 20 20, 40 20, 50 10 \"\nstroke=\"black” fill=\"transparent\" />\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#2": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniCredits\nParts of this matherial is inspired by \nhttp://www.teaching-materials.org/\nhttps://developer.mozilla.org/en-\nUS/docs/Web/SVG/Tutorial",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#20": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniCubic Bezier Curves \nUnder the Hood\nhttps://vimeo.com/106757336",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#21": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniPaths: compose curves\nSx2 y2, x y\nYou can string together several Bezier curves to create \nextended smooth shapes\nthe control point on one side of a point will be a reflection of\nthe control point used on the other side to keep the slope constant \nin this case, you can use a shortcut version of the cubic \nBezier\n<pathd=\"M10 80 C 40 10, 65 10, 95 80 S 150 150 , \n180 80”stroke=\"black\" fill=\"transparent\" />\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#22": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniElliptical Arcs (1/9)\nArcs are sections of circles or ellipses\nA rx ry,x-axis-rotation ,l-flag , sweep-flag, x y\n•r x= x-radius\n•r y= y-radius\n• x-axis-rotation = clockwise rotation of the ellipse (degrees)\n•l - f l a g = 0/1\n0 means “use one of the two smaller arcs”\n1 means “use one of the two larger arcs”\n•s w e e p - f l a g = 0/1 \n0 means “counter-clockwise”\n1 means “clockwise”\n•x  y = coordinates of the final point",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#23": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniElliptical Arcs (2/9)\nGiven rx, ry, and x-axis-rotation there are two ellipses that can \nconnect the starting and ending points\nAlong each one of these two ellipses \nthere are two possible arcs that you can use\noverall, you have four different arcs<pathd=\"M80 80 A 50 20 ,45, ..., 90 120”stroke=\"black\"/>\n(80,80)\n(90,120)45°",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#24": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniElliptical Arcs (3/9)\nl-flag = 0/1\n0 means “use one of the two \nsmaller arcs”\n1 means “use one of the two \nlarger arcs”\nsweep-flag = 0/1 \n0 means “counter-clockwise”\n1 means “clockwise”<pathd=\"M80 80 A 45 45, 0,\n0, 0,125 125 L 125 80 Z\"\nfill=\"green\"/>\n(80,80)\n(125,125)(125,80) Z\n0 = counter\nclockwise",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#25": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniElliptical Arcs (4/9)\nl-flag = 0/1\n0 means “use one of the two \nsmaller arcs”\n1 means “use one of the two \nlarger arcs”\nsweep-flag = 0/1 \n0 means “counter-clockwise”\n1 means “clockwise”<pathd=\"M80 80 A 45 45, 0,\n0, 1,125 125 L 125 80 Z\"\nfill=\"purple\" />\n(80,80)\n(125,125)(125,80) Z\n1 = clockwise",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#26": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniElliptical Arcs (5/9)\nl-flag = 0/1\n0 means “use one of the two \nsmaller arcs”\n1 means “use one of the two \nlarger arcs”\nsweep-flag = 0/1 \n0 means “counter-clockwise”\n1 means “clockwise”\n(80,80)\n(125,125)(125,80) Z\n0 = counter\nclockwise<pathd=\"M80 80 A 45 45, 0,\n1, 0,125 125 L 125 80 Z\"\nfill=\"red\"/>",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#27": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniElliptical Arcs (6/9)\nl-flag = 0/1\n0 means “use one of the two \nsmaller arcs”\n1 means “use one of the two \nlarger arcs”\nsweep-flag = 0/1 \n0 means “counter-clockwise”\n1 means “clockwise”\n(80,80)\n(125,125)(125,80) Z\n1 = clockwise<pathd=\"M80 80 A 45 45, 0,\n1, 1,125 125 L 125 80 Z\"\nfill=\"blue\"/>",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#28": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniElliptical Arcs (7/9)\n<pathd=\"M80 80 A 45 45, 0, \n0, 0,125 125 L 125 80 Z\"\nfill=\"green\"/>\n<pathd=\"M230 80 A 45 45, 0,\n1, 0,275 125 L 275 80 Z\"\nfill=\"red\"/>\n<pathd=\"M80 230 A 45 45, 0,\n0, 1,125 275 L 125 230 Z\"\nfill=\"purple\" />\n<pathd=\"M230 230 A 45 45, 0,\n1, 1,275 275 L 275 230 Z\"\nfill=\"blue\"/>\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#29": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniElliptical Arcs (8/9)\nExample\n45 x-axis \nrotation\n(10,315)(315,10)\n(110,215)(150.71,170.29)(172.55,152.45)(215.9,109.9)<path d= \"M10 315\nL 110 215\nA36 60,0,0,1,150.71 170.29\nL 172.55 152.45\nA30 50,‐45,0, 1,215.1 109.9\nL 315 10\" stroke=\"black\" fill=\"green\"\nstroke‐width=\"2\"fill‐opacity= \"0.5\"/>",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#3": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniRaster Vs Vector graphics\nRaster graphics\nbased on pixels (picture element) arranged in a grid (= \nbitmaps)\n• a pixel represents the smallest unit of a video image that has \nspecific RGBA values\nlower abstraction level\nVector graphics \nbased on geometrical primitives such as points, lines, \ncurves and polygon(s)\n• mathematical expressions\nmore abstract level",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#30": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniElliptical Arcs (9/9)\nExample\n45 x-axis \nrotation\n(10,315)(315,10)\n(110,215)(150.71,170.29)(172.55,152.45)(215.9,109.9)<path d= \"M10 315\nL 110 215\nA36 60,0,0,0,150.71 170.29\nL 172.55 152.45\nA30 50,‐45,0, 1,215.1 109.9\nL 315 10\" stroke=\"black\" fill=\"green\"\nstroke‐width=\"2\"fill‐opacity= \"0.5\"/>",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#31": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniSVG editors \nhttps://boxy-svg.com/\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#32": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniBasic transformations: translations\nTranslations\nit may be necessary to move an element around\nyou can use the translate() transformation\nthe example will render a rectangle, translated to the point \n(30,40) instead of (0,0)<rectx=\"0\"y=\"0\"width=\"10\"height=\"10\"\ntransform= \"translate (30,40)\" />",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#33": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniBasic transformations: rotations\nRotations\nrotating an element is quite a common task\nuse the rotate() transformation for this\nthis example shows a square that is rotated by 45 degrees\n• the value for rotate() is given in degrees<rectx=\"20\"y=\"20\"width=\"20\"height=\"20\"\ntransform= \"rotate(45)\"/>",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#34": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniBasic transformations: scalings\nScalings\nscale() changes the size of an element\nit takes two numbers, evaluated as ratio by which to scale on x \nand y\n0.5 shrinks by 50%\nif the second number is omitted, it is assumed to be equal to the \nfirst\n<rectx=\"20\"y=\"20\"width=\"20\"height=\"20\"\ntransform= \"scale(0.8) \"/><rectx=\"20\"y=\"20\"width=\"20\"height=\"20\"\ntransform= \"scale(0.8,0.8) \"/>",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#35": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniConcatenation of transformations\nA yellow rectangle\nA rotated rectangle<rect x=\"50\"\ny=\"50\"\nwidth=\"30\"\nheight=\"30\"\nstroke=\"blue\"\nstroke‐width=\"3\"\nfill=\"yellow\"\n/>\n<rect x=\"50\"\ny=\"50\"\nwidth=\"30\"\nheight=\"30\"\nstroke=\"blue\"\nstroke‐width=\"3\"\nfill=\"yellow\"\ntransform= \"rotate(30)\"\n/>5050\n30\n30\n30°",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#36": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniConcatenation of transformations\n<rect x=\"50\"\ny=\"50\"\nwidth=\"30\"\nheight=\"30\"\nstroke=\"blue\"\nstroke‐width=\"3\"\nfill=\"yellow\"\ntransform= \"translate(65,65),\nrotate(30),\ntranslate( ‐65,‐65)\"\n/>5050\n30\n30\n5050(-65,-65)\n30°transformations are applied in reverse order\n5050\n(65,65)5050",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#37": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniBibliography and links\n[Murray ‘13] Scott Murray, “Interactive Data Visualization for the \nWeb”. O’Reilly Media, 1sted., 2013\n[Judd ‘75] Deane B. Judd, “Color in business, science and \nindustry”. Wiley-Interscience, 3rded., 1975\n[W3C] http://www.w3.org/TR/SVG/intro.html\n[TM] http://www.teaching-materials.org/\n[MDN] https://developer.mozilla.org/en-\nUS/docs/Web/SVG/Tutorial\n[MDNP] https://developer.mozilla.org/en-\nUS/docs/Web/SVG/Tutorial/Paths",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#4": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniRaster properties\nResolution\nnumber of pixels to represent the image\nColor depth\nnumber of bits to color a single pixel\ntypically 24-bits for RGB\n• eight bits for each component\n•28= 256 shades per component\n•2 5 63~ 16 million colors \nhumans distinguish ~ 10 mil colors [Judd ‘75]\noften 8 more bits are used for opacity",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#5": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniVector graphic properties\nVector graphics does not keep track of each \npixel\nit only considers the mathematical information that is \nable to generate the picture\nIt is based on shapes (ultimately on paths)\npaths are defined by starting and ending points, \ntogether with other control points, curves, and angles along the way \npaths are associated with styles \n• fill color, stroke-width, etc.",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#6": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniRaster vs Vector: pros and cons\nBitmaps\nfine-grained control up to single pixels\nbest for full-color images, \nlike photographs\nincreasing resolution or color depth \naffects their size\ndo not resize well\nVector graphics\nresolution independency\nresize with little or no loss\nno extremely complex images\ntime and talent needed to create it[Image from Wikipedia.org]\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#7": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniHTML5 Canvas and SVG\nHTML5 Canvas element\n“provides scripts with a resolution-dependent bitmap \ncanvas, which can be used for rendering graphs, game graphics, or other visual images on the fly”[W3C]\nSVG (Scalable Vector Graphics)\n“is an XML-based format for describing 2D vector \ngraphics” [W3C]",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#8": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniHigh level summary\nStatefull (next slide) Stateless (next slide)HTML5 Canvas SVG\nPixel based Shape based\nSingle HTML element Multiple graphical elements, which \nbecome part of the DOM\nModified through script only Modified through script and CSS\nInteraction is granular (x,y) Interaction is abstracted(rect, path,…)\nPerformance is better with smaller surface, a larger number of objects (>10K), or both Performance is better with larger surface, a smaller number of objects (<10K), or both",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\110-web-graphics-05.pdf#9": "110-web-graphics-05         copyright ©2 023 g da lozzo, v. di donato, m. patrignaniStateless and stateful paradigms\nCanvas is stateless\ndrawing primitives change the color of a pixel\n• irrespectively of previous drawing instructions\nSVG is stateful\ndrawing primitives change the properties of an \nobject\n• which has been defined earlier\nthis implies easier animation and interaction",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#0": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaInformation Visualization\nG. Da Lozzo, V. Di Donato, M. Patrignani, C. SquarcellaInfovis on the Web\nThe D3.js library\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#1": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaCopyright notice\nAll the pages/slides in this presentation, including but not limited \nto, images, photos, animations, videos, sounds, music, and text (hereby referred to as “materi al”) are protected by copyright\nThis material, with the exception of some multimedia elements \nlicensed by other organizations, is property of the authors and/or organizations appearing in the first slide\nThis material, or its parts, can be reproduced and used for \ndidactical purposes within universities and schools, provided \nthat this happens for non-profit purposes\nAny other use is prohibited, unless explicitly authorized by the\nauthors on the basis of an explicit agreement\nThis copyright notice must always be redistributed together with\nthe material, or its portions",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#10": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaInstalling: accessing locally (2/2)\nAn example\nsuppose that file d3.v7.min.js is stored in the same \ndirectory where this html file is\n<!DOCTYPE html>\n<html><head><title>D3 Test</title>\n<script type=\"text/javascript\" src=\"d3.v7.min.js\" ></script>\n</head><body><script type=\"text/javascript\" >\n// Here we can use the d3 object!!\n</script>\n</body>\n</html>",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#11": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaSupported browsers\nFrom version 5 on, D3.js is compatible with all \nmodern browsers\nChrome, Edge, Firefox, and Safari\n• we need a browser that supports SVG and CSS3 Transitions\nSince version 4 D3.js also supports IE 9+\nParts of D3.js may work in older browsers\n“everything except IE 8 and older versions”",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#12": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaOpening an HTML file using D3.js\nNote that your browser may enforce st rict security permissions for reading \nfiles from the local file system\nafter directly opening an .html file from your file system you will not be \nallowed to load a .js file from the same directory\nWorkaround for Google Chrome\ngoogle-chrome --allow-file-access-from-files mio_file.html\nWorkaround for Mozilla Firefox\ntype in the address bar “about:config”\nclick on the button “I accept the risks!” that warns you against \ndangerous configuration changes\nsearch for “privacy.file_unique_origin” and change the value to “false”",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#13": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaOpening an HTML file using D3.js\nThe best workaround is to configure a local Web server\nlaunching a local Web server in python\n•python -m SimpleHTTPServer 8888 \n•python3 -m http.server 8888 \nlaunching a local Web server with php\n•php -s 127.0.0.1:8888\nlaunching a local Web server with Node.js\n• first install: npm install -g http-server\n• then run: http-server & \n– the default port is 8080\naccess “http://localhost:8888” from your browser",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#14": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaSupported platforms\nD3.js also runs on Node.js\nuse “npm install d3 ”to install it\nNode.js itself lacks a DOM\nlikely, there exist multiple DOM implementations for \nNODE (e.g., JSDOM)\nyou'll need to explicitly pass in a DOM element to your d3 \nobject\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#15": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js and arrays\nSince arrays are the canonical data representation in \nD3.js, the library provides a set of utilities for arrays\nfrom probability \ntheory and statistics\nd3.mean (array [,accessor ])\nd3.median (array [,accessor ])\nd3.deviation (array [,accessor ])\nd3.variance (array [,accessor ])\n…common use\nd3.min(array [,accessor ])\nd3.max(array [,accessor ])\nd3.extent (array [,accessor ])\nd3.sum(array [,accessor ])\n…\nd3.extent ([4,6,7,8,3] )   // [3, 8] d3.variance ([4,6,7,8,3] )    // 4.3",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#16": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaWhy accessor functions?\nAccessor functions are needed when \nthe input array does not directly contain numbers, \nbut objects with several properties\nyou need to access the value of some property of \nthe objects\nAccessor functions are callback functions\nthey take an object as parameter\nthey produce a valued3.min(array [,accessor ]) ?",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#17": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaAccessor function example\nSuppose you have the following array\nYou want to find the youngest person\nYou want to find the tallest personvarpeople =[ \n{ name :\"Valentino\" , age :25, height:1.7}, \n{ name :\"Giordano\" ,  age :32, height:1.8}]\nd3.min(people, function (element){\nreturnelement[ \"age\"]\n}) // 25\nd3.max(people, function (element){\nreturnelement[ \"height\" ]\n})      // 1.8",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#18": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaWithout accessor functions?\nIt would be equivalent to call \narray.map(callbackFunction) before computing the minimum/maximum value\narray.map() is a built-in JavaScript method that returns an \narray obtained by calling the callbackFunction on each element of the array\nmyArray = people.map( function (el){return el[ 'age’]})       // [25, 32]\nd3.min(myArray)     // 25",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#19": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaOrdering arrays\nThe default order used by the JavaScript array.sort() mutator \nis lexicographic (that is, alphabetical) and not natural\nthis can lead to unexpected behaviors when sorting an array of \nnumbers\nD3.js array functions, instead, compare elements using their\nnatural order[2,1005,10000 ].sort()\n// the array becomes [10000, 1005, 2]\nd3.min([ “20”,“3”]);     // outputs “20”\nd3.min([ 20,3]);          // outputs 3\nd3.min([ 21,“3”,“200”]);  // outputs “200”",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#2": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaGraphic Web libraries\nServeral libraries are available for managing 2D and 3D \ngraphics on the Web\nSome of them use WebGL\na dialect of HTML5 canvas designed to intensively exploit the client \nhardware\n2D 3D\nSVG Canvas WebGL\nD3.js Paper.js Three.js\nRaphaël.js Kinetic.js Copperlicht\nSVG.js Fabric.js O3D\nBonsaiJS Easel.js …\n… … …",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#20": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js comparator functions\nThe method                           returns -1, 1, or 0, \ndepending whether ais smaller, greater, or equal \nthan b\nAnalogously you have\nExample of use\nExample of use in conjunction with JavaScript built-in \narray.sort() mutatord3.ascending(a, b)\nd3.descending(a, b)\nd3.ascending( 5,2) // outputs 1 \n[5,2,3,6,7].sort(d3.ascending )   //[2, 3, 5, 6, 7]\n[5,2,3,6,7].sort(d3.descending )  //[7, 6, 5, 3, 2]",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#21": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaArray transformations\nD3.js offers some additional helpers for transforming \narrays and for generating new arrays\n\n• concatenates the input arrays\n•e x a m p l e :  \n\n• returns an array of adjacent pairs•e x a m p l e :d3.merge (arrays )\nd3.pairs (array )d3.merge([[ 1],[2,3]]); // [1,2,3]\nd3.pairs([ 1,2,3,4]);  // [[1,2],[2,3],[3,4]] ",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#22": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaArray transformations\nOther D3.js helpers for arrays\n\n• returns all combinations\n•e x a m p l e :\n\n• returns the colums of a matrix provided by rows•e x a m p l e :\nfurther array operators can be found at \nhttps://github.com/d3/d3-array d3.zip(arrays )\nd3.zip([ 1,2],[3,4],[5,6]);     // [[1,3,5],[2,4,6]]d3.cross (arrays )\nd3.cross([ 1,2],[“x”,“y”]); //  [[1,”x”],[1,”y”],[2,”x”],[2,”y”]]",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#23": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js collections\nObjects\nmethods that convert associative arrays (objects) to \nstandard arrays\nMaps and sets\nsimilar to ES6 Maps and Sets, but with string keys and a \nfew other differences\nNests\nallow the programmer to group data into arbitrary\nhierarchies",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#24": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaJavaScript objects\nJavaScript objects are associative arrays, i.e., \ncollections of (key, value) pairs\nThe “for...in” statement iterates over the properties of \nan object\nproperties are processed in arbitrary order\nfor (letvariable inobject ) {\n...}\nvariable Æad i f f e r e n t property name is assigned to variable on each iteration\nobjectÆthe object whose properties are iterated",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#25": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaConverting objects to arrays\nD3.js provides several operators for converting \nobjects to standard arrays\nthe order of the output array is undefined\nd3.keys (object )• returns an array of the property names \n• returns an array of the property values• returns an array of the property keys and \nvalues (each entry is an object with a key and value attribute)d3.values (object )\nd3.entries (object )\nd3.entries({foo :42, bar :true}); \n>[{key: \" foo\", value: 42}, {key: \" bar\", value: true}]",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#26": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaObjects as hash tables?\nOne could think of using bare JavaScript objects as \nhash tables\nthey are associative arrays, don’t they?\nHowever, this can lead to unexpected behaviors when \nbuilt-in property names are used as keys\neach object inherits from the prototype Object some properties \nand methods, which are already among its keys\ninserting keys that are already defined by Object you overwrite \nthem\nFurther, objects keys are JavaScript names\nthey cannot start with a number",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#27": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaObjects as hash tables?\nExample of (erroneous) use of an object as a hash table\nNever use objects as hash tables!patrigna@tittolo:~$ node\n> var obj = {};undefined\n> obj.hasOwnProperty ('hasOwnProperty');\nfalse> obj.hasOwnProperty = \"ciao\";'ciao'> obj{ hasOwnProperty: 'ciao'}\n> obj.hasOwnProperty ('hasOwnProperty');\nTypeError: obj.hasOwnProp erty is not a function\n> ",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#28": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js maps\nTo avoid problems D3.js defines its own hash tables, \nthat are called maps\nd3.map([object ][,key])\nmap. has(key)\nmap. get(key)\nmap. set(key, value)\nmap. remove (key)\nmap. keys ()\nmap. values ()\nmap. entries ()\nmap. each (function)\nmap. empty ()\nmap. size()m.set(\"hasOwnProperty\" , \"ciao\")\nm.get(\"hasOwnProperty\" ) // ‘ciao’var m = d3.map()\nm.set(\"map‐key\", \"map ‐value\") \nm.get(\"map‐key\") //map‐value",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#29": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js sets\nD3.js implements sets\nthe elements of set are exclusively strings!\nD3.js sets are actually multisets\nthe method set.values() can be used to find the unique \nvalues of the setd3.set([array ])\nset.has(value)\nset.add(value)\nset.remove (value)set.values ()\nset.each (function)\nset.empty ()\nset.size()\nd3.set([ \"foo\",\"bar\",\"foo\",\"bar\" ]).values(); \n// produces the array [‘foo’, ‘bar’]",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#3": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js\nD3.js (Data-Driven Documents) is a JavaScript library \nfor producing dynamic, interactive data visualizations in web browsers\ndeveloped by Mike Bostock and others at Stanford\nopen source\nuses SVG, HTML5, and CSS\nbig community and well documented ☺\n• https://github.com/mbostock/d3/wiki/API-Reference\n• https://github.com/mbostock/d3/wiki• https://groups.google.com/forum/#!forum/d3-js• http://stackoverflow.com/questions/tagged/d3.js\nknown to have a quite steep learning curve /",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#30": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellad3.set() function\nThe values of the input array are always coerced to strings\nD3.js converts objects and functions to strings using the toString() \nfunction\nnumbers already have the built-in JavaScript toString() function\nobjects don’t have the toString() function\n• you will have an error unless you provide it\nd3.set([ \"foo\",{toString: () => \"bar\"} ]).values(); \n//  [ \"foo\", \"bar\" ]d3.set([ \"foo\",\"bar\",32.4]).values()   //  [ \"foo\", \"bar\", \"32.4\" ]",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#31": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js nests (1/3)\nNesting allows elements in an array to be grouped into a \nhierarchical tree structure\nlike the GROUP BY operator in SQL, except you can have multiple levels \nof grouping\nthe levels in the tree are specified by key functions\nkey() and entries() are methods of the object returned by d3.nest()d3.nest()• creates a new nest operator\n• the key() function will be invoked for each element in the \narray and must return a string identifier for each group \n• applies the nest operator to the specified array, returning \nan array of key-values entries.key(key function )\n.entries (array )",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#32": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js nests (2/3)\nExample data: barley yields, from various sites in Minnesota \nduring 1931-2\n1-Level Nesting:varyields = [\n{yield: 39.93, variety: \" Manchuria \", year: 1931, site: \" Crookston \"},\n{yield: 32.00, variety: \" Peatland \", year: 1931, site: \" Duluth\"},\n{yield: 22.57, variety: \" Manchuria \", year: 1932, site: \" Morris\"},\n{yield: 25.87, variety: \" Glabron\", year: 1932, site: \" Waseca\"},\n{yield: 22.23, variety: \" Svansota \", year: 1932, site: \" Morris\"}\n]\nvarentries = d3.nest()\n.key(function (d) { return d.year; })\n.entries(yields);\n// [{key: \"1931\", values: Array(2)}, {key: \"1 932\", values: Array(3)}]\nentries[0].values[0]\n// {yield: 39.93, variety: \"Manchuria\", year: 1931,  site: \"Crookston\"}",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#33": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js nests (3/3)\nvarentries = d3.nest()\n.key(function (d) { returnd.year; })\n.key(function (d) { returnd.site; })\n.entries(yields);\n// [{key: \"1931\", values: Array(2)}, {key: \"1 932\", values: Array(2)}]\nentries[1].values\n// [{key: \"Morris\", v alues: Array(2)},{key:\"W aseca\",values: Array(1)}]varyields = [\n{yield: 39.93, variety: \" Manchuria \", year: 1931, site: \" Crookston \"},\n{yield: 32.00, variety: \" Peatland \", year: 1931, site: \" Duluth\"},\n{yield: 22.57, variety: \" Manchuria \", year: 1932, site: \" Morris\"},\n{yield: 25.87, variety: \" Glabron\", year: 1932, site: \" Waseca\"},\n{yield: 22.23, variety: \" Svansota \", year: 1932, site: \" Morris\"}\n]Example data: barley yields, from various sites in Minnesota \nduring 1931-2\n2-Level Nesting:",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#34": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js scales (1/3)\nScales are functions that map an input domain to an \noutput range\nvarscale =d3.scaleLinear (); \nscale.domain([ 100, 500]); // Set the input domain\nscale.range([ 10, 350]) // Set the output range\nscale(100); // Returns 10\nscale(300); // Returns 180\nscale(500); // Returns 350100\n300500\n10 180\n350Input domain\nOutput range",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#35": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js scales (2/3)\nScales simplify the code needed to map a dimension \nof the data to a visual representation\nScales are functions\ntypeof scale returns “function”\ndomain() and range() are methods of functionsvarscale =d3.scaleLinear (); \nscale.domain([ 100, 500]); // Set the input domain\nscale.range([ 10, 350]) // Set the output range",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#36": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js scales (3/3)\nInput domain\ntypically a dimension of the data that you want to visualize \n• e.g., height of students \nOutput range \ntypically a dimension of the desired output visualization\n• e.g., the height of some bars\nvarheightToBar =d3.scaleLinear (); \nheightToBar.domain([ 0, 1.9]); \nheightToBar.range([ 0, 100]) ",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#37": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaMost common types of scale\nContinuous scales\nOrdinal scales\nTime scales",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#38": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaContinuous scales \nHave a continuous domain (e.g., a set of real \nnumbers or dates) and a continuous range\nd3.scaleLinear()\n• by far the most common type of scale\nd3.scaleSqrt()\nd3.scalePow()\nd3.scaleLog()\n…",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#39": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaOrdinal scales \nHave a discrete domain (e.g., a set of names \nor categories) and discrete range\nd3.scaleOrdinal()\nvarscale =d3.scaleOrdinal (); \nscale.domain([ \"A\", \"B\", \"C\", \"D\", \"E\", \"F\" ]);\nscale.range([ 0, 1, 2, 3, 4, 5 ]); \nscale( \"C\")// 2",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#4": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaWhat is D3.js for? \n[http://d3js.org/]",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#40": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaTime scales\nIs an extension of d3.scaleLinear that uses JavaScript Date\nobjects as the domain representation\ndomain values are coerced to dates\nscale.ticks() returns representative dates from the scale's input \nscale.ticks(n)\n• creates an array with n equally-distributed ticks\nscale.ticks(d3.timeMinute, 15)\n• creates ticks at 15-minute intervalsvarscale = d3.scaleTime ();\nscale.domain([new Date(\" 10/1/2016 \"), new Date(\" 10/30/2016 \")]);\nscale.range([0,100]);",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#41": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaSelectors\nSelections of elements is similar to jQuery\nCSS selectors\n• see [learn.co]\nsimple selectors\n• identify elements by one facet\ncompound selectors\n• identify elements by two or more facets\nfoo.bar // <foo class=\"bar\">\nfoo#bar // <foo id=\"bar\">#foo // <any id=\"foo\">\nfoo // <foo>\n.foo // <any class=\"foo\">\n[foo =bar] // <any foo=\"bar\">\nfoo bar // <foo><bar></foo>",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#42": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaSelection method\nD3 provides two top-level methods for selecting\nelements: \nd3.select( selector_str ) \nd3.selectAll( selector_str )\nSelections are wrappers for DOM elements\nprovide utility functions to edit DOM elements (style, attr, \nremove, append, etc)\nvartitles =d3.selectAll( \"h1\"); \ntitles.style( \"color\", \"red\"); ",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#43": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaSelect and append \nSemantic of the append method\napplied to a single element, adds the specified child\napplied to an array of elements, adds one child to each\n//Append two elements h1\nbody.append( \"h1\").text(\"second h1\" ); \nbody.append( \"h1\").text(\"third h1\" ); \n//Select h1 elementsvarhs=d3.selectAll( \"h1\"); \n//Append h2 to each h1 el ement (always the same text)\nhs.append( \"h2\").text(\"heading 2\" ).style( \"color\", \"green\" );// select the <body> element\nvarbody =d3.select( \"body\"); \n// add an <h1> element with text “Last h1 ”\nbody.append( \"h1\").text(\"Last h1\" );",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#44": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaData join\nSuppose we want to make a basic bubble chart using\nD3.js\nwe need to create an SVG circle element for each of your\ndata point\nvar data = [{\"x\": 50,  \"y\": 100, \"z\": 10}, {\"x\": 100, \"y\": 150, \"z\": 25}, …]\nzi st h e  radius(x,y) is the center",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#45": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaData join example code\nThis code creates the bubble chart\nObserve that we select elements that we know don’t exist in \norder to create new ones<html>\n// load d3.js<body>\n<svgwidth=\" 500\" height=\" 400\"></svg>\n<script >\nvar dataSet = [\n{\"x\": 50,  \"y\": 100, \"z\": 10},\n{\"x\": 100, \"y\": 150, \"z\": 25}, …]\nvar svg = d3.select(\" svg\");\n……\nsvg.selectAll(\" circle \")\n.data( dataSet ) // this part will \n.enter()    // be clear soon\n.append(\" circle \")\n.attr(\" cx\", function(d) { return d. x})\n.attr(\" cy\", function(d) { return d. y})\n.attr(\" r\",   function(d) { return d. z})\n.attr(\" fill\", ..)\n.attr(\" stroke-width \", ..)\n.attr(\" stroke \", ..);\n</script >\n</body></html>",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#46": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaThe data driven paradigm\nInstead of instructing D3.js to create circles, we tell \nD3.js that the elements of the selection \" circle \" \nshould always correspond (i.e., are “joined”) to the \ndata contained in the array dataSet\nsee [Bostock 12]…\nsvg.selectAll(\" circle \")\n.data( dataSet ) \n.enter()\n…",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#47": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaThree kinds of elements\nElements already present in the DOM that are already joined to \nsome data \nthey are selected by the update() function\nElements that are not yet in the DOM and that are joined to new \ndata \nthey are selected by the enter() function\nElements of the DOM that do not have a joined datum anymore\nthey are selected by the exit() function\nupdate exitdataset elements\nenter",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#48": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaThe data() default output\nElements to be updated are the default selection\nthe actual result of the data() operator\nthis allows you to automatically select only the elements for \nwhich there exists corresponding data…\nvarp = d3.select (\"body\" )  \n.selectAll (\"p\")   \n.data([4, 8, 15, 16, 23, 42])     \n.text(function (d) { return d; });\n…",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#49": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaA first common pattern\nBreak elements into three sets\nelements to be updated\nelements to be inserted\nelements to be removedvarp = d3.select (\"body\" )  // Update…\n.selectAll (\"p\")   \n.data([4, 8, 15, 16, 23, 42])     \n.text(function (d) { return d; });\np.enter ().append (\"p\") // Enter…\n.text(function (d) { return d; });\np.exit().remove (); // Exit…",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#5": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js in brief\nD3.js can (among other things):\nbind data to DOM elements\n• when the data change, the elements of the DOM and their \nproperties change\n• this is why its name is “data driven documents”\nhandle interaction and animation\n• decide what happens when the user interacts with the \ngraphics \n• decide the timings of the changes\ngenerate SVG on-the-fly",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#50": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaA second common pattern\nThe sequence of enter() and append() functions add the new \ndata to the update clause\nThe doSomething() function applies to the default update data \n(now enter + update)varp = d3.select (\"body\" )  // Enter…\n.selectAll (\"p\")   \n.data([4, 8, 15, 16, 23, 42])\n.enter ().append (\"p\") \n.text(function (d) { return d; });\np.doSomething (); // Enter + Update\np.exit().remove (); // Exit…",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#51": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaThe data() function\nThe data() function joins the specified array of data with the \ncurrent selection\nvalues \nis an array of number or objects\nkey() \nis an optional function that controls how data is joined to elements\nif it is not specified, then the i-th datum in values is assigned to the i-th \nelement in the current selection \notherwise, it returns a string which is used to join a datum with its \ncorresponding element\n• the one that has the same keyselection. data([values[, key]])",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#52": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaLoading data from CSV\nLoads data from a file in CSV (Comma-\nSeparated Values) format \nInside the .then callback the “data” parameter \ncorresponds to the array of objects loaded from the CSV filed3.csv(\"stocks.csv“ )\n.then(function( data) {\n// executed right after loading\n}).catch(function( error ) {\n// executed if errors occurr\n});",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#53": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaLoading data from JSON\nLoads data from a file in JSON (JavaScript \nObject Notation) format \nInside the .then callback the “data” parameter \ncorresponds to the object loaded from the JSON filed3.json(\"stocks.json“ )\n.then(function( data) {\n// executed right after loading\n}).catch(function( error ) {\n// executed if errors occurr\n});",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#54": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaTransitions\nA transition is a special type of selection where the operators \napply smoothly over time rather than instantaneously\nselection.transition(): derive a tr ansition from an existing selection\ntransition.duration([duration]): specifies duration in milliseconds\ntransition.attr(attribute, value): trans forms the specified attribute into \nthe specified valued3.select(\" body \").transition().duration( 5000 ).attr(\" bgcolor \",\"yellow \");",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#55": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaInterpolations in transitions\nTransitions interpolate values over time\nD3.js determines an appropriate interpolator by inferring a \ntype for each pair of starting and ending values\ncolors\ngeometric transforms\nstrings with embedded numbers (e.g., \"96px\")\n• string interpolators have several applications: \n– interpolating font sizes, stroke-width, etc\n– interpolating path data (e.g., \"M 0, 0 L 20, 30\")",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#56": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaExample: Italy aging\n\"Our aging world\" depicts shifts in population\nby age group\nfor different countries\nfor both genders\nWe will visualize shifts\nin population\nby age group\nfor a single country\naggregating genders\nhttps://fathom.info/aging/\nhttp://www.dia.uniroma3.it/~infovis/demos/italy_aging_d3.zip",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#57": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaOur data format\n[\n{\n\"year\": \"1950\",\n\"ageGroups\" : [\n{ \"ageGroup\" :\"0‐4\", \"population\" :4369}, \n{ \"ageGroup\" :\"5‐9\", \"population\" :3839}, \n{ \"ageGroup\" :\"10‐14\", \"population\" :4170}, \n{...} \n]\n},\n{\n\"year\": \"1960\",\n\"ageGroups\" : [{…}, {…}]\n}\n]",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#58": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaThe code\nUse data to create \nmultiple elements\n// dataset is initialized with \n// our data (for instance from 1950)\nvarvalues =dataset[ 0][\"ageGroups\" ]; \nvarbar =d3.selectAll( \".bar\").data(values, function (d){\nreturnd.ageGroup;}); \nbar.enter()\n.append( \"rect\") \n.attr(\"class\", \"bar\")\n.attr(\"x\", function (d) { returnx(d.ageGroup);}) \n.attr(\"y\", function (d) { returny(d.population);}) \n...[\n{\n\"year\": \"1950\",\n\"ageGroups\" : [\n{ \"ageGroup\" :\"0‐4\", \"population\" :4369}, \n{ \"ageGroup\" :\"5‐9\", \"population\" :3839}, \n{ \"ageGroup\" :\"10‐14\", \"population\" :4170}, \n{...} \n]\n},\n{\n\"year\": \"1960\",\n\"ageGroups\" : [{…}, {…}]\n}\n]",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#59": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaThink with joins!\nfunction updateDrawing(data){ // data = dataset[i] for some i\nvarvalues =data[\"ageGroups\" ]; \n// Data join\nvarbar =svg.selectAll( \".bar\").data(values, function (d){\nreturnd.ageGroup}); \n// Exit clause: Remove elements\nbar.exit().remove(); \n// Enter clause: Add elements\nbar.enter().append( \"rect\").attr(\"class\", \"bar\")\n.attr(\"width\", x.bandwidth())\n…\n// Enter + Update clause: Update y and height\nbar.transition().duration(updateTime).attr(\"y\", function (d) { returny(d.population); })\n.attr(\"x\", function (d) { returnx(d.ageGroup); })\n.attr(\"width\", x.bandwidth())\n.attr(\"height\" , function (d) { returnheight -y(d.population); });\n... }",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#6": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaD3.js history\n2009\nProtovis, the library that inspired D3.js, is first released\n2011\nversion 2.0 of D3.js is released \n• and Protovis project is abandoned\n2012\nversion 3.0 released\n2016\nversion 4.0 released\n2018\nversion 5.0 released\n2020\nversion 6.0 released",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#60": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaMore examples\nSuppose you have the following current datasets\ntry to update the drawing using updateDrawing(input) in the consolevar input = { \"year\" :\"1955\", \n\"ageGroups\" :\n[ \n{ \"ageGroup\" :\"0‐4\", \n\"population\" :4034}, \n{ \"ageGroup\" :\"5‐9\", \n\"population\" :4286}\n]\n}var input = { \"year\" :\"1960\", \n\"ageGroups\" :\n[ \n{ \"ageGroup\" :\"0‐4\", \n\"population\" :2503}, \n{ \"ageGroup\" :\"5‐9\", \n\"population\" :1300}, \n{ \"ageGroup\" :\"30‐34\", \n\"population\" :2700}\n]\n}",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#61": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaUse of the y linear scale\nInput domain (y axis)\nOutput range (y axis) 250 00 4619\n1993\n142.13\nHeight = 250 – y(1993) = 250 – 142.13 = 107.87 pixelspopulation\npixels",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#62": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaDomains and ranges\nUpdate periodically the domain of our x and y scales using the \ncurrent values\nupdate accordingly axes and bars’ heights and widths\nvary =d3.scaleLinear().range([height, 0]); \n...function updateYScaleDomain(data){ \nvarvalues =data[\"ageGroups\" ]; \ny.domain([0, d3.max( values, function (d) { \nreturnd.population;})\n]); \n}",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#63": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaLayouts: Force Directed\nobservablehq.com/@d3/force-directed-graph\nThis simple force-directed graph shows \ncharacter co-occurence in Les Misérables",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#64": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaLayouts: circle packing\nEnclosure diagrams use containment to \nrepresent the hierarchy. \nobservablehq.com/@d3/circle-packing\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#65": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaLayouts: Bundle\nDanny Holten's heirarchical edge bundling\nobservablehq.com/@d3/hierarchical-edge-bundling\nDependencies between \nclasses in a software class hierarchy\nDependencies are \nbundled according to the parent packages",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#66": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaThe tree layout implements the Reingold-Tilford \nalgorithmLayouts: Radial Trees\nobservablehq.com/@d3/radial-tidy-tree\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#67": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaReferences\nhttps://github.com/mbostock/d3/wiki/API-Reference\nhttps://github.com/mbostock/d3/wiki\nhttps://groups.google.com/forum/#!forum/d3-js\nhttp://stackoverflow.com/questions/tagged/d3.js\n[learn.co] https://learn.co/lessons/css-selectors\n[Bostock 12] Mike Bostock, “D3 Workshop”, 2012 \nhttps://bost.ocks.org/mike/d3/workshop/#0\n[protovis] Mike Bostock, “Protovis: a graphical approach to \nvisualization”, https://mbostock.github.io/protovis/\n[W3C] “W3C Recommendation”,  \nhttp://www.w3.org/TR/SVG/intro.html\n[D3 API] https://github.com/mbostock/d3/wiki/API-Reference",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#7": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaSummary\nInstallation and configuration\nSupport for arrays\nD3 Collections\nObjects conversion\nMaps, Sets, Nests\nScales\nData Join, data transformations\nExample application: Enter, Exit, Update\nLayouts",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#8": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaInstalling: accessing from the Web\nDirectly link the latest release:\nThe d3object (together with its properties and its methods) is \nnow available to your scripts\nPros\nvery easy\nthe latest D3.js release of version 7 is downloaded\n• currently 7.8.4 (Apr 2023)\nCons\nit does not work when offline\naccessing the official d3js.com website may be slower <script src =\"http://d3js.org/d3.v7.min.js\" ></script>",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\120-hands-on-d3-js-10.pdf#9": "120-hands-on-d3-js-10 copyright ©2023 g. da lozzo, v . di donato, m. patrignani, c. squarcellaInstalling: accessing locally (1/2)\nDownload the file d3.v7.min.js from \nhttp://d3js.org\nthe word “min” in the file name means that this file is “minified”\n• it is equivalent to the full version d3.v7.js\n• it is lighter (273 KB versus 573 KB)\n• it is not human readable\nLoad the file from your html page\nPros\nworks even when offline\nCons\nyou are not sure to get the latest release",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#0": "130-interaction-08         copyright ©2023 m.patrignaniInformation Visualization\nM. PatrignaniInteraction\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#1": "130-interaction-08         copyright ©2023 m.patrignaniCopyright notice\nAll the pages/slides in this presentation, including but not limited \nto, images, photos, animations, videos, sounds, music, and text (hereby referred to as “materi al”) are protected by copyright\nThis material, with the exception of some multimedia elements \nlicensed by other organizations, is property of the authors and/or organizations appearing in the first slide\nThis material, or its parts, can be reproduced and used for \ndidactical purposes within universities and schools, provided \nthat this happens for non-profit purposes\nAny other use is prohibited, unless explicitly authorized by the\nauthors on the basis of an explicit agreement\nThis copyright notice must always be redistributed together with\nthe material, or its portions",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#10": "130-interaction-08         copyright ©2023 m.patrignani\nTraditional gaming input devices\nConsole controls\n(Xbox)Game controller \n(Nintendo)\nJoystick\n(Logitech Extreme 3D Pro)\nSteering wheel \n(Thrustmaster T300 Ferrari GTE)",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#11": "130-interaction-08         copyright ©2023 m.patrignani\nEye tracking glasses\n(Tobii glass)Wearable input devices\nChording keypads\n(twiddler)\nOne handed keyboards\n(Frogpad 2)\nOptical head-mounted \ndisplays (Google \nglass)Gloves\n(Keyglove)\nTouchpad\nCameraMicrophone",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#12": "130-interaction-08         copyright ©2023 m.patrignaniGesture recognition\nAim: react to the user movements\nusally of hands or face \nTimings of gesture regognition\noffline gesture recognition\n• reacts to a conventional gesture after the movement is performed\nonline gesture recognition\n• reacts while the movement takes place\nGesture recognition devices\nwired gloves\nstereo cameras \nbased on motion and position sensors",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#13": "130-interaction-08         copyright ©2023 m.patrignaniGesture recognition\n… with wired gloves and stereo cameras\nWired gloves \n(Nintendo Powerglove 1989)\nMotion capture\n(Xbox 360 Kinect)\nWired gloves\n(MetaMotions Cyberglove II 2005)",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#14": "130-interaction-08         copyright ©2023 m.patrignaniGesture recognition\n...based on motion and position sensors\nAccelerometers\n• single and multi-axis\n• measure linear acceleration relative to freefall\nGyroscopes\n• measure the angular rate of rotational movement about one or \nmore axes\nCompasses\n• magnetic sensors\nBarometers\n• pressure sensors\n• measure relative and absolute altitude \nLoad sensors",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#15": "130-interaction-08         copyright ©2023 m.patrignaniGesture recognition\n…based on motion and position sensors \nMotion controller \n(Wii remote)\nBalance board \n(Wii U BB)\nGoogle Glass Head nudge \n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#16": "130-interaction-08         copyright ©2023 m.patrignaniTablets and smartphones input devices\nCommon input devices\nstylus\n• may be used to realize soft keyboards \ntouchscreens\n• may be used to realize soft keyboards \nUsually available\nmotion and position sensors\n• accelerometers, gyroscopes, compasses, and barometers\nvoice command capabilities",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#17": "130-interaction-08         copyright ©2023 m.patrignani\nExperimental input devices\nBrain-computer interfaces\n(Emotiv EPOC)Brain-computer interfaces\n(Neural Impulse Actuator)\n3D pointer\n(Novint Falcon)",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#18": "130-interaction-08         copyright ©2023 m.patrignani\nWearable output devices\nBone Conduction \nTransducer (BCT)\nconduction of sound to \nthe inner ear through the \nbones of the skull\nMonocular prism display\n(visual overlay) BCT\nOptical head-mounted displays\n(Google glass)Data Gloves\n(Gloveone)Haptic actuatorsActuators for haptic vibrations\nsimulate touch sensations",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#19": "130-interaction-08         copyright ©2023 m.patrignani\nHead-mounted displays\nSamsung Gear VR \nfor Galaxy S6\nSony HMZ-T3W\nGoogle cardboard\nfor Android",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#2": "130-interaction-08         copyright ©2023 m.patrignaniOverview\nDefinition of interaction\nClassifications of interaction\nExamples of interaction",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#20": "130-interaction-08         copyright ©2023 m.patrignaniClassification – functional degree\nFrom [Mazza 09]\n1. Static\nusers are not allowed to perform any type of interaction\nonly a single, unmodifiable view is generated\n2. Manipulable\nusers are allowed to manipulate the process that generates \nthe view, via zooming, rotation, panning,…\n3. Transformable\nusers are allowed to manipulate, in the preprocessing \nphase, the input data of the representations\n• for example through data filtering",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#21": "130-interaction-08         copyright ©2023 m.patrignaniClassification – immersive experience degree\n1. Traditional\nthe interaction is mediated by some “point of \ncommunication”\n2. Augmented reality\ncomputer-generated output is mixed with the \nenvironment the user is familiar with\n3. Virtual reality\nthe computer reproduces the whole environment for the \nuser to live in\nimmersive multimedia",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#22": "130-interaction-08         copyright ©2023 m.patrignaniClassification –interaction paradigm\nTop-down exploration\nShneiderman mantra [Shneiderman 96]\n• Overview first, zoom and filter, then details on demand\n• Overview first, zoom and filter, then details on demand• Overview first, zoom and filter, then details on demand\nBottom-up exploration\nWhen data are massive, overview may be impossible to \nget, hence\n• Search, show context, expand on demand\n• Search, show context, expand on demand• Search, show context, expand on demand\n– From [van Ham and Perer 09]",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#23": "130-interaction-08         copyright ©2023 m.patrignaniUser-centered classification\nProposed by [Yi et al. , 07]\nSurvey of 59 papers and 51 systems\n311 individual interaction techniques were \ncollected and grouped by user intent\nwhat a user wants to achieve through a specific \ninteraction technique",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#24": "130-interaction-08         copyright ©2023 m.patrignaniUser-centered classification\nSeven categories of interaction based on user \nintents [Yi et al. , 07] \n1. Select\n2. Explore\n3. Zoom\n4. Reconfigure5. Encode6. Filter\n7. Connect",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#25": "130-interaction-08         copyright ©2023 m.patrignani1. Select\nMark items of interest to keep track\noften works as a preceding action to subsequent \noperations\nExamples\nselecting a placemark in Google Map\nthe Focus feature in TableLensMark something as interesting!",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#26": "130-interaction-08         copyright ©2023 m.patrignaniGeneralized Selection\nSelection of a category rather than a specific \nitem\nselect items matching some attribute(s) of the \npointed out item",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#27": "130-interaction-08         copyright ©2023 m.patrignaniQuery relaxation\nProposed by [Heer et al. , 08]\nAllows the users to generalize their selection \ndynamically\nVideo at: https://www.youtube.com/watch?v=LVMjfsoMZfg",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#28": "130-interaction-08         copyright ©2023 m.patrignani2. Explore\nEnables users to examine different subsets of data \novercoming the limitation of display size\nMoves the viewing focus from one position in \ninformation structure to another\nusually the movement is as smooth as possible\nTwo main types of exploration\npanning / scrolling\ndirect walkingShow me something else!",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#29": "130-interaction-08         copyright ©2023 m.patrignaniExplore by panning\nPanning\nmovement of a camera across a scene, or\nscene movement while the camera stays still\nInteraction technique\nthe user presses  keys  \nthe user slides scrollbars\nthe user grabs the scene and moves it with a mouse \nthe user rolls the mouse wheel\nExamples\npanning in Google Earth / Google Map\n• http://maps.google.com",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#3": "130-interaction-08         copyright ©2023 m.patrignaniInteraction’s definition\nFrom the Human Computer Interaction research field\nInteraction is direct manipulation and instantaneous change \n• [Becker et al. , 87] \nInteraction is the communicati on between user and the system \n• [Dix & Ellis, 98] \nFrom the Information Visualization research field\nInteraction allows for direct manipulat ion of the graphical representation \nof the data\n• [Waterson 02]\nInteraction provides users with the ability to directly or indirectly \nmanipulate and interpret representations\n•[ Y i  et al. , 07]\nFinding a solid definition of interaction is challenging\n•[ Y i  et al. , 07]",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#30": "130-interaction-08         copyright ©2023 m.patrignaniMapping America\nPanning example\nhttp://projects.nytimes.com/census/2010/map",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#31": "130-interaction-08         copyright ©2023 m.patrignaniExplore by direct walk\nDirect walk\nmoving in the view by a series of mouse points or \nother direct-manipulation methods\na hyperlink is a direct walk where the change is \nusually not smooth\nExamples\nmoving in Google StreetView\nvisual Thesaurus\nbrowser navigation",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#32": "130-interaction-08         copyright ©2023 m.patrignaniDirect walking in Visual Thesaurus\nWalking through terms semantics\nhttps://www.visualthesaurus.com/",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#33": "130-interaction-08         copyright ©2023 m.patrignaniLink-Sliding and Bring&Go\nTwo techniques introduced in [Moscovich et al. , ‘09] \nto navigate large networks\nhttps://www.youtube.com/watch?v=R07e5dSQQeQ\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#34": "130-interaction-08         copyright ©2023 m.patrignaniBring neighbors lens\nThe lens “attracts” neighbors \n[Tominski et al. , ‘06]\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#35": "130-interaction-08         copyright ©2023 m.patrignaniScrolling\nOrthoZoom scrollbars [Appert \n& Fekete, 06]\n1D multi-scale navigation\npanning is performed along the \nslider dimension\nzooming is perfomed along the \northogonal one\nwww.youtube.com/watch?v=fwz04BNRQQQ\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#36": "130-interaction-08         copyright ©2023 m.patrignani3. Zoom\nCalled “Abstract/Elaborate” in [Yi et al. , 07]\nAdjust the level of abstraction (overview and details)\nfundamentally without changing the representation\nExamples\ngeometric zooming in Google Earth / Google Maps\npop-up tooltips\nselected rows in Table Lens\nunfolding sub-categories in an interactive pie chart\ndetails-on-demand in SunburstShow me more or less detail!",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#37": "130-interaction-08         copyright ©2023 m.patrignaniZooming examples\nExplore these two examples\nhttp://micro.magnet.fsu.edu/primer/java/scienceoptic\nsu/powersof10/index.html\nhttp://htwins.net/scale2/\nWhat are the limitations of zooming?\nzooming relies on your memory!",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#38": "130-interaction-08         copyright ©2023 m.patrignaniZooming interaction\nExplicit input of zooming factor\nArea zooming\nselect a zoom area that will become \nentire view\ncontext switch can be disorienting\nexample: CAD/CAM\nPoint zooming\nselect the zoom+ or zoom- tool and \nclick the area you want to magnify\nScrollbar zooming\nMouse controlled zooming\npointer selects the point to zoom\nwheel controls zooming factor\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#39": "130-interaction-08         copyright ©2023 m.patrignaniArea zoom example\nShelby County, Alabama Land Information Tool \nleft-click and drag a box onto any part of the map\nrelease the mouse button\nthe map zooms in accordingly\nretrieved from http://gis.shelbyal.com/ (2014)",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#4": "130-interaction-08         copyright ©2023 m.patrignaniInteraction & information visualization\nInteraction is at the heart of modern information \nvisualization\nchanging one’s view of the data greatly enhances \ncomprehension\noften no single all-inclusive view is likely to lead to \ninsight",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#40": "130-interaction-08         copyright ©2023 m.patrignaniA model for zooming and panning\n[Furnas & Bederson, ’95] introduced the idea of \n“space-scale diagram”\ncharacterizes operations in zooming and panning\nGoals\nunderstand multiscale systems\nguide design\nauthoring tool",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#41": "130-interaction-08         copyright ©2023 m.patrignaniSpace-scale diagram\nAbstraction for describing \npanning and zooming operations\nassociate the \n2D image with a 3D projection \nxyz\nxy",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#42": "130-interaction-08         copyright ©2023 m.patrignaniSpace-scale diagram: rays\nPoints like pand qin the \noriginal 2D surface become rays pand q\nin the space-scale diagram\nthe circles in \nthe example \npicture \nbecome cones in the diagram\nxyz\nxy\nqpqp",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#43": "130-interaction-08         copyright ©2023 m.patrignaniSpace-scale diagram: views\nA viewing window is \na 2D rectangle of fixed size placed somewhere in the space-scale diagram\nxyz",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#44": "130-interaction-08         copyright ©2023 m.patrignaniSpace-scale diagram: zooming in\nZooming in \ncorresponds to moving upward along a ray\nthe picture \nrepresents a zoom in along the qray\nxz\nq",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#45": "130-interaction-08         copyright ©2023 m.patrignaniInterpretations of user interactions\nUser interactions \ncan be interpreted as movements in the space-scale diagram\n(a) panning\n(b) zooming out     \nalong ray p\n(c) zoomin in along \nray q xzp q\n(a)\n(b)\n(c)",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#46": "130-interaction-08         copyright ©2023 m.patrignaniShortest path between two views\nThe shortest path \nbetween two views is often not a straight line\neach arrow \nrepresents one unit of cost\nIt is often “shorter” to \nzoom out (a), make a \nsmaller pan (b), and \nzoom back in (c), than to make a large pan directly (d)\nthis is because zoom \nis logarithmic xzp q\n(d)\n(b)(c) (a)",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#47": "130-interaction-08         copyright ©2023 m.patrignaniComputing optimal trajectories\nOptimal \ntrajectory between the two views\nxz\np q(c)\n(b) (a)",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#48": "130-interaction-08         copyright ©2023 m.patrignaniZooming: details-on-demand\nThe zoom category also comprises more abstract \ntypes of “zooming” consisting of showing more details\n“Details-on-demand” is the term used in infovis when \nproviding the user with more information about data \ncases\nExamples\nask more info about a data case\nmove from aggregation view to individual view\n• some data may be filtered based on scale or represented by some \nabstraction",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#49": "130-interaction-08         copyright ©2023 m.patrignaniPop-up tooltips\nHovering mouse cursor brings up details of item\nTable Lens [Rao & Card, ‘94]",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#5": "130-interaction-08         copyright ©2023 m.patrignaniInteraction classifications\nBased on response time\nBased on atomic actions\nBased on supporting technologies\nBased on functional degree \nBased on immersive experience degree\nBased on its paradigm\nBased on user intents",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#50": "130-interaction-08         copyright ©2023 m.patrignaniExcentric labeling\nLabel a neighborhood of objects located around the cursor \n[Fekete & Plaisant, ‘99] \nhttp://www.cs.umd.edu/hcil/excentric/dist/bin/test7.html",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#51": "130-interaction-08         copyright ©2023 m.patrignaniDetails-on-demand in SunBurst\nA wedge is enlarged when selected \n[Stasko & Zhang 00] \n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#52": "130-interaction-08         copyright ©2023 m.patrignani4. Reconfigure\nProvide different perspectives by changing the \nspatial arrangement of representation\nExamples\nchanging the attributes in a scatter plot\nsorting and rearranging columns in TableLens\nadjusting the baseline of a stacked histogramShow me a different arrangement!",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#53": "130-interaction-08         copyright ©2023 m.patrignaniRearranging a scatter plot\nChange the attributes that are used in the x and \ny axes\nhttp://www.ncomva.se/guide/?chapter=Visualizations&section=Scatter%20Plot\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#54": "130-interaction-08         copyright ©2023 m.patrignaniTable Lens\nRearranging columns\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#55": "130-interaction-08         copyright ©2023 m.patrignaniTable Lens\nSorting in Table Lens\nhttp://www.ncomva.se/guide/?chapter=Visu alizations&section=Table%20Lens\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#56": "130-interaction-08         copyright ©2023 m.patrignaniStacked Histogram\nThe baseline adjustment feature\nClicking on a variable the histogram adjust to have that \nvariable aligned with the baseline \nhttp://www.meandeviation.com/dancing-histograms/hist.html\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#57": "130-interaction-08         copyright ©2023 m.patrignani5. Encode\nChange visual appearances\nChange format\n• color, size, orientation, font, shape, …\nChange representation type\n• switch from one type of representation (e.g., scatter plot) \nto a second one (e.g., bubble chart or parallel coordinates)Show me a different representation!",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#58": "130-interaction-08         copyright ©2023 m.patrignani6. Filter\nChange the set of data items being presented based \non some specific conditions\nExamples\nsematic zooming\nlocal edge lens\nkeystoke based filtering in NameVoyager\nattribute Explorer\nQuerySketch\ndynamic queryShow me something conditionally!",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#59": "130-interaction-08         copyright ©2023 m.patrignaniSemantic zooming: space-scale diagram\nLight purple shows a \ngeometric zooming \nall the details are \npreserved through the zooming\nLight blue shows a \nsemantic zooming\nas you zoom out \ndetails are filtered off\nxzp q",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#6": "130-interaction-08         copyright ©2023 m.patrignaniClassification – response time\nResponse times of computer must be tuned to \nhuman response times\n• From [Waterson ‘02] and [Stasko ‘13]\n0.1 sec\nmotion, animation, visual continuity\n1 sec\ndialogue, conversation break\n10 sec\ncognitive response, unit task",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#60": "130-interaction-08         copyright ©2023 m.patrignaniLocal Edge Lens\nAn example of a \nsemantic lens\nedges that do not have \nand endpoint under the lens disappear \n• [Tominski et al. , ‘06]\nThis metaphora can \nbe generalized\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#61": "130-interaction-08         copyright ©2023 m.patrignaniFilter based on keystroke\nNameVoyager\nhttp://www.babynamewizard.com/voyager\n",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#62": "130-interaction-08         copyright ©2023 m.patrignaniFiltering by dynamic queries\nWork instantly within a few milliseconds as \nusers adjusts sliders or select buttons to form simple queries\n[Shneiderman ‘94]\nContinuously update the data that is filtered \nfrom the database and visualized\nProbably best-known and one of most useful \ninfovis techniques\n[Stasko ‘13]",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#63": "130-interaction-08         copyright ©2023 m.patrignaniTraditional queries\nSQL queries\npowerful and flexible\nSQL limitations\nneeds technical skills\nrigid syntax\nthe magnitude of results is unpredictable\nonly shows exact matches\n• no helpful context is shown\nrefining the query may be slowSelect house-address\nFrom atl-realty-dbWhere price >= 200,000 and\nprice <= 400,000 andbathrooms >= 3 and\ngarage == 2 and\nbedrooms >= 4Select house-addressFrom atl-realty-dbWhere price >= 200,000 and\nprice <= 400,000 andbathrooms >= 3 and\ngarage == 2 and\nbedrooms >= 4",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#64": "130-interaction-08         copyright ©2023 m.patrignaniDynamic queries\nSpecifying a query brings immediate display of \nresults\nResponsive interaction (< .1 sec) with data, \nconcurrent presentation of solution\nAllows beginners a faster entrance without \nhaving much practice, and still offers experts some mighty functions ",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#65": "130-interaction-08         copyright ©2023 m.patrignaniDynamic query ingredients\nAn interface that allows dynamic queries has \nthese properties [Williamson & Shneiderman 92] [Shneiderman 94]\ngraphical representation of the request\n• selection by pointing (not typing)\ngraphical visualization of the results\n• immediate and continuous\n• delivers results immediately when parameters are \nchanged\nallows rapid, incremental and reversible actions",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#66": "130-interaction-08         copyright ©2023 m.patrignaniDynamic query limitations\nOperations are fundamentally conjunctive\ncan not formulate arbitrary boolean expressions\n• (x < 20) OR ((x > 20) AND (y > 1.80))\nOperations are global in scope\nall the data set is affected\nControls take space\nReal-time interaction becomes increasingly difficult \nwith large data sets\nsophisticated data structures required",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#67": "130-interaction-08         copyright ©2023 m.patrignani7. Connect\nHighlight associations and relationships\nespecially in coordinated views or small multiples views\nExamples\nbrushing and linking \nhighlighting directly connected nodes in Vizster\n• http://vis.stanford.edu/papers/vizster\nbring neighbors lensShow me related items!",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#68": "130-interaction-08         copyright ©2023 m.patrignaniConnect: brushing and linking\nBrushing\nselecting a subset \nof the data items\nLinking\nbrushed data is \nhighlighted in different views of a visualization\nFrom [Voigt ‘02]",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#69": "130-interaction-08         copyright ©2023 m.patrignaniConclusions\nInteraction is the heart of all effective visualization \nsystems\nIn particular it offers three powerful exploration and \ninvestigation tools\n1. generalized selection\nselect all items with similar values\n2. dynamic queries\nimmediately assess the effects of changes in filtering parameters\n3. brushing and linking\nidentify the same objects in the different perspectives offered by \ncombined views ",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#7": "130-interaction-08         copyright ©2023 m.patrignaniClassification – atomic actions\nPress key\nMove pointer (hover)\nPoint and click\nDrag and drop\nVoice\nGesture\nRotate\ntilt, roll\nTouch, grab\n…",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#70": "130-interaction-08         copyright ©2023 m.patrignaniBibliography and further readings\n[Appert & Fekete, 06] Caroline Appert and J ean-Daniel Fekete, “OrthoZoom scroller: 1D \nmulti-scale navigation” SIGCHI Conference on  Human Factors in Computing Systems, 2006\n[Becker et al., 87] R. A. Becker, W. S. Cl eveland, and A. R. Wil ks, \"Dynamic Graphics for \nData Analysis,\" Statistical Science, vol. 2, 1987\n[Dix & Ellis, 98] A. Dix and G. Ellis, \"Starti ng simple: adding value to static visualisation \nthrough simple interaction,\" AVI 1998\n[Fekete & Plaisant, 99] Jean-Daniel Fekete , Catherine Plaisant, “Excentric Labeling: \nDynamic Neighborhood Labeling for Data Visualization”. CHI 1999\n[Furnas & Bederson, 95] George W. Furnas and Benjamin B. Bederson, “Space-Scale \nDiagrams: Understanding Multiscale Interfaces”, SIGCHI 1995\n[Heer et al. , 08] Jeffrey Heer, Maneesh Agrawala, Wesl ey Willett, “Generalized Selection via \nInteractive Query Relaxation” CHI 2008\n[Mazza 09] Riccardo Mazza, “Introduction to  Information Visualization”, Springer, 2009\n[Moscovich et al. , 09] T. Moscovich, F. Chevalier, N.  Henry, E. Pietriga, J.-D. Fekete, \n“Topology-Aware Navigation in  Large Networks”, CHI '09\n[Rao & Card, 94] Ramana Rao and Stuart K. Card, “The Table Lens: Merging Graphical and \nSymbolic Representations in an Interactiv e Focus+Context Visualization for Tabular \nInformation”, ACM CHI 94",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#71": "130-interaction-08         copyright ©2023 m.patrignaniBibliography and further readings\n[Shneiderman 94] Ben Shneiderman “Dynamic Quer ies for Visual Information Seeking”, in \nIEEE Software, 11, 1994\n[Stasko 13] John T. Stasko, CS 7 450, Information Visualization, 2013 \nhttp://www.cc.gatech.edu/~ stasko/7450/syllabus.html\n[Stasko & Zhang 00] John Stasko and E ugene Zhang, “Focus+con text display and \nnavigation techniques for enhancing radial, spac e-filling hierarchy visualizations”, INFOVIS \n2000\n[Tominski et al. , 06] C. Tominski, J. Abello, F. van Ham, H. Schumann, “Fisheye Tree Views \nand Lenses for Graph Visualization” , Information Visualization, 2006\n[Voigt 02]: Robert Voigt, “An Extended Scatterp lot Matrix and Case Studies in Information \nVisualization”, Master's thes is, Hochschule Magdeburg-Stendal, 2002\n[Waterson 02] Sarah Waterson, “Brushing, Link ing & Interactive Querying”, Material for \nInformation Visualization Course, 2002\n[Williamson & Shneiderman, 92] C. Will iamson, B. Shneiderman. “The Dynamic \nHomeFinder: Evaluating Dynamic Queries in  a Real-Estate Information Exploration \nSystem”. Proc. ACM SIGIR, 1992\n[Yi et al. , 07] Ji Soo Yi, Youn ah Kang, John T. Stasko, and Julie A. Jacko, “Toward a \nDeeper Understanding of the Role  of Interaction in Informat ion Visualization”, InfoVis 2007",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#8": "130-interaction-08         copyright ©2023 m.patrignaniClassification – supporting technologies\nDifferent kinds of devices allows different kinds \nof interactions with the user\ndesktops and laptops\ntablets and smartphones\ngaming stations\nwearable devices\nexperimental environments\n…",
    "dataExtraction\\data_test\\rootfolder\\universita\\visualizzazioneDati\\130-interaction-08.pdf#9": "130-interaction-08         copyright ©2023 m.patrignaniDesktops and laptops input devices\nKeyboards\nallows key selection\nPointing devices\nallows hovering, point and click, drag and drop\nTrackball (Apple)\n Mouse\n Trackpoint (IBM)\n Touchpad\n",
    "dataExtraction\\data_test\\rootfolder\\varie\\ricette\\15-quantum-un-qubit-heisenberg-02.pdf#0": "10/6/2021\n115-quantum -un-qubit -Heisenberg -02\n1Next Generation Computing Models\nQuantum Computing\nIl principio di indeterminazione di Heisenberg \ne un qubit\nprincipio di indeterminazione  di \nHeisenberg\n•nella meccanica quantistica il principio stabilisce \nl'impossibilità di determinare con precisione a \npriori illimitata i valori di due variabili \nincompatibili, che specificano lo stato di una \nparticella\n–es. posizione e velocità\n•indaghiamo il principio usando il quantum \ncomputing\n21\n2",
    "dataExtraction\\data_test\\rootfolder\\varie\\ricette\\15-quantum-un-qubit-heisenberg-02.pdf#1": "10/6/2021\n215-quantum -un-qubit -Heisenberg -02\ndue basi\n•usiamo due basi per descrivere lo stesso qubit\n–la base costituita dai vettori |0e|1\n–e la base costituita da |ۧ+=ൗ1\n2|0+ൗ1\n2|1e \n|ۧ−=ൗ1\n2|0−ൗ1\n2|1\n30\n1= |1\n1\n0=|0|+\nൗ𝜋4\n|−\n|ۧ+e |ۧ−è una base\n•in primo luogo |ۧ+=ൗ1\n2|0+ൗ1\n2|1è \neffettivamente uno stato\n–infatti ൗ1\n22\n+ൗ1\n22\n=Τ12+Τ12=1\n•e anche |ۧ−=ൗ1\n2|0−ൗ1\n2|1è \neffettivamente uno stato\n–infatti ൗ1\n22\n+−ൗ1\n22\n=Τ12+Τ12=1\n43\n4",
    "dataExtraction\\data_test\\rootfolder\\varie\\ricette\\15-quantum-un-qubit-heisenberg-02.pdf#2": "10/6/2021\n315-quantum -un-qubit -Heisenberg -02\n|ۧ+e |ۧ−è una base\n•inoltre |ۧ+e |ۧ−sono perpendicolari tra loro\n•per dimostrarlo basta calcolare il loro prodotto \nscalare +−=ൗ1\n2ൗ1\n2ൗ1\n2\n−ൗ1\n2e osservare \nche ha valore nullo\n5\ndue misure\n•dato un qubit|𝜓, possiamo misurarlo sia usando \nla base |0e|1sia usando la base |ۧ+e |ۧ−\n•la prima misura la chiamiamo bit-value e la \nseconda sign -value\n6|1\n|0|+\nൗ𝜋4\n|−|𝜓5\n6",
    "dataExtraction\\data_test\\rootfolder\\varie\\ricette\\15-quantum-un-qubit-heisenberg-02.pdf#3": "10/6/2021\n415-quantum -un-qubit -Heisenberg -02\nposizione e velocità\n•immaginiamo ora che il bit -value corrisponda \nalla posizione e che il sign-value corrisponda alla \nvelocità\n7|1\n|0|+\nൗ𝜋4\n|−|𝜓\nposizione e velocità\n•è possibile in un certo istante conoscere \nposizione e velocità di un qubit ?\n8|1\n|0|+\nൗ𝜋4\n|−|𝜓7\n8",
    "dataExtraction\\data_test\\rootfolder\\varie\\ricette\\15-quantum-un-qubit-heisenberg-02.pdf#4": "10/6/2021\n515-quantum -un-qubit -Heisenberg -02\nconoscenza perfetta del bit -value\n•perchè si possa conoscere perfettamente il bit -\nvalue di |𝜓occorre che esso sia |0oppure |1\n9|1\n|0|+\nൗ𝜋4\n|−|𝜓\nconoscenza perfetta del sign-value\n•perchè si possa conoscere perfettamente il sign-\nvalue di |𝜓occorre che esso sia |ۧ+oppure |ۧ−\n10|1\n|0|+\nൗ𝜋4\n|−|𝜓9\n10",
    "dataExtraction\\data_test\\rootfolder\\varie\\ricette\\15-quantum-un-qubit-heisenberg-02.pdf#5": "10/6/2021\n615-quantum -un-qubit -Heisenberg -02\nconoscenza perfetta di entrambi\n•se possiamo conoscere perfettamente il sign-\nvalue di |𝜓, es. perchè esso è molto vicino a |0, \nallora abbiamo molta incertezza sul sign-value\n–è |ۧ+con probabilità Τ12e |ۧ−con probabilità Τ12\n11|1\n|0|+\nൗ𝜋4\n|−|𝜓\n11"
}